//
// +-------------------------------------------------------------------------+
// |      This file was generated by The Interactive Disassembler (IDA)      |
// |           Copyright (c) 2020 Hex-Rays, <support@hex-rays.com>           |
// |                      License info: 48-71D0-4325-7D                      |
// |                       Oscar Agreda, Personal use                        |
// +-------------------------------------------------------------------------+
//
//
//      This file should be used in the following way:
//         - reload executable into IDA with using switch -c
//         - use File, Load IDC file and load this file.
//
//      NOTE: This file doesn't contain all information from the database.
//

#define UNLOADED_FILE   1
#include <idc.idc>

static main(void)
{
        // set 'loading idc file' mode
        set_inf_attr(INF_GENFLAGS, INFFL_LOADIDC|get_inf_attr(INF_GENFLAGS));
        GenInfo();            // various settings
        Segments();           // segmentation
        Enums();              // enumerations
        Structures();         // structure types
        ApplyStrucTInfos();   // structure type infos
        Patches();            // manual patches
        SegRegs();            // segment register values
        Bytes();              // individual bytes (code,data)
        Functions();          // function definitions
        // clear 'loading idc file' mode
        set_inf_attr(INF_GENFLAGS, ~INFFL_LOADIDC&get_inf_attr(INF_GENFLAGS));
}

//------------------------------------------------------------------------
// General information

static GenInfo(void) {

        delete_all_segments();    // purge database
	set_processor_type("metapc", SETPROC_USER);
	set_inf_attr(INF_COMPILER, 1);
	set_inf_attr(INF_STRLIT_BREAK, 0xA);
	set_flag(INF_CMTFLAG, SW_ALLCMT, 0);
	set_flag(INF_OUTFLAGS, OFLG_SHOW_VOID, 0);
	set_inf_attr(INF_XREFNUM, 2);
	set_flag(INF_OUTFLAGS, OFLG_SHOW_AUTO, 1);
	set_inf_attr(INF_INDENT, 16);
	set_inf_attr(INF_COMMENT, 40);
	set_inf_attr(INF_MAXREF, 0x10);
	add_default_til("mssdk_win7");
}

//------------------------------------------------------------------------
// Information about segmentation

static Segments(void) {
	set_selector(0X1,0);
	set_selector(0X2,0);
	set_selector(0X3,0);
	set_selector(0X4,0);
	set_selector(0X5,0);

	add_segm_ex(0XE51000,0XE5A000,0X1,1,3,2,ADDSEG_NOSREG);
	SegRename(0XE51000,".text");
	SegClass (0XE51000,"CODE");
	SegDefReg(0xE51000,"es",0x0);
	SegDefReg(0xE51000,"ss",0x0);
	SegDefReg(0xE51000,"ds",0x3);
	set_segm_type(0XE51000,2);
	add_segm_ex(0XE5A000,0XE5A1E0,0X5,1,3,2,ADDSEG_NOSREG);
	SegRename(0XE5A000,".idata");
	SegClass (0XE5A000,"DATA");
	SegDefReg(0xE5A000,"es",0x0);
	SegDefReg(0xE5A000,"ss",0x0);
	SegDefReg(0xE5A000,"ds",0x3);
	set_segm_type(0XE5A000,1);
	add_segm_ex(0XE5A1E0,0XE5B000,0X2,1,3,2,ADDSEG_NOSREG);
	SegRename(0XE5A1E0,".rdata");
	SegClass (0XE5A1E0,"DATA");
	SegDefReg(0xE5A1E0,"es",0x0);
	SegDefReg(0xE5A1E0,"ss",0x0);
	SegDefReg(0xE5A1E0,"ds",0x3);
	set_segm_type(0XE5A1E0,3);
	add_segm_ex(0XE5B000,0XE5E000,0X3,1,3,2,ADDSEG_NOSREG);
	SegRename(0XE5B000,".data");
	SegClass (0XE5B000,"DATA");
	SegDefReg(0xE5B000,"es",0x0);
	SegDefReg(0xE5B000,"ss",0x0);
	SegDefReg(0xE5B000,"ds",0x3);
	set_segm_type(0XE5B000,3);
	add_segm_ex(0XE5F000,0XE63000,0X4,1,3,2,ADDSEG_NOSREG);
	SegRename(0XE5F000,".cdata");
	SegClass (0XE5F000,"DATA");
	SegDefReg(0xE5F000,"es",0x0);
	SegDefReg(0xE5F000,"ss",0x0);
	SegDefReg(0xE5F000,"ds",0x3);
	set_segm_type(0XE5F000,3);
	set_inf_attr(INF_LOW_OFF, 0x10000);
	set_inf_attr(INF_HIGH_OFF, 0x7FFE1000);
}

static Enums_0(id) {

	id = add_enum(-1,"_SID_NAME_USE",0x1100000);
	add_enum_member(id,"SidTypeUser",	0X1,	-1);
	add_enum_member(id,"SidTypeGroup",	0X2,	-1);
	add_enum_member(id,"SidTypeDomain",	0X3,	-1);
	add_enum_member(id,"SidTypeAlias",	0X4,	-1);
	add_enum_member(id,"SidTypeWellKnownGroup",	0X5,	-1);
	add_enum_member(id,"SidTypeDeletedAccount",	0X6,	-1);
	add_enum_member(id,"SidTypeInvalid",	0X7,	-1);
	add_enum_member(id,"SidTypeUnknown",	0X8,	-1);
	add_enum_member(id,"SidTypeComputer",	0X9,	-1);
	add_enum_member(id,"SidTypeLabel",	0XA,	-1);
	add_enum_member(id,"SidTypeLogonSession",	0XB,	-1);
	return id;
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
        begin_type_updating(UTP_ENUM);
	id = Enums_0(id);
        end_type_updating(UTP_ENUM);
}

static ApplyStrucTInfos_0(void) {
        auto id;
	id = get_struc_id("sockaddr");
	SetType(get_member_id(id, 0x0), "ADDRESS_FAMILY");
	SetType(get_member_id(id, 0x2), "CHAR[14]");
	id = get_struc_id("_NETRESOURCEW");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	SetType(get_member_id(id, 0x8), "DWORD");
	SetType(get_member_id(id, 0xC), "DWORD");
	SetType(get_member_id(id, 0x10), "LPWSTR");
	SetType(get_member_id(id, 0x14), "LPWSTR");
	SetType(get_member_id(id, 0x18), "LPWSTR");
	SetType(get_member_id(id, 0x1C), "LPWSTR");
	id = get_struc_id("_LUID");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "LONG");
	id = get_struc_id("_TOKEN_PRIVILEGES");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "LUID_AND_ATTRIBUTES[1]");
	id = get_struc_id("LUID_AND_ATTRIBUTES");
	SetType(get_member_id(id, 0x0), "LUID");
	SetType(get_member_id(id, 0x8), "DWORD");
	id = get_struc_id("LUID");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "LONG");
	id = get_struc_id("SHELLEXECUTEINFOW");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "ULONG");
	SetType(get_member_id(id, 0x8), "HWND");
	SetType(get_member_id(id, 0xC), "LPCWSTR");
	SetType(get_member_id(id, 0x10), "LPCWSTR");
	SetType(get_member_id(id, 0x14), "LPCWSTR");
	SetType(get_member_id(id, 0x18), "LPCWSTR");
	SetType(get_member_id(id, 0x1C), "int");
	SetType(get_member_id(id, 0x20), "HINSTANCE");
	SetType(get_member_id(id, 0x24), "void *");
	SetType(get_member_id(id, 0x28), "LPCWSTR");
	SetType(get_member_id(id, 0x2C), "HKEY");
	SetType(get_member_id(id, 0x30), "DWORD");
	SetType(get_member_id(id, 0x34), "_SHELLEXECUTEINFOW::$D915D6B2B775D926C11EEA321E8940B4");
	SetType(get_member_id(id, 0x38), "HANDLE");
	id = get_struc_id("_SHELLEXECUTEINFOW::$D915D6B2B775D926C11EEA321E8940B4");
	SetType(get_member_id(id, 0x0), "HANDLE");
	SetType(get_member_id(id, 0x1), "HANDLE");
	id = get_struc_id("BIND_OPTS");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	SetType(get_member_id(id, 0x8), "DWORD");
	SetType(get_member_id(id, 0xC), "DWORD");
	id = get_struc_id("IID");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned __int16");
	SetType(get_member_id(id, 0x6), "unsigned __int16");
	SetType(get_member_id(id, 0x8), "unsigned __int8[8]");
	id = get_struc_id("_SID_IDENTIFIER_AUTHORITY");
	SetType(get_member_id(id, 0x0), "BYTE[6]");
	id = get_struc_id("_STARTUPINFOW");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "LPWSTR");
	SetType(get_member_id(id, 0x8), "LPWSTR");
	SetType(get_member_id(id, 0xC), "LPWSTR");
	SetType(get_member_id(id, 0x10), "DWORD");
	SetType(get_member_id(id, 0x14), "DWORD");
	SetType(get_member_id(id, 0x18), "DWORD");
	SetType(get_member_id(id, 0x1C), "DWORD");
	SetType(get_member_id(id, 0x20), "DWORD");
	SetType(get_member_id(id, 0x24), "DWORD");
	SetType(get_member_id(id, 0x28), "DWORD");
	SetType(get_member_id(id, 0x2C), "DWORD");
	SetType(get_member_id(id, 0x30), "WORD");
	SetType(get_member_id(id, 0x32), "WORD");
	SetType(get_member_id(id, 0x34), "LPBYTE");
	SetType(get_member_id(id, 0x38), "HANDLE");
	SetType(get_member_id(id, 0x3C), "HANDLE");
	SetType(get_member_id(id, 0x40), "HANDLE");
	id = get_struc_id("_PROCESS_INFORMATION");
	SetType(get_member_id(id, 0x0), "HANDLE");
	SetType(get_member_id(id, 0x4), "HANDLE");
	SetType(get_member_id(id, 0x8), "DWORD");
	SetType(get_member_id(id, 0xC), "DWORD");
	id = get_struc_id("_SECURITY_ATTRIBUTES");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "LPVOID");
	SetType(get_member_id(id, 0x8), "BOOL");
	id = get_struc_id("PROCESSENTRY32W");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	SetType(get_member_id(id, 0x8), "DWORD");
	SetType(get_member_id(id, 0xC), "ULONG_PTR");
	SetType(get_member_id(id, 0x10), "DWORD");
	SetType(get_member_id(id, 0x14), "DWORD");
	SetType(get_member_id(id, 0x18), "DWORD");
	SetType(get_member_id(id, 0x1C), "LONG");
	SetType(get_member_id(id, 0x20), "DWORD");
	SetType(get_member_id(id, 0x24), "WCHAR[260]");
	id = get_struc_id("fd_set");
	SetType(get_member_id(id, 0x0), "u_int");
	SetType(get_member_id(id, 0x4), "SOCKET[64]");
	id = get_struc_id("timeval");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	id = get_struc_id("_WIN32_FIND_DATAW");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "FILETIME");
	SetType(get_member_id(id, 0xC), "FILETIME");
	SetType(get_member_id(id, 0x14), "FILETIME");
	SetType(get_member_id(id, 0x1C), "DWORD");
	SetType(get_member_id(id, 0x20), "DWORD");
	SetType(get_member_id(id, 0x24), "DWORD");
	SetType(get_member_id(id, 0x28), "DWORD");
	SetType(get_member_id(id, 0x2C), "WCHAR[260]");
	SetType(get_member_id(id, 0x234), "WCHAR[14]");
	id = get_struc_id("FILETIME");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	id = get_struc_id("_RTL_CRITICAL_SECTION");
	SetType(get_member_id(id, 0x0), "PRTL_CRITICAL_SECTION_DEBUG");
	SetType(get_member_id(id, 0x4), "LONG");
	SetType(get_member_id(id, 0x8), "LONG");
	SetType(get_member_id(id, 0xC), "HANDLE");
	SetType(get_member_id(id, 0x10), "HANDLE");
	SetType(get_member_id(id, 0x14), "ULONG_PTR");
	id = get_struc_id("LARGE_INTEGER");
	SetType(get_member_id(id, 0x0), "_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E");
	SetType(get_member_id(id, 0x1), "_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E");
	SetType(get_member_id(id, 0x2), "LONGLONG");
	id = get_struc_id("_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "LONG");
	id = get_struc_id("_SYSTEMTIME");
	SetType(get_member_id(id, 0x0), "WORD");
	SetType(get_member_id(id, 0x2), "WORD");
	SetType(get_member_id(id, 0x4), "WORD");
	SetType(get_member_id(id, 0x6), "WORD");
	SetType(get_member_id(id, 0x8), "WORD");
	SetType(get_member_id(id, 0xA), "WORD");
	SetType(get_member_id(id, 0xC), "WORD");
	SetType(get_member_id(id, 0xE), "WORD");
	id = get_struc_id("_FILETIME");
	SetType(get_member_id(id, 0x0), "DWORD");
	SetType(get_member_id(id, 0x4), "DWORD");
	return id;
}

//------------------------------------------------------------------------
// Information about type information for structure members

static ApplyStrucTInfos() {
	ApplyStrucTInfos_0();
}

static Structures_0(id) {
        auto mid;

	id = add_struc(-1,"sockaddr",0);
	id = add_struc(-1,"_NETRESOURCEW",0);
	id = add_struc(-1,"_LUID",0);
	id = add_struc(-1,"_TOKEN_PRIVILEGES",0);
	id = add_struc(-1,"LUID_AND_ATTRIBUTES",0);
	id = add_struc(-1,"LUID",0);
	id = add_struc(-1,"SHELLEXECUTEINFOW",0);
	id = add_struc(-1,"_SHELLEXECUTEINFOW::$D915D6B2B775D926C11EEA321E8940B4",1);
	id = add_struc(-1,"BIND_OPTS",0);
	id = add_struc(-1,"IID",0);
	id = add_struc(-1,"_SID_IDENTIFIER_AUTHORITY",0);
	id = add_struc(-1,"_STARTUPINFOW",0);
	id = add_struc(-1,"_PROCESS_INFORMATION",0);
	id = add_struc(-1,"_SECURITY_ATTRIBUTES",0);
	id = add_struc(-1,"PROCESSENTRY32W",0);
	id = add_struc(-1,"fd_set",0);
	id = add_struc(-1,"timeval",0);
	id = add_struc(-1,"_WIN32_FIND_DATAW",0);
	id = add_struc(-1,"FILETIME",0);
	id = add_struc(-1,"_RTL_CRITICAL_SECTION",0);
	id = add_struc(-1,"LARGE_INTEGER",1);
	id = add_struc(-1,"_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E",0);
	id = add_struc(-1,"_SYSTEMTIME",0);
	id = add_struc(-1,"_FILETIME",0);
	
	id = get_struc_id("sockaddr");
	mid = add_struc_member(id,"sa_family",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"sa_data",	0X2,	0x000400,	-1,	14);
	set_struc_align(id,1);
	
	id = get_struc_id("_NETRESOURCEW");
	mid = add_struc_member(id,"dwScope",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwType",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwDisplayType",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwUsage",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lpLocalName",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lpRemoteName",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lpComment",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lpProvider",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("_LUID");
	mid = add_struc_member(id,"LowPart",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"HighPart",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("LUID");
	mid = add_struc_member(id,"LowPart",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"HighPart",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("LUID_AND_ATTRIBUTES");
	mid = add_struc_member(id,"Luid",	0,	0x60000400,	get_struc_id("LUID"),	8);
	mid = add_struc_member(id,"Attributes",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_TOKEN_PRIVILEGES");
	mid = add_struc_member(id,"PrivilegeCount",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Privileges",	0X4,	0x60000400,	get_struc_id("LUID_AND_ATTRIBUTES"),	12);
	set_struc_align(id,2);
	
	id = get_struc_id("_SHELLEXECUTEINFOW::$D915D6B2B775D926C11EEA321E8940B4");
	mid = add_struc_member(id,"hIcon",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hMonitor",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = get_struc_id("SHELLEXECUTEINFOW");
	mid = add_struc_member(id,"cbSize",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fMask",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"hwnd",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lpVerb",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lpFile",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lpParameters",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lpDirectory",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"nShow",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"hInstApp",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lpIDList",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lpClass",	0X28,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hkeyClass",	0X2C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"dwHotKey",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"anonymous_0",	0X34,	0x60000400,	get_struc_id("_SHELLEXECUTEINFOW::$D915D6B2B775D926C11EEA321E8940B4"),	4);
	mid = add_struc_member(id,"hProcess",	0X38,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = get_struc_id("BIND_OPTS");
	mid = add_struc_member(id,"cbStruct",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"grfFlags",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"grfMode",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwTickCountDeadline",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("IID");
	mid = add_struc_member(id,"Data1",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Data2",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"Data3",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"Data4",	0X8,	0x000400,	-1,	8);
	set_struc_align(id,2);
	
	id = get_struc_id("_SID_IDENTIFIER_AUTHORITY");
	mid = add_struc_member(id,"Value",	0,	0x000400,	-1,	6);
	
	id = get_struc_id("_STARTUPINFOW");
	mid = add_struc_member(id,"cb",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lpReserved",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lpDesktop",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lpTitle",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"dwX",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwY",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwXSize",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwYSize",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwXCountChars",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwYCountChars",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwFillAttribute",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwFlags",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"wShowWindow",	0X30,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"cbReserved2",	0X32,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"lpReserved2",	0X34,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hStdInput",	0X38,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hStdOutput",	0X3C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hStdError",	0X40,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("_PROCESS_INFORMATION");
	mid = add_struc_member(id,"hProcess",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hThread",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"dwProcessId",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwThreadId",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_SECURITY_ATTRIBUTES");
	mid = add_struc_member(id,"nLength",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lpSecurityDescriptor",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"bInheritHandle",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("PROCESSENTRY32W");
	mid = add_struc_member(id,"dwSize",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"cntUsage",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"th32ProcessID",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"th32DefaultHeapID",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"th32ModuleID",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"cntThreads",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"th32ParentProcessID",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pcPriClassBase",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwFlags",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"szExeFile",	0X24,	0x10000400,	-1,	520);
	set_struc_align(id,2);
	
	id = get_struc_id("fd_set");
	mid = add_struc_member(id,"fd_count",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fd_array",	0X4,	0x20000400,	-1,	256);
	set_struc_align(id,2);
	
	id = get_struc_id("timeval");
	mid = add_struc_member(id,"tv_sec",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tv_usec",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("FILETIME");
	mid = add_struc_member(id,"dwLowDateTime",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwHighDateTime",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_WIN32_FIND_DATAW");
	mid = add_struc_member(id,"dwFileAttributes",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ftCreationTime",	0X4,	0x60000400,	get_struc_id("FILETIME"),	8);
	mid = add_struc_member(id,"ftLastAccessTime",	0XC,	0x60000400,	get_struc_id("FILETIME"),	8);
	mid = add_struc_member(id,"ftLastWriteTime",	0X14,	0x60000400,	get_struc_id("FILETIME"),	8);
	mid = add_struc_member(id,"nFileSizeHigh",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"nFileSizeLow",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwReserved0",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwReserved1",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"cFileName",	0X2C,	0x10000400,	-1,	520);
	mid = add_struc_member(id,"cAlternateFileName",	0X234,	0x10000400,	-1,	28);
	set_struc_align(id,2);
	
	id = get_struc_id("_RTL_CRITICAL_SECTION");
	mid = add_struc_member(id,"DebugInfo",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"LockCount",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"RecursionCount",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"OwningThread",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"LockSemaphore",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SpinCount",	0X14,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E");
	mid = add_struc_member(id,"LowPart",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"HighPart",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("LARGE_INTEGER");
	mid = add_struc_member(id,"anonymous_0",	0,	0x60000400,	get_struc_id("_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E"),	8);
	mid = add_struc_member(id,"u",	0,	0x60000400,	get_struc_id("_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E"),	8);
	mid = add_struc_member(id,"QuadPart",	0,	0x30000400,	-1,	8);
	set_struc_align(id,3);
	
	id = get_struc_id("_SYSTEMTIME");
	mid = add_struc_member(id,"wYear",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wMonth",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wDayOfWeek",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wDay",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wHour",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wMinute",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wSecond",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wMilliseconds",	0XE,	0x10000400,	-1,	2);
	set_struc_align(id,1);
	
	id = get_struc_id("_FILETIME");
	mid = add_struc_member(id,"dwLowDateTime",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwHighDateTime",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	return id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
        begin_type_updating(UTP_STRUCT);
	id = Structures_0(id);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_0(void) {
        auto x;
#define id x

	update_extra_cmt		(0XE51000,	E_PREV + 0,	"; File Name   : C:\\Users\\QWER\\Desktop\\lsbd_pg\\Music\\111\\Kport\\Br\\2\\Fast.bin");
	update_extra_cmt		(0XE51000,	E_PREV + 1,	"; Format      : Portable executable for 80386 (PE)");
	update_extra_cmt		(0XE51000,	E_PREV + 2,	"; Imagebase   : 400000");
	update_extra_cmt		(0XE51000,	E_PREV + 3,	"; Timestamp   : 5E8350F5 (Tue Mar 31 14:17:25 2020)");
	update_extra_cmt		(0XE51000,	E_PREV + 4,	"; Section 1. (virtual address 00001000)");
	update_extra_cmt		(0XE51000,	E_PREV + 5,	"; Virtual size                  : 00008598 (  34200.)");
	update_extra_cmt		(0XE51000,	E_PREV + 6,	"; Section size in file          : 00008600 (  34304.)");
	update_extra_cmt		(0XE51000,	E_PREV + 7,	"; Offset to raw data for section: 00000400");
	update_extra_cmt		(0XE51000,	E_PREV + 8,	"; Flags 60000020: Text Executable Readable");
	update_extra_cmt		(0XE51000,	E_PREV + 9,	"; Alignment     : default");
	create_insn	(0XE51000);
	create_insn	(x=0XE51003);
	op_hex		(x,	1);
	create_insn	(x=0XE5100B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51015);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE51028);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51033);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5103E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5104C);
	op_stkvar	(x,	0);
	set_cmt	(0XE51054,	"dwBytes",	0);
	create_insn	(x=0XE51059);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51061);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE51065);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51068);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5106D);
	op_hex		(x,	1);
	create_insn	(x=0XE51070);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51073);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5107B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51086);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51090);
	op_hex		(x,	1);
	create_insn	(x=0XE51093);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51096);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5109F);
	op_stkvar	(x,	1);
	create_insn	(x=0XE510A6);
	op_stkvar	(x,	1);
	create_insn	(x=0XE510CE);
	op_stkvar	(x,	0);
	create_insn	(x=0XE510D2);
	op_stkvar	(x,	1);
	create_insn	(x=0XE510D6);
	op_stkvar	(x,	1);
	create_insn	(x=0XE510EF);
	op_stkvar	(x,	1);
	create_insn	(x=0XE510FA);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE51106);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51111);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5111B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51121);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51127);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5112B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51131);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51139);
	op_hex		(x,	1);
	create_insn	(x=0XE51140);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51149);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5114E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5115C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51162);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51165);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5116F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51172);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51178);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5117E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51182);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51188);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51190);
	op_hex		(x,	1);
	create_insn	(x=0XE51197);
	op_stkvar	(x,	0);
	create_insn	(x=0XE511A0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE511A5);
	op_stkvar	(x,	0);
	create_insn	(x=0XE511B3);
	op_stkvar	(x,	0);
	create_insn	(x=0XE511B6);
	op_stkvar	(x,	0);
	create_insn	(x=0XE511B9);
	op_stkvar	(x,	0);
	create_insn	(x=0XE511BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE511C5);
	op_stkvar	(x,	0);
	create_insn	(x=0XE511D0);
	op_stkvar	(x,	1);
	set_cmt	(0XE511D3,	"lpMem",	0);
	create_insn	(x=0XE511D3);
	op_stkvar	(x,	0);
	set_cmt	(0XE511DC,	"lpMem",	0);
	create_insn	(x=0XE511DC);
	op_stkvar	(x,	0);
	set_cmt	(0XE511E5,	"lpMem",	0);
	create_insn	(x=0XE511E5);
	op_stkvar	(x,	0);
	set_cmt	(0XE511EE,	"lpMem",	0);
	create_insn	(x=0XE511EE);
	op_stkvar	(x,	0);
	set_cmt	(0XE511F7,	"lpMem",	0);
	set_cmt	(0XE511FE,	"lpMem",	0);
	create_insn	(x=0XE511FE);
	op_stkvar	(x,	0);
	set_cmt	(0XE51207,	"lpMem",	0);
	create_insn	(x=0XE51207);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5120F);
	op_stkvar	(x,	0);
	set_cmt	(0XE51216,	"lpMem",	0);
	create_insn	(x=0XE51216);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5121F);
	op_stkvar	(x,	0);
	set_cmt	(0XE51225,	"lpMem",	0);
	create_insn	(x=0XE51225);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5122E);
	op_stkvar	(x,	1);
	create_insn	(0XE51236);
	create_insn	(x=0XE51239);
	op_hex		(x,	1);
	create_insn	(x=0XE51244);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5124E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51256);
	op_hex		(x,	1);
	create_insn	(x=0XE5125B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51266);
	op_stkvar	(x,	0);
	set_cmt	(0XE51274,	"dwBytes",	0);
	create_insn	(x=0XE51275);
	op_stkvar	(x,	0);
	set_cmt	(0XE5127E,	"dwBytes",	0);
	create_insn	(x=0XE5127F);
	op_stkvar	(x,	0);
	set_cmt	(0XE51288,	"dwBytes",	0);
	create_insn	(x=0XE51289);
	op_stkvar	(x,	0);
	set_cmt	(0XE51292,	"dwBytes",	0);
	create_insn	(x=0XE51293);
	op_stkvar	(x,	0);
	set_cmt	(0XE5129C,	"dwBytes",	0);
	set_cmt	(0XE512A5,	"dwBytes",	0);
	create_insn	(x=0XE512A6);
	op_stkvar	(x,	0);
	create_insn	(x=0XE512AF);
	op_stkvar	(x,	0);
	create_insn	(x=0XE512B2);
	op_stkvar	(x,	0);
	create_insn	(x=0XE512BD);
	op_stkvar	(x,	0);
	set_cmt	(0XE512C6,	"lpFilename",	0);
	create_insn	(x=0XE512C6);
	op_stkvar	(x,	0);
	create_insn	(x=0XE512D7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE512E0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE512E9);
	op_stkvar	(x,	0);
	create_insn	(x=0XE512FA);
	op_stkvar	(x,	0);
	create_insn	(x=0XE512FD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE51303);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5130E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51316);
	op_hex		(x,	1);
	create_insn	(x=0XE51321);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5132D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5133F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5134B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5135D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51361);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5136D);
	op_hex		(x,	1);
	set_cmt	(0XE51378,	"bFailIfExists",	0);
	set_cmt	(0XE5137A,	"lpNewFileName",	0);
	set_cmt	(0XE5137B,	"lpExistingFileName",	0);
	create_insn	(x=0XE5137B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5137E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE51393);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51396);
	op_stkvar	(x,	1);
	set_cmt	(0XE51399,	"phkResult",	0);
	set_cmt	(0XE5139A,	"samDesired",	0);
	set_cmt	(0XE5139F,	"ulOptions",	0);
	set_cmt	(0XE513A1,	"lpSubKey",	0);
	create_insn	(x=0XE513A1);
	op_stkvar	(x,	0);
	set_cmt	(0XE513A4,	"hKey",	0);
	create_insn	(x=0XE513A9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE513B3);
	op_stkvar	(x,	1);
	set_cmt	(0XE513B6,	"lpData",	0);
	set_cmt	(0XE513B7,	"lpValueName",	0);
	create_insn	(x=0XE513B7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE513BA);
	op_stkvar	(x,	1);
	create_insn	(x=0XE513C4);
	op_stkvar	(x,	0);
	create_insn	(x=0XE513C7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE513CE);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE513D9);
	op_stkvar	(x,	0);
	create_insn	(x=0XE513DC);
	op_stkvar	(x,	1);
	set_cmt	(0XE513DF,	"phkResult",	0);
	set_cmt	(0XE513E0,	"samDesired",	0);
	set_cmt	(0XE513E5,	"ulOptions",	0);
	set_cmt	(0XE513E7,	"lpSubKey",	0);
	create_insn	(x=0XE513E7);
	op_stkvar	(x,	0);
	set_cmt	(0XE513EA,	"hKey",	0);
	create_insn	(x=0XE513EF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE513F9);
	op_stkvar	(x,	1);
	set_cmt	(0XE513FC,	"lpData",	0);
	set_cmt	(0XE513FD,	"lpValueName",	0);
	create_insn	(x=0XE513FD);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51400);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5140A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XE51411);
	create_insn	(x=0XE51413);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5141F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51423);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5142F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51437);
	op_hex		(x,	1);
	set_cmt	(0XE5143E,	"bFailIfExists",	0);
	set_cmt	(0XE51440,	"lpNewFileName",	0);
	set_cmt	(0XE51441,	"lpExistingFileName",	0);
	create_insn	(x=0XE51441);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51444);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE5144A,	"lpFileName",	0);
	create_insn	(x=0XE5144B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE51456);
	op_hex		(x,	1);
	set_cmt	(0XE51459,	"dwFileAttributes",	0);
	set_cmt	(0XE5145A,	"lpFileName",	0);
	create_insn	(x=0XE5145B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE51461);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5146B);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5146F);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51477);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51483);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE5148B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5148F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5149B);
	op_hex		(x,	1);
	set_cmt	(0XE514A2,	"bFailIfExists",	0);
	set_cmt	(0XE514A4,	"lpNewFileName",	0);
	set_cmt	(0XE514A5,	"lpExistingFileName",	0);
	create_insn	(x=0XE514A5);
	op_stkvar	(x,	0);
	create_insn	(x=0XE514A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE514AE);
	op_stkvar	(x,	0);
	create_insn	(x=0XE514B2);
	op_stkvar	(x,	0);
	create_insn	(x=0XE514BE);
	op_hex		(x,	1);
	set_cmt	(0XE514C5,	"bFailIfExists",	0);
	set_cmt	(0XE514C7,	"lpNewFileName",	0);
	set_cmt	(0XE514C8,	"lpExistingFileName",	0);
	create_insn	(x=0XE514C8);
	op_stkvar	(x,	0);
	create_insn	(x=0XE514CB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE514D1,	"lpFileName",	0);
	create_insn	(x=0XE514D2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE514DD);
	op_hex		(x,	1);
	set_cmt	(0XE514E0,	"dwFileAttributes",	0);
	set_cmt	(0XE514E1,	"lpFileName",	0);
	create_insn	(x=0XE514E2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE514E8);
	op_stkvar	(x,	0);
	create_insn	(x=0XE514EB);
	op_stkvar	(x,	0);
	create_insn	(x=0XE514EE);
	op_stkvar	(x,	1);
	create_insn	(x=0XE514F6);
	op_stkvar	(x,	0);
	set_cmt	(0XE514FE,	"lpMem",	0);
	create_insn	(x=0XE514FE);
	op_stkvar	(x,	0);
	set_cmt	(0XE51507,	"lpMem",	0);
	create_insn	(x=0XE51507);
	op_stkvar	(x,	0);
	set_cmt	(0XE51510,	"lpMem",	0);
	create_insn	(x=0XE51510);
	op_stkvar	(x,	0);
	set_cmt	(0XE51519,	"lpMem",	0);
	create_insn	(x=0XE51519);
	op_stkvar	(x,	0);
	set_cmt	(0XE51522,	"lpMem",	0);
	create_insn	(x=0XE51522);
	op_stkvar	(x,	0);
	set_cmt	(0XE5152B,	"lpMem",	0);
	set_cmt	(0XE51532,	"lpMem",	0);
	create_insn	(x=0XE51532);
	op_stkvar	(x,	0);
	set_cmt	(0XE5153B,	"lpMem",	0);
	create_insn	(x=0XE5153B);
	op_stkvar	(x,	0);
	set_cmt	(0XE51544,	"lpMem",	0);
	create_insn	(x=0XE51544);
	op_stkvar	(x,	0);
	set_cmt	(0XE5154D,	"lpMem",	0);
	create_insn	(x=0XE5154D);
	op_stkvar	(x,	0);
	set_cmt	(0XE51556,	"lpMem",	0);
	create_insn	(x=0XE51556);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5155E);
	op_stkvar	(x,	1);
	create_insn	(0XE51567);
	set_cmt	(0XE5156D,	"lpMem",	0);
	set_cmt	(0XE5157B,	"lpMem",	0);
	set_cmt	(0XE51589,	"lpMem",	0);
	set_cmt	(0XE51597,	"lpMem",	0);
	set_cmt	(0XE5159E,	"lpMem",	0);
	create_insn	(0XE515A6);
	create_insn	(x=0XE515A9);
	op_hex		(x,	1);
	set_cmt	(0XE515AF,	"dwBytes",	0);
	set_cmt	(0XE515B8,	"dwBytes",	0);
	create_insn	(x=0XE515B8);
	op_stkvar	(x,	0);
	create_insn	(x=0XE515D3);
	op_stkvar	(x,	0);
	create_insn	(x=0XE515DB);
	op_hex		(x,	1);
	create_insn	(x=0XE515E0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE515ED);
	op_stkvar	(x,	0);
	create_insn	(x=0XE515F5);
	op_hex		(x,	1);
	create_insn	(x=0XE51619);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5161E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51631);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5164A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5164F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51661);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51676);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5167B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE516A2);
	op_stkvar	(x,	1);
	create_insn	(x=0XE516B7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE516BC);
	op_stkvar	(x,	0);
	set_cmt	(0XE516DD,	"lpMem",	0);
	set_cmt	(0XE516E4,	"lpMem",	0);
	create_insn	(x=0XE516E4);
	op_stkvar	(x,	0);
	set_cmt	(0XE516ED,	"lpMem",	0);
	create_insn	(x=0XE516ED);
	op_stkvar	(x,	0);
	set_cmt	(0XE516F6,	"lpMem",	0);
	create_insn	(x=0XE516F6);
	op_stkvar	(x,	0);
	create_insn	(0XE51706);
	create_insn	(x=0XE51709);
	op_hex		(x,	1);
	create_insn	(x=0XE51717);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51721);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51738);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51743);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51746);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51751);
	op_hex		(x,	1);
	create_insn	(x=0XE51754);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5175F);
	op_stkvar	(x,	0);
	set_cmt	(0XE51771,	"hostlong",	0);
	create_insn	(x=0XE51771);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51774);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5177A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51782);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51785);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51788);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51793);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51796);
	op_hex		(x,	1);
	create_insn	(x=0XE51799);
	op_stkvar	(x,	0);
	create_insn	(x=0XE517A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE517AB);
	op_hex		(x,	1);
	create_insn	(0XE517B1);
	create_insn	(x=0XE517B9);
	op_stkvar	(x,	1);
	create_insn	(x=0XE517C7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE517CA);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE517CE);
	op_stkvar	(x,	0);
	create_insn	(x=0XE517D1);
	op_stkvar	(x,	1);
	create_insn	(x=0XE517D4);
	op_stkvar	(x,	0);
	create_insn	(x=0XE517D7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE517E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE517E3);
	op_hex		(x,	1);
	create_insn	(x=0XE517E6);
	op_stkvar	(x,	1);
	create_insn	(x=0XE517EC);
	op_stkvar	(x,	1);
	set_cmt	(0XE517F7,	"lpMem",	0);
	create_insn	(x=0XE517F7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51801);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51809);
	op_hex		(x,	1);
	create_insn	(x=0XE5180C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51812);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51819);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51824);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51829);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51834);
	op_hex		(x,	1);
	set_cmt	(0XE51837,	"int",	0);
	set_cmt	(0XE51839,	"lpMem",	0);
	set_cmt	(0XE5183F,	"int",	0);
	set_cmt	(0XE51841,	"lpMem",	0);
	set_cmt	(0XE51847,	"int",	0);
	create_insn	(x=0XE51847);
	op_stkvar	(x,	0);
	set_cmt	(0XE5184A,	"lpMem",	0);
	create_insn	(x=0XE5184A);
	op_stkvar	(x,	0);
	set_cmt	(0XE51852,	"int",	0);
	create_insn	(x=0XE51852);
	op_stkvar	(x,	0);
	set_cmt	(0XE51855,	"lpMem",	0);
	create_insn	(x=0XE51855);
	op_stkvar	(x,	0);
	set_cmt	(0XE5185D,	"int",	0);
	set_cmt	(0XE5185F,	"lpMem",	0);
	create_insn	(x=0XE51865);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51868);
	op_hex		(x,	1);
	create_insn	(0XE51870);
	set_cmt	(0XE51877,	"lpMem",	0);
	set_cmt	(0XE5188B,	"lpMem",	0);
	create_insn	(0XE51894);
	create_insn	(x=0XE51897);
	op_hex		(x,	1);
	set_cmt	(0XE5189D,	"dwBytes",	0);
	create_insn	(x=0XE518A7);
	op_stkvar	(x,	1);
	create_insn	(x=0XE518B6);
	op_stkvar	(x,	0);
	create_insn	(x=0XE518C1);
	op_stkvar	(x,	0);
	create_insn	(x=0XE518CC);
	op_stkvar	(x,	0);
	create_insn	(x=0XE518CF);
	op_stkvar	(x,	0);
	create_insn	(x=0XE518D2);
	op_stkvar	(x,	0);
	create_insn	(x=0XE518DA);
	op_stkvar	(x,	0);
	create_insn	(x=0XE518DD);
	op_hex		(x,	1);
	create_insn	(x=0XE518E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE518E3);
	op_stkvar	(x,	0);
	create_insn	(x=0XE518E6);
	op_stkvar	(x,	0);
	create_insn	(x=0XE518E9);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE518F0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE518F3);
	op_stkvar	(x,	0);
	create_insn	(x=0XE518F6);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5190A);
	op_hex		(x,	1);
	create_insn	(x=0XE5190D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51916);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51921);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5192A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5192D);
	op_hex		(x,	1);
	create_insn	(x=0XE51933);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5193B);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5193F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51954);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51958);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51969);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5196D);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5197E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51988);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5199D);
	op_stkvar	(x,	1);
	create_insn	(x=0XE519AE);
	op_stkvar	(x,	0);
	create_insn	(x=0XE519B7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE519C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE519C9);
	op_stkvar	(x,	1);
	create_insn	(x=0XE519D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE519D3);
	op_stkvar	(x,	0);
	create_insn	(x=0XE519D9);
	op_stkvar	(x,	0);
	create_insn	(x=0XE519DC);
	op_stkvar	(x,	0);
	create_insn	(x=0XE519E5);
	op_hex		(x,	1);
	create_insn	(x=0XE519EF);
	op_stkvar	(x,	0);
	create_insn	(x=0XE519F4);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE519FA);
	op_hex		(x,	1);
	create_insn	(x=0XE519FE);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE51A04);
	op_hex		(x,	1);
	create_insn	(x=0XE51A08);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE51A0E);
	op_hex		(x,	1);
	create_insn	(0XE51A14);
	set_cmt	(0XE51A1D,	"int",	0);
	create_insn	(x=0XE51A1D);
	op_stkvar	(x,	0);
	set_cmt	(0XE51A20,	"lpMem",	0);
	create_insn	(x=0XE51A20);
	op_stkvar	(x,	0);
	set_cmt	(0XE51A28,	"lpMem",	0);
	create_insn	(x=0XE51A28);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51A30);
	op_hex		(x,	1);
	set_cmt	(0XE51A33,	"lpMem",	0);
	create_insn	(x=0XE51A33);
	op_stkvar	(x,	0);
	set_cmt	(0XE51A3C,	"lpMem",	0);
	create_insn	(x=0XE51A3C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51A45);
	op_stkvar	(x,	0);
	set_cmt	(0XE51A4A,	"lpMem",	0);
	create_insn	(x=0XE51A4A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51A53);
	op_stkvar	(x,	0);
	set_cmt	(0XE51A58,	"lpMem",	0);
	create_insn	(x=0XE51A58);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51A61);
	op_stkvar	(x,	0);
	set_cmt	(0XE51A66,	"lpMem",	0);
	create_insn	(x=0XE51A66);
	op_stkvar	(x,	0);
	create_insn	(0XE51A76);
	create_insn	(x=0XE51A79);
	op_hex		(x,	1);
	create_insn	(x=0XE51A7C);
	op_hex		(x,	1);
	create_insn	(x=0XE51A82);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE51A8C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51A95);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE51A9A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51AAA);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51AB3);
	op_stkvar	(x,	1);
	set_cmt	(0XE51AB8,	"char",	0);
	set_cmt	(0XE51AB9,	"int",	0);
	set_cmt	(0XE51ABB,	"lpCriticalSection",	0);
	create_insn	(x=0XE51ABE);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51AC7);
	op_hex		(x,	1);
	create_insn	(x=0XE51AD2);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51B00);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51B06);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51B11);
	op_stkvar	(x,	0);
	set_cmt	(0XE51B1B,	"hostlong",	0);
	create_insn	(x=0XE51B1B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51B26);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51B2F);
	op_hex		(x,	1);
	set_cmt	(0XE51B36,	"hObject",	0);
	create_insn	(x=0XE51B37);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE51B44);
	op_stkvar	(x,	0);
	set_cmt	(0XE51B4F,	"hostlong",	0);
	create_insn	(x=0XE51B4F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51B5A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51B63);
	op_hex		(x,	1);
	set_cmt	(0XE51B6A,	"hObject",	0);
	create_insn	(x=0XE51B6B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE51B81);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51B8A);
	op_stkvar	(x,	1);
	set_cmt	(0XE51B97,	"lpMem",	0);
	set_cmt	(0XE51B9E,	"char",	0);
	set_cmt	(0XE51BA0,	"int",	0);
	set_cmt	(0XE51BA2,	"lpCriticalSection",	0);
	create_insn	(x=0XE51BAA);
	op_hex		(x,	1);
	set_cmt	(0XE51BAD,	"lpMem",	0);
	create_insn	(0XE51BBF);
	create_insn	(x=0XE51BC2);
	op_hex		(x,	1);
	create_insn	(x=0XE51BC5);
	op_hex		(x,	1);
	create_insn	(x=0XE51BC8);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	set_cmt	(0XE51BDC,	"dwBytes",	0);
	create_insn	(x=0XE51BE1);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51BEA);
	op_stkvar	(x,	1);
	set_cmt	(0XE51BEE,	"char",	0);
	set_cmt	(0XE51BF0,	"int",	0);
	set_cmt	(0XE51BF2,	"lpCriticalSection",	0);
	create_insn	(x=0XE51BFC);
	op_hex		(x,	1);
	create_insn	(x=0XE51C13);
	op_stkvar	(x,	0);
	set_cmt	(0XE51C2B,	"hostlong",	0);
	create_insn	(x=0XE51C2B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51C3D);
	op_hex		(x,	1);
	set_cmt	(0XE51C44,	"hObject",	0);
	create_insn	(x=0XE51C45);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE51C5A,	"hostlong",	0);
	create_insn	(x=0XE51C5A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51C6C);
	op_hex		(x,	1);
	set_cmt	(0XE51C73,	"hObject",	0);
	create_insn	(x=0XE51C74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE51C7A);
	op_stkvar	(x,	0);
	set_cmt	(0XE51C9D,	"lpMem",	0);
	set_cmt	(0XE51CA4,	"char",	0);
	set_cmt	(0XE51CA6,	"int",	0);
	set_cmt	(0XE51CA8,	"lpCriticalSection",	0);
	create_insn	(x=0XE51CB0);
	op_hex		(x,	1);
	set_cmt	(0XE51CB3,	"lpMem",	0);
	create_insn	(0XE51CC5);
	create_insn	(x=0XE51CC8);
	op_hex		(x,	1);
	create_insn	(x=0XE51CCB);
	op_hex		(x,	1);
	create_insn	(x=0XE51CD1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE51CD7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51CE5);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51CEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE51CF3);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51CFA);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51D05);
	op_stkvar	(x,	1);
	set_cmt	(0XE51D08,	"char",	0);
	set_cmt	(0XE51D09,	"int",	0);
	set_cmt	(0XE51D0B,	"lpCriticalSection",	0);
	create_insn	(x=0XE51D0E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51D17);
	op_hex		(x,	1);
	create_insn	(x=0XE51D1A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51D24);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51D33);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE51D39);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51D45);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51D54);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51D58);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51D66);
	op_stkvar	(x,	0);
	set_cmt	(0XE51D6D,	"hostlong",	0);
	create_insn	(x=0XE51D6D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51D78);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51D84);
	op_hex		(x,	1);
	create_insn	(x=0XE51D8B);
	op_stkvar	(x,	0);
	set_cmt	(0XE51D96,	"hostlong",	0);
	create_insn	(x=0XE51D96);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51DA1);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51DAA);
	op_hex		(x,	1);
	create_insn	(x=0XE51DB3);
	op_stkvar	(x,	1);
	set_cmt	(0XE51DBE,	"dwMilliseconds",	0);
	create_insn	(x=0XE51DC3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE51DD9);
	op_stkvar	(x,	1);
	set_cmt	(0XE51DE6,	"lpMem",	0);
	create_insn	(x=0XE51DE6);
	op_stkvar	(x,	0);
	set_cmt	(0XE51DF0,	"char",	0);
	set_cmt	(0XE51DF1,	"int",	0);
	set_cmt	(0XE51DF3,	"lpCriticalSection",	0);
	create_insn	(x=0XE51DFB);
	op_hex		(x,	1);
	set_cmt	(0XE51DFE,	"lpMem",	0);
	create_insn	(0XE51E10);
	create_insn	(x=0XE51E13);
	op_hex		(x,	1);
	create_insn	(x=0XE51E16);
	op_hex		(x,	1);
	create_insn	(x=0XE51E19);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	set_cmt	(0XE51E28,	"dwBytes",	0);
	create_insn	(x=0XE51E29);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51E2D);
	op_stkvar	(x,	0);
	set_cmt	(0XE51E38,	"dwBytes",	0);
	create_insn	(x=0XE51E38);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51E45);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51E59);
	op_stkvar	(x,	1);
	set_cmt	(0XE51E5D,	"lphEnum",	0);
	set_cmt	(0XE51E5E,	"lpNetResource",	0);
	create_insn	(x=0XE51E5E);
	op_stkvar	(x,	0);
	set_cmt	(0XE51E61,	"dwUsage",	0);
	set_cmt	(0XE51E62,	"dwType",	0);
	set_cmt	(0XE51E63,	"dwScope",	0);
	create_insn	(x=0XE51E63);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51E66);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE51E74);
	op_stkvar	(x,	1);
	set_cmt	(0XE51E78,	"lpBufferSize",	0);
	set_cmt	(0XE51E79,	"lpBuffer",	0);
	create_insn	(x=0XE51E7A);
	op_stkvar	(x,	1);
	set_cmt	(0XE51E7E,	"lpcCount",	0);
	set_cmt	(0XE51E7F,	"hEnum",	0);
	create_insn	(x=0XE51E7F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51E83);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE51E91);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51EA9);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51EAD);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51EB1);
	op_hex		(x,	1);
	create_insn	(x=0XE51EB6);
	op_hex		(x,	1);
	create_insn	(x=0XE51EBC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51EC7);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51EF5);
	op_stkvar	(x,	1);
	set_cmt	(0XE51EFA,	"int",	0);
	set_cmt	(0XE51EFB,	"int",	0);
	create_insn	(x=0XE51EFB);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51EFE);
	op_hex		(x,	1);
	set_cmt	(0XE51F01,	"int",	0);
	create_insn	(x=0XE51F01);
	op_stkvar	(x,	0);
	set_cmt	(0XE51F06,	"int",	0);
	set_cmt	(0XE51F07,	"lpNetResource",	0);
	set_cmt	(0XE51F08,	"dwScope",	0);
	create_insn	(x=0XE51F08);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51F10);
	op_hex		(x,	1);
	create_insn	(x=0XE51F18);
	op_hex		(x,	1);
	create_insn	(x=0XE51F36);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51F3C);
	op_hex		(x,	1);
	create_insn	(x=0XE51F3F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE51F4D);
	op_hex		(x,	1);
	create_insn	(x=0XE51F52);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51F58);
	op_hex		(x,	1);
	create_insn	(x=0XE51F5F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51F65);
	op_hex		(x,	1);
	create_insn	(0XE51F6E);
	create_insn	(x=0XE51F7B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE51F80);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51F89);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51F8D);
	op_hex		(x,	1);
	create_insn	(x=0XE51F9A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51FA1);
	op_stkvar	(x,	0);
	create_insn	(x=0XE51FAF);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51FBA);
	op_stkvar	(x,	0);
	set_cmt	(0XE51FCA,	"hostlong",	0);
	create_insn	(x=0XE51FD2);
	op_stkvar	(x,	1);
	create_insn	(x=0XE51FDB);
	op_hex		(x,	1);
	set_cmt	(0XE51FE2,	"hObject",	0);
	create_insn	(x=0XE51FE3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE51FF0);
	op_stkvar	(x,	0);
	set_cmt	(0XE51FFF,	"hostlong",	0);
	create_insn	(x=0XE52007);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52010);
	op_hex		(x,	1);
	set_cmt	(0XE52017,	"hObject",	0);
	create_insn	(x=0XE52018);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE52020);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5202A);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE5202F);
	op_stkvar	(x,	1);
	set_cmt	(0XE52033,	"lpBufferSize",	0);
	set_cmt	(0XE52034,	"lpBuffer",	0);
	create_insn	(x=0XE52035);
	op_stkvar	(x,	1);
	set_cmt	(0XE52039,	"lpcCount",	0);
	set_cmt	(0XE5203A,	"hEnum",	0);
	create_insn	(x=0XE5203A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5203E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52046);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE52054);
	op_stkvar	(x,	0);
	set_cmt	(0XE5205A,	"hEnum",	0);
	create_insn	(x=0XE5205A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5205E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE52064,	"lpMem",	0);
	create_insn	(x=0XE5206B);
	op_stkvar	(x,	0);
	set_cmt	(0XE52071,	"lpMem",	0);
	create_insn	(x=0XE52071);
	op_stkvar	(x,	0);
	create_insn	(0XE52084);
	create_insn	(x=0XE52087);
	op_hex		(x,	1);
	create_insn	(x=0XE5208A);
	op_hex		(x,	1);
	create_insn	(x=0XE52095);
	op_stkvar	(x,	1);
	create_insn	(x=0XE520A5);
	op_stkvar	(x,	0);
	create_insn	(x=0XE520A9);
	op_stkvar	(x,	1);
	create_insn	(x=0XE520AF);
	op_stkvar	(x,	1);
	create_insn	(x=0XE520B2);
	op_stkvar	(x,	0);
	create_insn	(x=0XE520BB);
	op_stkvar	(x,	0);
	create_insn	(x=0XE520C4);
	op_stkvar	(x,	0);
	create_insn	(x=0XE520C9);
	op_stkvar	(x,	1);
	create_insn	(x=0XE520CD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE520D3);
	op_stkvar	(x,	0);
	create_insn	(x=0XE520E0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE520E4);
	op_hex		(x,	1);
	create_insn	(x=0XE520E7);
	op_stkvar	(x,	1);
	set_cmt	(0XE520EB,	"lpdwAddressStringLength",	0);
	create_insn	(x=0XE520EC);
	op_stkvar	(x,	1);
	set_cmt	(0XE520F0,	"lpszAddressString",	0);
	set_cmt	(0XE520F1,	"lpProtocolInfo",	0);
	set_cmt	(0XE520F2,	"dwAddressLength",	0);
	create_insn	(x=0XE520F4);
	op_stkvar	(x,	1);
	set_cmt	(0XE520F8,	"lpsaAddress",	0);
	create_insn	(x=0XE520F9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE520FF);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52106);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5210A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5210E);
	op_stkvar	(x,	1);
	set_cmt	(0XE52112,	"lpResult",	0);
	set_cmt	(0XE52113,	"lpBufferSize",	0);
	set_cmt	(0XE52114,	"lpAccessName",	0);
	set_cmt	(0XE52115,	"dwFlags",	0);
	set_cmt	(0XE52116,	"lpUserId",	0);
	set_cmt	(0XE52117,	"lpPassword",	0);
	create_insn	(x=0XE52118);
	op_stkvar	(x,	1);
	set_cmt	(0XE5211C,	"lpNetResource",	0);
	set_cmt	(0XE5211D,	"hwndOwner",	0);
	create_insn	(x=0XE5211E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52122);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52126);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE52130,	"int",	0);
	set_cmt	(0XE52135,	"int",	0);
	create_insn	(x=0XE52138);
	op_stkvar	(x,	1);
	set_cmt	(0XE5213C,	"int",	0);
	set_cmt	(0XE5213F,	"int",	0);
	set_cmt	(0XE52141,	"lpNetResource",	0);
	set_cmt	(0XE52142,	"dwScope",	0);
	create_insn	(x=0XE52148);
	op_hex		(x,	1);
	create_insn	(0XE52161);
	create_insn	(x=0XE52164);
	op_hex		(x,	1);
	create_insn	(x=0XE52167);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE52170);
	op_stkvar	(x,	1);
	set_cmt	(0XE52174,	"dwBytes",	0);
	create_insn	(x=0XE5217A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52186);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE5218D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52195);
	op_stkvar	(x,	1);
	set_cmt	(0XE52198,	"char",	0);
	set_cmt	(0XE5219A,	"int",	0);
	set_cmt	(0XE5219C,	"lpCriticalSection",	0);
	create_insn	(x=0XE521A6);
	op_hex		(x,	1);
	create_insn	(x=0XE521BB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE521C6);
	op_stkvar	(x,	0);
	create_insn	(x=0XE521CA);
	op_hex		(x,	1);
	create_insn	(x=0XE521CD);
	op_stkvar	(x,	1);
	set_cmt	(0XE521D0,	"nSize",	0);
	set_cmt	(0XE521D4,	"lpBuffer",	0);
	create_insn	(x=0XE521D5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE521DF);
	op_stkvar	(x,	1);
	set_cmt	(0XE52200,	"int",	0);
	set_cmt	(0XE52201,	"int",	0);
	create_insn	(x=0XE52202);
	op_stkvar	(x,	1);
	set_cmt	(0XE52205,	"int",	0);
	set_cmt	(0XE52206,	"int",	0);
	set_cmt	(0XE52207,	"lpNetResource",	0);
	set_cmt	(0XE52209,	"dwScope",	0);
	set_cmt	(0XE52210,	"int",	0);
	set_cmt	(0XE52211,	"int",	0);
	create_insn	(x=0XE52212);
	op_stkvar	(x,	1);
	set_cmt	(0XE52215,	"int",	0);
	set_cmt	(0XE52216,	"int",	0);
	set_cmt	(0XE52217,	"lpNetResource",	0);
	set_cmt	(0XE52219,	"dwScope",	0);
	set_cmt	(0XE52220,	"int",	0);
	set_cmt	(0XE52221,	"int",	0);
	create_insn	(x=0XE52222);
	op_stkvar	(x,	1);
	set_cmt	(0XE52225,	"int",	0);
	set_cmt	(0XE52226,	"int",	0);
	set_cmt	(0XE52227,	"lpNetResource",	0);
	set_cmt	(0XE52229,	"dwScope",	0);
	create_insn	(x=0XE52230);
	op_hex		(x,	1);
	set_cmt	(0XE52233,	"int",	0);
	set_cmt	(0XE52234,	"int",	0);
	create_insn	(x=0XE52235);
	op_stkvar	(x,	1);
	set_cmt	(0XE52238,	"int",	0);
	set_cmt	(0XE52239,	"int",	0);
	set_cmt	(0XE5223A,	"lpNetResource",	0);
	set_cmt	(0XE5223C,	"dwScope",	0);
	set_cmt	(0XE52243,	"int",	0);
	set_cmt	(0XE52244,	"int",	0);
	create_insn	(x=0XE52245);
	op_stkvar	(x,	1);
	set_cmt	(0XE52248,	"int",	0);
	set_cmt	(0XE52249,	"int",	0);
	set_cmt	(0XE5224A,	"lpNetResource",	0);
	set_cmt	(0XE5224C,	"dwScope",	0);
	set_cmt	(0XE52253,	"char",	0);
	set_cmt	(0XE52255,	"int",	0);
	set_cmt	(0XE52257,	"lpCriticalSection",	0);
	create_insn	(x=0XE5225F);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52262);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52265);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52268);
	op_hex		(x,	1);
	create_insn	(x=0XE5226C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5226F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5227F);
	op_stkvar	(x,	0);
	set_cmt	(0XE52285,	"lpMem",	0);
	create_insn	(x=0XE52285);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5228D);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	set_cmt	(0XE52292,	"dwMilliseconds",	0);
	create_insn	(x=0XE52297);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE522AD);
	op_stkvar	(x,	1);
	create_insn	(x=0XE522B5);
	op_stkvar	(x,	0);
	set_cmt	(0XE522BB,	"lpMem",	0);
	create_insn	(x=0XE522BB);
	op_stkvar	(x,	0);
	set_cmt	(0XE522C8,	"lpMem",	0);
	set_cmt	(0XE522CF,	"char",	0);
	set_cmt	(0XE522D1,	"int",	0);
	set_cmt	(0XE522D3,	"lpCriticalSection",	0);
	create_insn	(x=0XE522DB);
	op_hex		(x,	1);
	set_cmt	(0XE522DE,	"lpMem",	0);
	create_insn	(0XE522EE);
	create_insn	(x=0XE52303);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5230B);
	op_stkvar	(x,	1);
	set_cmt	(0XE5230E,	"char",	0);
	set_cmt	(0XE5230F,	"int",	0);
	set_cmt	(0XE52311,	"lpCriticalSection",	0);
	create_insn	(x=0XE52316);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5231E);
	op_hex		(x,	1);
	set_cmt	(0XE52325,	"lpName",	0);
	set_cmt	(0XE5232C,	"lpMem",	0);
	create_insn	(x=0XE52333);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52338);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5233C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52345);
	op_stkvar	(x,	0);
	create_insn	(0XE5234C);
	set_cmt	(0XE52351,	"dwMilliseconds",	0);
	create_insn	(x=0XE52351);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52358);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE52366,	"lpMem",	0);
	create_insn	(x=0XE52366);
	op_stkvar	(x,	0);
	set_cmt	(0XE52373,	"lpMem",	0);
	create_insn	(x=0XE52373);
	op_stkvar	(x,	0);
	set_cmt	(0XE5237C,	"char",	0);
	set_cmt	(0XE5237D,	"int",	0);
	set_cmt	(0XE5237F,	"lpCriticalSection",	0);
	create_insn	(x=0XE52387);
	op_hex		(x,	1);
	set_cmt	(0XE5238A,	"lpMem",	0);
	create_insn	(0XE5239A);
	create_insn	(x=0XE523A6);
	op_stkvar	(x,	1);
	set_cmt	(0XE523A9,	"char",	0);
	set_cmt	(0XE523AB,	"int",	0);
	set_cmt	(0XE523AD,	"lpCriticalSection",	0);
	create_insn	(x=0XE523AF);
	op_stkvar	(x,	0);
	create_insn	(x=0XE523B7);
	op_hex		(x,	1);
	create_insn	(x=0XE523D2);
	op_stkvar	(x,	0);
	set_cmt	(0XE523DC,	"LPVOID",	0);
	create_insn	(x=0XE523E7);
	op_stkvar	(x,	0);
	create_insn	(0XE523F1);
	set_cmt	(0XE523F7,	"lpCriticalSection",	0);
	create_insn	(x=0XE523F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE523FE,	"lpCriticalSection",	0);
	create_insn	(x=0XE52405);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE5240B,	"dwMilliseconds",	0);
	create_insn	(x=0XE52410);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE52418,	"char",	0);
	create_insn	(0XE52418);
	set_cmt	(0XE5241A,	"int",	0);
	set_cmt	(0XE5241C,	"lpCriticalSection",	0);
	create_insn	(x=0XE52423);
	op_hex		(x,	1);
	create_insn	(0XE5242F);
	create_insn	(x=0XE52432);
	op_hex		(x,	1);
	set_cmt	(0XE5243D,	"lpName",	0);
	set_cmt	(0XE5243E,	"bInitialState",	0);
	set_cmt	(0XE5243F,	"bManualReset",	0);
	set_cmt	(0XE52440,	"lpEventAttributes",	0);
	create_insn	(x=0XE52441);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52444);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE52450,	"lpThreadId",	0);
	set_cmt	(0XE52451,	"dwCreationFlags",	0);
	set_cmt	(0XE52452,	"lpParameter",	0);
	set_cmt	(0XE52453,	"lpStartAddress",	0);
	create_insn	(x=0XE52453);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE52458,	"dwStackSize",	0);
	set_cmt	(0XE52459,	"lpThreadAttributes",	0);
	create_insn	(x=0XE5245A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE52460);
	op_stkvar	(x,	0);
	set_cmt	(0XE52463,	"LPVOID",	0);
	set_cmt	(0XE52470,	"dwMilliseconds",	0);
	create_insn	(x=0XE52472);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5247E);
	op_stkvar	(x,	0);
	set_cmt	(0XE52485,	"hEvent",	0);
	create_insn	(x=0XE52486);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5248C);
	op_stkvar	(x,	1);
	set_cmt	(0XE5248F,	"dwMilliseconds",	0);
	set_cmt	(0XE52491,	"hHandle",	0);
	create_insn	(x=0XE52492);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52495);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5249F);
	op_stkvar	(x,	1);
	set_cmt	(0XE524A2,	"lpExitCode",	0);
	set_cmt	(0XE524A3,	"hThread",	0);
	create_insn	(x=0XE524A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE524AA,	"hObject",	0);
	create_insn	(x=0XE524AB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XE524B7,	"hObject",	0);
	create_insn	(x=0XE524BA);
	op_stkvar	(x,	1);
	create_insn	(0XE524C2);
	set_cmt	(0XE524C5,	"dwBytes",	0);
	create_insn	(x=0XE524D3);
	op_stkvar	(x,	1);
	set_cmt	(0XE524D6,	"lpThreadId",	0);
	create_insn	(x=0XE524DA);
	op_stkvar	(x,	1);
	set_cmt	(0XE524DD,	"dwCreationFlags",	0);
	create_insn	(x=0XE524E0);
	op_stkvar	(x,	1);
	set_cmt	(0XE524E3,	"lpParameter",	0);
	set_cmt	(0XE524E4,	"lpStartAddress",	0);
	create_insn	(x=0XE524E4);
	op_stkvar	(x,	0);
	create_insn	(x=0XE524EA);
	op_stkvar	(x,	1);
	create_insn	(x=0XE524F0);
	op_stkvar	(x,	1);
	set_cmt	(0XE524F3,	"dwStackSize",	0);
	set_cmt	(0XE524F4,	"lpThreadAttributes",	0);
	create_insn	(x=0XE524F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE52500);
	create_insn	(0XE52504);
	create_insn	(x=0XE52507);
	op_hex		(x,	1);
	create_insn	(x=0XE5250A);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE52511);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52519);
	op_stkvar	(x,	0);
	set_cmt	(0XE52529,	"dwBytes",	0);
	create_insn	(x=0XE5252A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52532);
	op_hex		(x,	1);
	create_insn	(x=0XE52535);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE5253E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52560);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5256C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5256F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52578);
	op_stkvar	(x,	1);
	create_insn	(0XE5257F);
	create_insn	(x=0XE52584);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52587);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52590);
	op_hex		(x,	1);
	create_insn	(x=0XE52597);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5259A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE525A8);
	op_stkvar	(x,	0);
	create_insn	(0XE525AD);
	create_insn	(x=0XE525B6);
	op_stkvar	(x,	0);
	create_insn	(x=0XE525B9);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE525C1);
	op_stkvar	(x,	0);
	set_cmt	(0XE525CF,	"lpMem",	0);
	create_insn	(x=0XE525D6);
	op_stkvar	(x,	0);
	set_cmt	(0XE525DF,	"lpMem",	0);
	create_insn	(x=0XE525DF);
	op_stkvar	(x,	0);
	create_insn	(x=0XE525EA);
	op_stkvar	(x,	0);
	create_insn	(0XE525F3);
	create_insn	(0XE52607);
	create_insn	(x=0XE5263A);
	op_stkvar	(x,	1);
	create_insn	(0XE52645);
	create_insn	(x=0XE52666);
	op_stkvar	(x,	1);
	create_insn	(0XE52671);
	create_insn	(x=0XE52690);
	op_stkvar	(x,	1);
	set_cmt	(0XE526A0,	"dwBytes",	0);
	create_insn	(x=0XE526A6);
	op_hex		(x,	1);
	create_insn	(x=0XE526B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE526C4);
	op_hex		(x,	1);
	create_insn	(x=0XE526C9);
	op_stkvar	(x,	1);
	create_insn	(x=0XE526D1);
	op_stkvar	(x,	1);
	create_insn	(x=0XE526E2);
	op_stkvar	(x,	1);
	create_insn	(0XE526E9);
	create_insn	(x=0XE526FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52704);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5270C);
	op_stkvar	(x,	1);
	create_insn	(0XE5271B);
	create_insn	(x=0XE5271E);
	op_hex		(x,	1);
	set_cmt	(0XE5272B,	"dwBytes",	0);
	create_insn	(x=0XE5272C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5272F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52732);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52735);
	op_stkvar	(x,	0);
	set_cmt	(0XE5273F,	"dwBytes",	0);
	create_insn	(x=0XE52740);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5274C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5276E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52771);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE52784);
	op_hex		(x,	1);
	set_cmt	(0XE5278F,	"hTemplateFile",	0);
	set_cmt	(0XE52790,	"dwFlagsAndAttributes",	0);
	set_cmt	(0XE52791,	"dwCreationDisposition",	0);
	set_cmt	(0XE52793,	"lpSecurityAttributes",	0);
	set_cmt	(0XE52794,	"dwShareMode",	0);
	set_cmt	(0XE52795,	"dwDesiredAccess",	0);
	set_cmt	(0XE5279A,	"lpFileName",	0);
	create_insn	(x=0XE5279B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE527A1);
	op_stkvar	(x,	0);
	create_insn	(x=0XE527AD);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XE527B3,	"dwMoveMethod",	0);
	set_cmt	(0XE527B5,	"lpDistanceToMoveHigh",	0);
	set_cmt	(0XE527B6,	"lDistanceToMove",	0);
	set_cmt	(0XE527B7,	"hFile",	0);
	set_cmt	(0XE527BC,	"dwBytes",	0);
	create_insn	(x=0XE527C2);
	op_stkvar	(x,	0);
	set_cmt	(0XE527C9,	"dwBytes",	0);
	create_insn	(x=0XE527D1);
	op_stkvar	(x,	0);
	create_insn	(x=0XE527D4);
	op_stkvar	(x,	0);
	set_cmt	(0XE527DD,	"dwMoveMethod",	0);
	set_cmt	(0XE527DE,	"lpDistanceToMoveHigh",	0);
	set_cmt	(0XE527DF,	"lDistanceToMove",	0);
	set_cmt	(0XE527E0,	"hFile",	0);
	create_insn	(x=0XE527E0);
	op_stkvar	(x,	0);
	set_cmt	(0XE527E9,	"lpOverlapped",	0);
	create_insn	(x=0XE527EA);
	op_stkvar	(x,	1);
	set_cmt	(0XE527ED,	"lpNumberOfBytesRead",	0);
	set_cmt	(0XE527EE,	"nNumberOfBytesToRead",	0);
	set_cmt	(0XE527EF,	"lpBuffer",	0);
	create_insn	(x=0XE527EF);
	op_stkvar	(x,	0);
	set_cmt	(0XE527F2,	"hFile",	0);
	create_insn	(x=0XE527F2);
	op_stkvar	(x,	0);
	create_insn	(x=0XE527F5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE527FF);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52804);
	op_stkvar	(x,	1);
	set_cmt	(0XE52807,	"cchWideChar",	0);
	set_cmt	(0XE52808,	"lpWideCharStr",	0);
	set_cmt	(0XE52809,	"cbMultiByte",	0);
	set_cmt	(0XE5280A,	"lpMultiByteStr",	0);
	create_insn	(x=0XE5280A);
	op_stkvar	(x,	0);
	set_cmt	(0XE5280D,	"dwFlags",	0);
	set_cmt	(0XE5280E,	"CodePage",	0);
	create_insn	(x=0XE52813);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE52819);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5282A);
	op_stkvar	(x,	0);
	set_cmt	(0XE5282D,	"hObject",	0);
	create_insn	(x=0XE5282D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52830);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE52836);
	op_stkvar	(x,	0);
	set_cmt	(0XE5283B,	"lpMem",	0);
	create_insn	(x=0XE5283B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52844);
	op_stkvar	(x,	0);
	set_cmt	(0XE52849,	"lpMem",	0);
	create_insn	(x=0XE52849);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52852);
	op_stkvar	(x,	0);
	set_cmt	(0XE52857,	"lpMem",	0);
	create_insn	(x=0XE52857);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52860);
	op_stkvar	(x,	0);
	set_cmt	(0XE52868,	"lpMem",	0);
	create_insn	(x=0XE52868);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52871);
	op_stkvar	(x,	1);
	create_insn	(0XE52876);
	set_cmt	(0XE5287D,	"lpMem",	0);
	set_cmt	(0XE5288B,	"lpMem",	0);
	set_cmt	(0XE52899,	"lpMem",	0);
	set_cmt	(0XE528A7,	"lpMem",	0);
	set_cmt	(0XE528B5,	"lpMem",	0);
	create_insn	(x=0XE528C6);
	op_hex		(x,	1);
	create_insn	(0XE528CA);
	set_name	(0XE528CA,	"mw_create_ID_E528CA");
	create_insn	(x=0XE528CD);
	op_hex		(x,	1);
	create_insn	(x=0XE528E5);
	op_stkvar	(x,	0);
	create_insn	(x=0XE528E9);
	op_stkvar	(x,	1);
	create_insn	(x=0XE528EC);
	op_stkvar	(x,	0);
	create_insn	(x=0XE528F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE528F7);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE528FE);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52901);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5290B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52910);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52914);
	op_stkvar	(x,	0);
	set_cmt	(0XE52925,	"char",	0);
	set_cmt	(0XE52926,	"lpCriticalSection",	0);
	create_insn	(x=0XE52926);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5292E);
	op_hex		(x,	1);
	set_cmt	(0XE52931,	"lpMem",	0);
	create_insn	(x=0XE52931);
	op_stkvar	(x,	0);
	set_cmt	(0XE5293A,	"lpMem",	0);
	create_insn	(0XE52946);
	create_insn	(x=0XE52949);
	op_hex		(x,	1);
	create_insn	(x=0XE52963);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5296E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52976);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52979);
	op_hex		(x,	1);
	create_insn	(x=0XE5297C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5297F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52987);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5298A);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE52991);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52994);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5299E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE529A3);
	op_stkvar	(x,	1);
	create_insn	(x=0XE529A7);
	op_stkvar	(x,	0);
	set_cmt	(0XE529BE,	"dwOptionalLength",	0);
	set_cmt	(0XE529BF,	"lpOptional",	0);
	set_cmt	(0XE529C0,	"pwszObjectName",	0);
	create_insn	(x=0XE529C0);
	op_stkvar	(x,	0);
	set_cmt	(0XE529C3,	"pswzServerName",	0);
	create_insn	(x=0XE529C3);
	op_stkvar	(x,	0);
	create_insn	(x=0XE529CB);
	op_hex		(x,	1);
	set_cmt	(0XE529CE,	"lpMem",	0);
	create_insn	(x=0XE529CE);
	op_stkvar	(x,	0);
	set_cmt	(0XE529D7,	"lpMem",	0);
	create_insn	(x=0XE529D7);
	op_stkvar	(x,	0);
	set_cmt	(0XE529E0,	"lpMem",	0);
	create_insn	(x=0XE529E0);
	op_stkvar	(x,	0);
	set_cmt	(0XE529E9,	"lpMem",	0);
	create_insn	(0XE529F5);
	create_insn	(x=0XE529F8);
	op_hex		(x,	1);
	create_insn	(x=0XE529FB);
	op_hex		(x,	1);
	create_insn	(x=0XE52A03);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE52A11);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52A15);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52A1B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52A1F);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52A24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE52A2A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52A2E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52A32);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52A36);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52A3A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52A47);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE52A57);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE52A63);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE52A77);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE52A90);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52A94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE52AA0);
	op_hex		(x,	1);
	set_cmt	(0XE52AA6,	"cchData",	0);
	create_insn	(x=0XE52AA8);
	op_stkvar	(x,	1);
	set_cmt	(0XE52AAC,	"lpLCData",	0);
	set_cmt	(0XE52AAD,	"LCType",	0);
	set_cmt	(0XE52AAF,	"Locale",	0);
	create_insn	(x=0XE52AB4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE52ABE);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52AC2);
	op_hex		(x,	1);
	create_insn	(x=0XE52AC5);
	op_hex		(x,	1);
	create_insn	(0XE52ACA);
	create_insn	(x=0XE52AD4);
	op_stkvar	(x,	1);
	set_cmt	(0XE52B01,	"lpMem",	0);
	create_insn	(x=0XE52B0D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52B13);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52B19);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52B1D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52B2B);
	op_stkvar	(x,	0);
	set_cmt	(0XE52B37,	"lpCriticalSection",	0);
	create_insn	(x=0XE52B43);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52B54);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52B60);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52B64);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52B68);
	op_stkvar	(x,	0);
	set_cmt	(0XE52B6E,	"LPVOID",	0);
	set_cmt	(0XE52B7E,	"LPVOID",	0);
	create_insn	(x=0XE52B89);
	op_stkvar	(x,	0);
	set_cmt	(0XE52B98,	"dwMilliseconds",	0);
	create_insn	(x=0XE52B9D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE52BA3);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52BA7);
	op_hex		(x,	1);
	create_insn	(x=0XE52BAC);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52BB2);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52BC0);
	op_hex		(x,	1);
	create_insn	(x=0XE52BC9);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52BCF);
	op_stkvar	(x,	0);
	set_cmt	(0XE52BE6,	"LPVOID",	0);
	create_insn	(0XE52BE6);
	set_cmt	(0XE52BF1,	"LPVOID",	0);
	create_insn	(x=0XE52C01);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52C05);
	op_hex		(x,	1);
	create_insn	(x=0XE52C0A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52C1D);
	op_hex		(x,	1);
	create_insn	(x=0XE52C26);
	op_stkvar	(x,	0);
	set_cmt	(0XE52C40,	"LPVOID",	0);
	set_cmt	(0XE52C51,	"dwMilliseconds",	0);
	create_insn	(x=0XE52C53);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE52C62);
	op_stkvar	(x,	0);
	set_cmt	(0XE52C68,	"LPVOID",	0);
	set_cmt	(0XE52C7D,	"dwMilliseconds",	0);
	create_insn	(x=0XE52C82);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE52C88);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52CA0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52CA6);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52CB1);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52CC6);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52CCC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52CD0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52CE5);
	op_hex		(x,	1);
	create_insn	(x=0XE52CE8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52CEF);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52D00);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52D04);
	op_hex		(x,	1);
	set_cmt	(0XE52D0F,	"int",	0);
	create_insn	(x=0XE52D0F);
	op_stkvar	(x,	0);
	set_cmt	(0XE52D13,	"int",	0);
	create_insn	(x=0XE52D13);
	op_stkvar	(x,	0);
	set_cmt	(0XE52D17,	"int",	0);
	set_cmt	(0XE52D18,	"int",	0);
	set_cmt	(0XE52D19,	"int",	0);
	set_cmt	(0XE52D1A,	"lpStartAddress",	0);
	create_insn	(x=0XE52D1A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE52D24);
	op_hex		(x,	1);
	create_insn	(x=0XE52D27);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52D35);
	op_stkvar	(x,	0);
	create_insn	(0XE52D3B);
	create_insn	(x=0XE52D3D);
	op_stkvar	(x,	0);
	set_cmt	(0XE52D47,	"lpThreadId",	0);
	set_cmt	(0XE52D48,	"dwCreationFlags",	0);
	create_insn	(x=0XE52D49);
	op_stkvar	(x,	1);
	set_cmt	(0XE52D4D,	"lpParameter",	0);
	set_cmt	(0XE52D4E,	"lpStartAddress",	0);
	create_insn	(x=0XE52D4E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE52D53,	"dwStackSize",	0);
	set_cmt	(0XE52D54,	"lpThreadAttributes",	0);
	create_insn	(x=0XE52D55);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE52D5B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52D6B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52D6F);
	op_stkvar	(x,	0);
	set_cmt	(0XE52D75,	"int",	0);
	create_insn	(x=0XE52D75);
	op_stkvar	(x,	0);
	set_cmt	(0XE52D79,	"int",	0);
	create_insn	(x=0XE52D79);
	op_stkvar	(x,	0);
	set_cmt	(0XE52D7D,	"int",	0);
	create_insn	(x=0XE52D7D);
	op_stkvar	(x,	0);
	set_cmt	(0XE52D81,	"int",	0);
	create_insn	(x=0XE52D81);
	op_stkvar	(x,	0);
	set_cmt	(0XE52D85,	"int",	0);
	set_cmt	(0XE52D86,	"lpStartAddress",	0);
	create_insn	(x=0XE52D86);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE52D90);
	op_hex		(x,	1);
	create_insn	(x=0XE52D93);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52D9F);
	op_stkvar	(x,	0);
	set_cmt	(0XE52DA3,	"int",	0);
	create_insn	(x=0XE52DA3);
	op_stkvar	(x,	0);
	set_cmt	(0XE52DA7,	"int",	0);
	create_insn	(x=0XE52DA7);
	op_stkvar	(x,	0);
	set_cmt	(0XE52DAB,	"int",	0);
	set_cmt	(0XE52DAC,	"int",	0);
	create_insn	(x=0XE52DAC);
	op_stkvar	(x,	0);
	set_cmt	(0XE52DB0,	"int",	0);
	set_cmt	(0XE52DB1,	"lpStartAddress",	0);
	create_insn	(x=0XE52DB1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE52DBB);
	op_hex		(x,	1);
	create_insn	(x=0XE52DBE);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52DCA);
	op_stkvar	(x,	0);
	set_cmt	(0XE52DCE,	"int",	0);
	create_insn	(x=0XE52DCE);
	op_stkvar	(x,	0);
	set_cmt	(0XE52DD2,	"int",	0);
	create_insn	(x=0XE52DD2);
	op_stkvar	(x,	0);
	set_cmt	(0XE52DD6,	"int",	0);
	set_cmt	(0XE52DD7,	"int",	0);
	create_insn	(x=0XE52DD7);
	op_stkvar	(x,	0);
	set_cmt	(0XE52DDB,	"int",	0);
	set_cmt	(0XE52DDC,	"lpStartAddress",	0);
	create_insn	(x=0XE52DDC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE52DE6,	"int",	0);
	create_insn	(x=0XE52DE6);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52DEA);
	op_stkvar	(x,	0);
	set_cmt	(0XE52DEE,	"int",	0);
	create_insn	(x=0XE52DEE);
	op_stkvar	(x,	0);
	set_cmt	(0XE52DF2,	"int",	0);
	set_cmt	(0XE52DF3,	"int",	0);
	create_insn	(x=0XE52DF3);
	op_stkvar	(x,	0);
	set_cmt	(0XE52DF7,	"int",	0);
	set_cmt	(0XE52DF8,	"lpStartAddress",	0);
	create_insn	(x=0XE52DF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE52E02);
	op_hex		(x,	1);
	create_insn	(x=0XE52E05);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52E11);
	op_stkvar	(x,	0);
	set_cmt	(0XE52E17,	"int",	0);
	create_insn	(x=0XE52E17);
	op_stkvar	(x,	0);
	set_cmt	(0XE52E1B,	"int",	0);
	create_insn	(x=0XE52E1B);
	op_stkvar	(x,	0);
	set_cmt	(0XE52E1F,	"int",	0);
	create_insn	(x=0XE52E1F);
	op_stkvar	(x,	0);
	set_cmt	(0XE52E23,	"int",	0);
	create_insn	(x=0XE52E23);
	op_stkvar	(x,	0);
	set_cmt	(0XE52E27,	"int",	0);
	set_cmt	(0XE52E28,	"lpStartAddress",	0);
	create_insn	(x=0XE52E28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE52E32);
	op_hex		(x,	1);
	create_insn	(x=0XE52E35);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52E39);
	op_stkvar	(x,	0);
	set_cmt	(0XE52E3F,	"dwMilliseconds",	0);
	set_cmt	(0XE52E41,	"hHandle",	0);
	create_insn	(x=0XE52E41);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52E45);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE52E4B);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52E58);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52E5E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52E69);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52E74);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52E78);
	op_hex		(x,	1);
	create_insn	(x=0XE52E7D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52E83);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52E89);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52E97);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52E9D);
	op_stkvar	(x,	1);
	set_cmt	(0XE52EA4,	"lpCriticalSection",	0);
	create_insn	(x=0XE52EA7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE52EAD,	"lpCriticalSection",	0);
	create_insn	(x=0XE52EB4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE52EBA);
	op_stkvar	(x,	1);
	set_cmt	(0XE52EC2,	"dwMilliseconds",	0);
	set_cmt	(0XE52EC4,	"bWaitAll",	0);
	create_insn	(x=0XE52EC6);
	op_stkvar	(x,	1);
	set_cmt	(0XE52ECD,	"lpHandles",	0);
	set_cmt	(0XE52ECE,	"nCount",	0);
	create_insn	(x=0XE52ECF);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE52ED5);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52EDB);
	op_stkvar	(x,	0);
	set_cmt	(0XE52EE1,	"hObject",	0);
	create_insn	(x=0XE52EE1);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52EE6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE52EF0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52EFD);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52F01);
	op_stkvar	(x,	1);
	set_cmt	(0XE52F12,	"lpCriticalSection",	0);
	create_insn	(x=0XE52F13);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE52F21,	"hObject",	0);
	create_insn	(x=0XE52F22);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE52F30,	"hObject",	0);
	create_insn	(x=0XE52F31);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE52F37,	"lpCriticalSection",	0);
	create_insn	(x=0XE52F38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE52F3E,	"lpMem",	0);
	create_insn	(x=0XE52F45);
	op_stkvar	(x,	1);
	set_cmt	(0XE52F4E,	"int",	0);
	set_cmt	(0XE52F50,	"lpMem",	0);
	create_insn	(x=0XE52F50);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52F5B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52F61);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52F6A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52F70);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52F79);
	op_stkvar	(x,	0);
	set_cmt	(0XE52F7F,	"hMutex",	0);
	create_insn	(x=0XE52F7F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52F83);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE52F89,	"hObject",	0);
	create_insn	(x=0XE52F89);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52F8D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE52F93);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XE52FA7);
	set_name	(0XE52FA7,	"start");
	set_cmt	(0XE52FAC,	"uExitCode",	0);
	create_insn	(x=0XE52FAE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_byte	(0XE52FB4);
	create_insn	(0XE52FB5);
	create_insn	(x=0XE52FBB);
	op_stkvar	(x,	0);
	create_insn	(0XE52FC8);
	create_insn	(x=0XE52FCD);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52FD7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE52FE1);
	op_hex		(x,	1);
	create_insn	(x=0XE52FEB);
	op_stkvar	(x,	1);
	create_insn	(x=0XE52FF5);
	op_stkvar	(x,	0);
	create_insn	(0XE53019);
	create_insn	(0XE53020);
	create_insn	(x=0XE53027);
	op_stkvar	(x,	0);
	create_insn	(0XE53050);
	create_insn	(x=0XE53084);
	op_stkvar	(x,	0);
	create_insn	(0XE530A8);
	create_insn	(0XE530AF);
	create_insn	(x=0XE530B3);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	set_cmt	(0XE530BF,	"dwBytes",	0);
	set_cmt	(0XE530C4,	"lpMem",	0);
	create_insn	(0XE530CD);
	create_insn	(0XE530F6);
	create_insn	(x=0XE5311D);
	op_hex		(x,	1);
	create_insn	(x=0XE53136);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5313A);
	op_stkvar	(x,	1);
	create_insn	(0XE5313F);
	create_insn	(x=0XE5316B);
	op_hex		(x,	1);
	create_insn	(0XE53173);
	create_insn	(x=0XE53185);
	op_hex		(x,	1);
	set_cmt	(0XE53193,	"dwBytes",	0);
	set_cmt	(0XE53194,	"lpMem",	0);
	create_insn	(0XE531C3);
	create_insn	(0XE531D9);
	create_insn	(0XE531E1);
	create_insn	(x=0XE531EB);
	op_stkvar	(x,	1);
	create_insn	(x=0XE53207);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53212);
	op_stkvar	(x,	1);
	create_insn	(x=0XE53220);
	op_hex		(x,	1);
	create_insn	(x=0XE53225);
	op_stkvar	(x,	1);
	create_insn	(0XE5322D);
	create_insn	(x=0XE5322E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53237);
	op_hex		(x,	1);
	create_insn	(0XE53246);
	create_insn	(x=0XE5324A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE53268);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53272);
	op_stkvar	(x,	1);
	create_insn	(x=0XE53280);
	op_hex		(x,	1);
	create_insn	(x=0XE53285);
	op_stkvar	(x,	1);
	create_insn	(0XE5328D);
	create_insn	(x=0XE5328F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53297);
	op_hex		(x,	1);
	create_insn	(0XE532A6);
	set_cmt	(0XE532AA,	"lpCriticalSection",	0);
	create_insn	(x=0XE532AB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE532B1,	"lpCriticalSection",	0);
	create_insn	(x=0XE532B2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE532BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XE532C4,	"hObject",	0);
	set_cmt	(0XE532CE,	"hObject",	0);
	set_cmt	(0XE532D8,	"hObject",	0);
	set_cmt	(0XE532E8,	"lpMem",	0);
	set_cmt	(0XE532EF,	"lpMem",	0);
	set_cmt	(0XE532F6,	"lpMem",	0);
	create_insn	(0XE532FF);
	set_cmt	(0XE53301,	"dwBytes",	0);
	set_cmt	(0XE53315,	"dwSpinCount",	0);
	set_cmt	(0XE5331D,	"lpCriticalSection",	0);
	create_insn	(x=0XE5331E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE5332C,	"dwBytes",	0);
	create_insn	(x=0XE5335B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XE53361,	"lpName",	0);
	set_cmt	(0XE53362,	"bInitialState",	0);
	set_cmt	(0XE53364,	"bManualReset",	0);
	set_cmt	(0XE53366,	"lpEventAttributes",	0);
	set_cmt	(0XE53373,	"lpName",	0);
	set_cmt	(0XE53374,	"bInitialState",	0);
	set_cmt	(0XE53376,	"bManualReset",	0);
	set_cmt	(0XE53378,	"lpEventAttributes",	0);
	set_cmt	(0XE5337D,	"lpName",	0);
	set_cmt	(0XE5337E,	"bInitialState",	0);
	set_cmt	(0XE53380,	"bManualReset",	0);
	set_cmt	(0XE53382,	"lpEventAttributes",	0);
	set_cmt	(0XE533B7,	"lpMem",	0);
	create_insn	(0XE533B7);
	create_insn	(0XE533C5);
	set_cmt	(0XE533CA,	"lpCriticalSection",	0);
	create_insn	(x=0XE533CB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE533D1,	"hEvent",	0);
	create_insn	(x=0XE533D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE533DA);
	op_hex		(x,	1);
	set_cmt	(0XE533E0,	"hEvent",	0);
	set_cmt	(0XE533E4,	"hEvent",	0);
	set_cmt	(0XE533E9,	"lpCriticalSection",	0);
	create_insn	(x=0XE533EA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE533F3);
	create_insn	(x=0XE533FB);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE53404);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53411);
	op_hex		(x,	1);
	create_insn	(x=0XE5341A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53426);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5342A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE53435);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5343B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53446);
	op_hex		(x,	1);
	create_insn	(x=0XE5344C);
	op_hex		(x,	1);
	set_cmt	(0XE53450,	"hEvent",	0);
	create_insn	(x=0XE53453);
	op_hex		(x,	1);
	create_insn	(x=0XE53459);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE5345F,	"hEvent",	0);
	create_insn	(x=0XE53462);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE53468);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5346B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5346E);
	op_stkvar	(x,	1);
	create_insn	(0XE53475);
	set_cmt	(0XE53490,	"hEvent",	0);
	create_insn	(x=0XE53492);
	op_hex		(x,	1);
	create_insn	(x=0XE53496);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE5349E);
	create_insn	(x=0XE534A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE534B2);
	op_hex		(x,	1);
	set_cmt	(0XE534B8,	"lpCriticalSection",	0);
	create_insn	(x=0XE534B9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE534BF,	"dwMilliseconds",	0);
	set_cmt	(0XE534C1,	"hHandle",	0);
	create_insn	(x=0XE534C3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE534C9,	"lpCriticalSection",	0);
	create_insn	(x=0XE534CC);
	op_stkvar	(x,	0);
	create_insn	(x=0XE534D4);
	op_stkvar	(x,	0);
	set_cmt	(0XE534DC,	"lpCriticalSection",	0);
	create_insn	(x=0XE534DD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE534E3);
	op_stkvar	(x,	1);
	create_insn	(0XE534EB);
	create_insn	(x=0XE534EE);
	op_hex		(x,	1);
	create_insn	(x=0XE534F1);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE534F5);
	op_hex		(x,	1);
	create_insn	(x=0XE53504);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53509);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5351A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53520);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53531);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XE53539,	"hEvent",	0);
	create_insn	(x=0XE5353C);
	op_hex		(x,	1);
	create_insn	(x=0XE53540);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE53546,	"hEvent",	0);
	create_insn	(x=0XE5354D);
	op_hex		(x,	1);
	create_insn	(x=0XE53550);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53555);
	op_hex		(x,	1);
	create_insn	(x=0XE53569);
	op_hex		(x,	1);
	set_cmt	(0XE5356D,	"hEvent",	0);
	create_insn	(x=0XE5356F);
	op_hex		(x,	1);
	create_insn	(x=0XE53577);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5357E);
	op_stkvar	(x,	1);
	create_insn	(0XE53585);
	create_insn	(0XE5358D);
	create_insn	(0XE535A4);
	create_insn	(x=0XE535AD);
	op_stkvar	(x,	0);
	create_insn	(x=0XE535B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE535B7);
	op_stkvar	(x,	0);
	create_insn	(0XE535D2);
	create_insn	(x=0XE535D9);
	op_stkvar	(x,	1);
	set_cmt	(0XE5360B,	"dwBytes",	0);
	set_cmt	(0XE5360C,	"lpMem",	0);
	create_insn	(x=0XE53612);
	op_hex		(x,	1);
	create_insn	(0XE53617);
	set_cmt	(0XE53621,	"dwBytes",	0);
	create_insn	(x=0XE5362D);
	op_stkvar	(x,	1);
	create_insn	(0XE5363A);
	create_insn	(0XE5366C);
	create_insn	(0XE53690);
	create_insn	(0XE53698);
	create_insn	(x=0XE5369B);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5369E);
	op_stkvar	(x,	1);
	set_cmt	(0XE536CC,	"dwBytes",	0);
	set_cmt	(0XE536CD,	"lpMem",	0);
	create_insn	(0XE536D6);
	set_cmt	(0XE536DA,	"dwBytes",	0);
	create_insn	(x=0XE536E7);
	op_stkvar	(x,	1);
	create_insn	(x=0XE536F1);
	op_stkvar	(x,	0);
	create_insn	(x=0XE536FD);
	op_hex		(x,	1);
	create_insn	(0XE5370A);
	create_insn	(0XE53711);
	create_insn	(x=0XE5371F);
	op_stkvar	(x,	1);
	create_insn	(0XE53724);
	create_insn	(x=0XE5376A);
	op_hex		(x,	1);
	create_insn	(0XE53772);
	set_cmt	(0XE53778,	"dwBytes",	0);
	set_cmt	(0XE53784,	"dwBytes",	0);
	set_cmt	(0XE5378C,	"dwBytes",	0);
	create_insn	(x=0XE53794);
	op_hex		(x,	1);
	set_cmt	(0XE537A1,	"dwSpinCount",	0);
	set_cmt	(0XE537A6,	"lpCriticalSection",	0);
	create_insn	(x=0XE537A7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE537B1,	"lpMem",	0);
	create_insn	(x=0XE537BA);
	op_stkvar	(x,	0);
	create_insn	(x=0XE537C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE537C6,	"nStdHandle",	0);
	create_insn	(x=0XE537C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE537D3);
	op_hex		(x,	1);
	create_insn	(x=0XE537D7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE537F0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE537F3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE53806);
	op_hex		(x,	1);
	set_cmt	(0XE5380F,	"hTemplateFile",	0);
	set_cmt	(0XE53810,	"dwFlagsAndAttributes",	0);
	set_cmt	(0XE53811,	"dwCreationDisposition",	0);
	set_cmt	(0XE53813,	"lpSecurityAttributes",	0);
	set_cmt	(0XE53814,	"dwShareMode",	0);
	set_cmt	(0XE53816,	"dwDesiredAccess",	0);
	set_cmt	(0XE5381B,	"lpFileName",	0);
	create_insn	(x=0XE5381C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE53827);
	op_hex		(x,	1);
	set_cmt	(0XE5382F,	"lpMem",	0);
	set_cmt	(0XE5383A,	"lpMem",	0);
	create_insn	(0XE53848);
	create_insn	(x=0XE5384B);
	op_hex		(x,	1);
	create_insn	(x=0XE53850);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53855);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53864);
	op_stkvar	(x,	0);
	set_cmt	(0XE53869,	"lpReserved",	0);
	create_insn	(x=0XE5386A);
	op_stkvar	(x,	1);
	set_cmt	(0XE5386D,	"lpNumberOfCharsWritten",	0);
	create_insn	(x=0XE5386E);
	op_stkvar	(x,	0);
	set_cmt	(0XE53877,	"nNumberOfCharsToWrite",	0);
	set_cmt	(0XE53878,	"lpBuffer",	0);
	create_insn	(x=0XE53878);
	op_stkvar	(x,	0);
	set_cmt	(0XE5387B,	"hConsoleOutput",	0);
	create_insn	(x=0XE5387E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE53884);
	op_stkvar	(x,	0);
	set_cmt	(0XE53891,	"dwBytes",	0);
	set_cmt	(0XE5389E,	"lpUsedDefaultChar",	0);
	set_cmt	(0XE5389F,	"lpDefaultChar",	0);
	set_cmt	(0XE538A0,	"cbMultiByte",	0);
	create_insn	(x=0XE538A0);
	op_stkvar	(x,	0);
	set_cmt	(0XE538A3,	"lpMultiByteStr",	0);
	set_cmt	(0XE538A4,	"cchWideChar",	0);
	create_insn	(x=0XE538A4);
	op_stkvar	(x,	0);
	set_cmt	(0XE538A7,	"lpWideCharStr",	0);
	create_insn	(x=0XE538A7);
	op_stkvar	(x,	0);
	set_cmt	(0XE538AA,	"dwFlags",	0);
	set_cmt	(0XE538AB,	"CodePage",	0);
	create_insn	(x=0XE538B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE538B6,	"lpOverlapped",	0);
	create_insn	(x=0XE538B7);
	op_stkvar	(x,	1);
	set_cmt	(0XE538BA,	"lpNumberOfBytesWritten",	0);
	set_cmt	(0XE538BB,	"nNumberOfBytesToWrite",	0);
	set_cmt	(0XE538BC,	"lpBuffer",	0);
	set_cmt	(0XE538C0,	"hFile",	0);
	create_insn	(x=0XE538C3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE538C9);
	op_stkvar	(x,	0);
	set_cmt	(0XE538CC,	"lpMem",	0);
	create_insn	(x=0XE538D3);
	op_stkvar	(x,	1);
	create_insn	(0XE538DA);
	set_cmt	(0XE538F0,	"lpCriticalSection",	0);
	create_insn	(x=0XE538F1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE538F7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE538FD);
	op_stkvar	(x,	0);
	set_cmt	(0XE53908,	"lpBuffer",	0);
	set_cmt	(0XE5390F,	"lpMem",	0);
	set_cmt	(0XE53917,	"lpBuffer",	0);
	create_insn	(0XE53917);
	create_insn	(x=0XE53927);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE53932,	"lpCriticalSection",	0);
	create_insn	(x=0XE53933);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE53940);
	set_cmt	(0XE53944,	"lpCriticalSection",	0);
	create_insn	(x=0XE53944);
	op_stkvar	(x,	1);
	set_cmt	(0XE53947,	"int",	0);
	create_insn	(x=0XE53949);
	op_stkvar	(x,	1);
	create_insn	(0XE53955);
	set_cmt	(0XE53958,	"int",	0);
	create_insn	(x=0XE53958);
	op_stkvar	(x,	0);
	set_cmt	(0XE5395B,	"lpCriticalSection",	0);
	create_insn	(x=0XE5395B);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5395E);
	op_stkvar	(x,	1);
	create_insn	(0XE53969);
	set_cmt	(0XE53971,	"hTemplateFile",	0);
	set_cmt	(0XE53972,	"dwFlagsAndAttributes",	0);
	set_cmt	(0XE53973,	"dwCreationDisposition",	0);
	set_cmt	(0XE53975,	"lpSecurityAttributes",	0);
	set_cmt	(0XE53976,	"dwShareMode",	0);
	set_cmt	(0XE53977,	"dwDesiredAccess",	0);
	set_cmt	(0XE5397C,	"lpFileName",	0);
	create_insn	(x=0XE5397C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5397F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE5398C,	"lpOverlapped",	0);
	create_insn	(x=0XE5398D);
	op_stkvar	(x,	1);
	set_cmt	(0XE53990,	"lpNumberOfBytesWritten",	0);
	set_cmt	(0XE53991,	"nNumberOfBytesToWrite",	0);
	set_cmt	(0XE53992,	"lpBuffer",	0);
	create_insn	(x=0XE53992);
	op_stkvar	(x,	0);
	set_cmt	(0XE53995,	"hFile",	0);
	create_insn	(x=0XE53996);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE539A2);
	op_stkvar	(x,	0);
	set_cmt	(0XE539AA,	"hObject",	0);
	create_insn	(x=0XE539AB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE539B7);
	create_insn	(x=0XE539BA);
	op_stkvar	(x,	0);
	create_insn	(x=0XE539C0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE539C5);
	op_stkvar	(x,	0);
	set_cmt	(0XE539CD,	"lpMem",	0);
	create_insn	(x=0XE539CD);
	op_stkvar	(x,	0);
	create_insn	(x=0XE539D5);
	op_hex		(x,	1);
	create_insn	(0XE539DA);
	set_name	(0XE539DA,	"mw_free_E539DA");
	create_insn	(x=0XE539DD);
	op_stkvar	(x,	0);
	create_insn	(x=0XE539E3);
	op_stkvar	(x,	0);
	set_cmt	(0XE539EB,	"int",	0);
	set_cmt	(0XE539EC,	"lpMem",	0);
	create_insn	(x=0XE539EC);
	op_stkvar	(x,	0);
	create_insn	(x=0XE539F4);
	op_hex		(x,	1);
	create_insn	(0XE539F9);
	create_insn	(x=0XE539FC);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53A02);
	op_stkvar	(x,	0);
	set_cmt	(0XE53A0A,	"int",	0);
	set_cmt	(0XE53A0B,	"lpMem",	0);
	create_insn	(x=0XE53A0B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53A13);
	op_hex		(x,	1);
	create_insn	(0XE53A18);
	create_insn	(x=0XE53A1B);
	op_hex		(x,	1);
	create_insn	(x=0XE53A26);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53A29);
	op_stkvar	(x,	1);
	set_cmt	(0XE53A2C,	"phkResult",	0);
	set_cmt	(0XE53A2D,	"samDesired",	0);
	set_cmt	(0XE53A34,	"ulOptions",	0);
	set_cmt	(0XE53A35,	"lpSubKey",	0);
	create_insn	(x=0XE53A35);
	op_stkvar	(x,	0);
	set_cmt	(0XE53A3A,	"hKey",	0);
	create_insn	(x=0XE53A3A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53A3E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53A41);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53A44);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE53A4E);
	op_stkvar	(x,	1);
	set_cmt	(0XE53A51,	"lpcbData",	0);
	set_cmt	(0XE53A52,	"lpData",	0);
	create_insn	(x=0XE53A52);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53A55);
	op_stkvar	(x,	1);
	set_cmt	(0XE53A58,	"lpType",	0);
	set_cmt	(0XE53A59,	"lpReserved",	0);
	set_cmt	(0XE53A5A,	"lpValueName",	0);
	create_insn	(x=0XE53A5A);
	op_stkvar	(x,	0);
	set_cmt	(0XE53A5D,	"hKey",	0);
	create_insn	(x=0XE53A5D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53A60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE53A71);
	op_stkvar	(x,	0);
	set_cmt	(0XE53A76,	"hKey",	0);
	create_insn	(x=0XE53A76);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53A79);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE53A7F);
	op_stkvar	(x,	1);
	create_insn	(x=0XE53A86);
	op_stkvar	(x,	1);
	create_insn	(x=0XE53A89);
	op_hex		(x,	1);
	create_insn	(x=0XE53A8C);
	op_stkvar	(x,	0);
	create_insn	(0XE53A93);
	set_cmt	(0XE53A99,	"cbData",	0);
	set_cmt	(0XE53A9A,	"lpData",	0);
	create_insn	(x=0XE53A9A);
	op_stkvar	(x,	0);
	set_cmt	(0XE53A9D,	"dwType",	0);
	set_cmt	(0XE53A9F,	"Reserved",	0);
	set_cmt	(0XE53AA1,	"lpValueName",	0);
	create_insn	(x=0XE53AA1);
	op_stkvar	(x,	0);
	set_cmt	(0XE53AA4,	"hKey",	0);
	create_insn	(x=0XE53AA6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE53AAC,	"hKey",	0);
	create_insn	(x=0XE53AB2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE53ABE);
	create_insn	(x=0XE53AC3);
	op_stkvar	(x,	1);
	create_insn	(x=0XE53AD2);
	op_stkvar	(x,	1);
	create_insn	(x=0XE53ADB);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53ADE);
	op_stkvar	(x,	0);
	set_cmt	(0XE53AE7,	"lpData",	0);
	create_insn	(x=0XE53AE7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53AEA);
	op_stkvar	(x,	1);
	set_cmt	(0XE53AED,	"lpValueName",	0);
	set_cmt	(0XE53AEE,	"lpSubKey",	0);
	create_insn	(x=0XE53AEE);
	op_stkvar	(x,	0);
	set_cmt	(0XE53AF1,	"hKey",	0);
	create_insn	(x=0XE53AFB);
	op_hex		(x,	1);
	set_cmt	(0XE53B02,	"lpData",	0);
	create_insn	(x=0XE53B02);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53B05);
	op_stkvar	(x,	0);
	set_cmt	(0XE53B08,	"lpValueName",	0);
	set_cmt	(0XE53B09,	"lpSubKey",	0);
	create_insn	(x=0XE53B09);
	op_stkvar	(x,	0);
	set_cmt	(0XE53B0C,	"hKey",	0);
	create_insn	(x=0XE53B16);
	op_hex		(x,	1);
	create_insn	(x=0XE53B1D);
	op_stkvar	(x,	0);
	set_cmt	(0XE53B24,	"lpMem",	0);
	create_insn	(x=0XE53B2B);
	op_stkvar	(x,	1);
	create_insn	(0XE53B33);
	set_cmt	(0XE53B41,	"dwBytes",	0);
	create_insn	(x=0XE53B4C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53B56);
	op_stkvar	(x,	1);
	create_insn	(x=0XE53B5A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE53B60);
	op_stkvar	(x,	0);
	set_cmt	(0XE53B68,	"lpMem",	0);
	create_insn	(x=0XE53B70);
	op_hex		(x,	1);
	set_cmt	(0XE53B7A,	"nSize",	0);
	set_cmt	(0XE53B7B,	"lpDst",	0);
	create_insn	(x=0XE53B7B);
	op_stkvar	(x,	0);
	set_cmt	(0XE53B7E,	"lpSrc",	0);
	create_insn	(x=0XE53B7E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53B81);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE53B93);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53B96);
	op_stkvar	(x,	0);
	create_insn	(0XE53BA2);
	set_cmt	(0XE53BA3,	"lpMem",	0);
	create_insn	(x=0XE53BA3);
	op_stkvar	(x,	0);
	create_insn	(0XE53BB3);
	create_insn	(x=0XE53BBB);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53BC5);
	op_stkvar	(x,	0);
	set_cmt	(0XE53BDB,	"lpDst",	0);
	set_cmt	(0XE53BF2,	"dwBytes",	0);
	set_cmt	(0XE53BF3,	"lpMem",	0);
	set_cmt	(0XE53C01,	"lpDst",	0);
	set_cmt	(0XE53C10,	"lpMem",	0);
	create_insn	(0XE53C10);
	set_cmt	(0XE53C19,	"lpMem",	0);
	create_insn	(x=0XE53C19);
	op_stkvar	(x,	0);
	create_insn	(0XE53C29);
	create_insn	(x=0XE53C2C);
	op_hex		(x,	1);
	create_insn	(x=0XE53C34);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53C3E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE53C41);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53C44);
	op_stkvar	(x,	1);
	create_insn	(x=0XE53C49);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53C4C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53C50);
	op_stkvar	(x,	1);
	create_insn	(x=0XE53C53);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE53C5F);
	op_stkvar	(x,	1);
	set_cmt	(0XE53C69,	"lpMem",	0);
	create_insn	(x=0XE53C71);
	op_hex		(x,	1);
	create_insn	(0XE53C7A);
	create_insn	(x=0XE53C85);
	op_stkvar	(x,	0);
	set_cmt	(0XE53C8E,	"nFileSystemNameSize",	0);
	set_cmt	(0XE53C8F,	"lpFileSystemNameBuffer",	0);
	set_cmt	(0XE53C90,	"lpFileSystemFlags",	0);
	set_cmt	(0XE53C93,	"lpMaximumComponentLength",	0);
	create_insn	(x=0XE53C94);
	op_stkvar	(x,	1);
	set_cmt	(0XE53C97,	"lpVolumeSerialNumber",	0);
	set_cmt	(0XE53C9F,	"nVolumeNameSize",	0);
	set_cmt	(0XE53CA0,	"lpVolumeNameBuffer",	0);
	set_cmt	(0XE53CA1,	"lpRootPathName",	0);
	create_insn	(x=0XE53CA2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE53CAC);
	op_stkvar	(x,	0);
	set_cmt	(0XE53CAF,	"lpMem",	0);
	create_insn	(x=0XE53CB5);
	op_stkvar	(x,	1);
	create_insn	(0XE53CBD);
	create_insn	(x=0XE53CC0);
	op_hex		(x,	1);
	set_cmt	(0XE53CC6,	"dwFlags",	0);
	set_cmt	(0XE53CC7,	"pszProxyBypassW",	0);
	set_cmt	(0XE53CC8,	"pszProxyW",	0);
	set_cmt	(0XE53CC9,	"dwAccessType",	0);
	set_cmt	(0XE53CCB,	"pszAgentW",	0);
	create_insn	(x=0XE53CCB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE53CD0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53CD3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE53CD9);
	op_stkvar	(x,	0);
	set_cmt	(0XE53CE1,	"dwReserved",	0);
	set_cmt	(0XE53CE2,	"nServerPort",	0);
	set_cmt	(0XE53CE3,	"pswzServerName",	0);
	create_insn	(x=0XE53CE3);
	op_stkvar	(x,	0);
	set_cmt	(0XE53CE6,	"hSession",	0);
	create_insn	(x=0XE53CE7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE53CED);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE53CF3);
	op_stkvar	(x,	0);
	set_cmt	(0XE53CFB,	"dwFlags",	0);
	set_cmt	(0XE53CFC,	"ppwszAcceptTypes",	0);
	set_cmt	(0XE53CFD,	"pwszReferrer",	0);
	set_cmt	(0XE53CFE,	"pwszVersion",	0);
	set_cmt	(0XE53CFF,	"pwszObjectName",	0);
	create_insn	(x=0XE53CFF);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53D02);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE53D07,	"hConnect",	0);
	create_insn	(x=0XE53D08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE53D14,	"dwContext",	0);
	set_cmt	(0XE53D15,	"dwTotalLength",	0);
	create_insn	(x=0XE53D15);
	op_stkvar	(x,	0);
	set_cmt	(0XE53D18,	"dwOptionalLength",	0);
	create_insn	(x=0XE53D18);
	op_stkvar	(x,	0);
	set_cmt	(0XE53D1B,	"lpOptional",	0);
	create_insn	(x=0XE53D1B);
	op_stkvar	(x,	0);
	set_cmt	(0XE53D1E,	"dwHeadersLength",	0);
	set_cmt	(0XE53D1F,	"lpszHeaders",	0);
	set_cmt	(0XE53D20,	"hRequest",	0);
	create_insn	(x=0XE53D21);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE53D2B,	"lpReserved",	0);
	set_cmt	(0XE53D2C,	"hRequest",	0);
	create_insn	(x=0XE53D2D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE53D33);
	op_stkvar	(x,	0);
	set_cmt	(0XE53D36,	"hInternet",	0);
	set_cmt	(0XE53D39,	"hInternet",	0);
	create_insn	(x=0XE53D39);
	op_stkvar	(x,	0);
	set_cmt	(0XE53D3F,	"hInternet",	0);
	create_insn	(x=0XE53D3F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53D45);
	op_stkvar	(x,	1);
	create_insn	(0XE53D4B);
	create_insn	(x=0XE53D4E);
	op_hex		(x,	1);
	create_insn	(x=0XE53D54);
	op_stkvar	(x,	1);
	create_insn	(x=0XE53D67);
	op_hex		(x,	1);
	create_insn	(x=0XE53D6E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53D77);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53D80);
	op_stkvar	(x,	0);
	set_cmt	(0XE53D8B,	"lpModuleName",	0);
	create_insn	(x=0XE53D8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE53D96);
	op_stkvar	(x,	0);
	set_cmt	(0XE53D9F,	"lpProcName",	0);
	create_insn	(0XE53D9F);
	set_cmt	(0XE53DA0,	"hModule",	0);
	create_insn	(x=0XE53DA1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE53DAB);
	op_stkvar	(x,	0);
	set_cmt	(0XE53DB0,	"int",	0);
	create_insn	(x=0XE53DB0);
	op_stkvar	(x,	0);
	set_cmt	(0XE53DB3,	"lpMem",	0);
	create_insn	(0XE53DC0);
	create_insn	(x=0XE53DC3);
	op_hex		(x,	1);
	create_insn	(x=0XE53DC8);
	op_stkvar	(x,	1);
	set_cmt	(0XE53DCB,	"TokenHandle",	0);
	set_cmt	(0XE53DCE,	"DesiredAccess",	0);
	create_insn	(x=0XE53DD2);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53DD5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE53DDB,	"ProcessHandle",	0);
	create_insn	(x=0XE53DDC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE53DE6);
	op_stkvar	(x,	1);
	set_cmt	(0XE53DE9,	"lpLuid",	0);
	set_cmt	(0XE53DEA,	"lpName",	0);
	create_insn	(x=0XE53DEA);
	op_stkvar	(x,	0);
	set_cmt	(0XE53DED,	"lpSystemName",	0);
	create_insn	(x=0XE53DEE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE53DF8);
	op_stkvar	(x,	1);
	set_cmt	(0XE53DFB,	"ReturnLength",	0);
	create_insn	(x=0XE53DFC);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53DFF);
	op_stkvar	(x,	1);
	set_cmt	(0XE53E02,	"PreviousState",	0);
	set_cmt	(0XE53E03,	"BufferLength",	0);
	create_insn	(x=0XE53E04);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53E07);
	op_stkvar	(x,	1);
	set_cmt	(0XE53E0A,	"NewState",	0);
	set_cmt	(0XE53E0B,	"DisableAllPrivileges",	0);
	set_cmt	(0XE53E0C,	"TokenHandle",	0);
	create_insn	(x=0XE53E0C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53E0F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53E16);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53E1D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE53E25);
	op_stkvar	(x,	0);
	set_cmt	(0XE53E2A,	"hObject",	0);
	create_insn	(x=0XE53E2A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53E2D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE53E39);
	create_insn	(x=0XE53E3C);
	op_hex		(x,	1);
	create_insn	(x=0XE53E42);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE53E48);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53E52);
	op_stkvar	(x,	1);
	set_cmt	(0XE53E55,	"TokenHandle",	0);
	set_cmt	(0XE53E56,	"DesiredAccess",	0);
	create_insn	(x=0XE53E58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE53E5E,	"ProcessHandle",	0);
	create_insn	(x=0XE53E5F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE53E6C);
	op_stkvar	(x,	1);
	set_cmt	(0XE53E6F,	"ReturnLength",	0);
	set_cmt	(0XE53E70,	"TokenInformationLength",	0);
	create_insn	(x=0XE53E71);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53E74);
	op_stkvar	(x,	1);
	set_cmt	(0XE53E77,	"TokenInformation",	0);
	set_cmt	(0XE53E78,	"TokenInformationClass",	0);
	set_cmt	(0XE53E7A,	"TokenHandle",	0);
	create_insn	(x=0XE53E7A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53E7D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE53E87);
	op_stkvar	(x,	1);
	create_insn	(x=0XE53E8A);
	op_stkvar	(x,	0);
	set_cmt	(0XE53E90,	"hObject",	0);
	create_insn	(x=0XE53E90);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53E93);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE53E9E);
	create_insn	(x=0XE53EA1);
	op_hex		(x,	1);
	create_insn	(x=0XE53EA6);
	op_stkvar	(x,	1);
	create_insn	(x=0XE53EB1);
	op_stkvar	(x,	1);
	create_insn	(x=0XE53EB4);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53EB7);
	op_stkvar	(x,	1);
	create_insn	(x=0XE53EBA);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53EBD);
	op_hex		(x,	1);
	create_insn	(x=0XE53EC0);
	op_stkvar	(x,	1);
	set_cmt	(0XE53EC3,	"pExecInfo",	0);
	create_insn	(x=0XE53EC4);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53ECB);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53ED2);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53ED9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE53EE1);
	create_insn	(x=0XE53EE4);
	op_hex		(x,	1);
	create_insn	(x=0XE53EEA);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE53EF1);
	op_stkvar	(x,	1);
	create_insn	(x=0XE53F04);
	op_hex		(x,	1);
	create_insn	(x=0XE53F0B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53F16);
	op_stkvar	(x,	1);
	create_insn	(x=0XE53F19);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53F22);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53F2B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53F30);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53F3B);
	op_stkvar	(x,	1);
	create_insn	(x=0XE53F3E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53F47);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53F50);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53F55);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53F60);
	op_stkvar	(x,	1);
	create_insn	(x=0XE53F63);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53F6C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53F75);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53F7A);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	set_cmt	(0XE53F7E,	"lpProcName",	0);
	create_insn	(x=0XE53F7F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XE53F85,	"lpModuleName",	0);
	create_insn	(x=0XE53F88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XE53F8E,	"hModule",	0);
	set_cmt	(0XE53F91,	"lpProcName",	0);
	create_insn	(x=0XE53F91);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53F94);
	op_stkvar	(x,	0);
	set_cmt	(0XE53F97,	"lpModuleName",	0);
	set_cmt	(0XE53F9A,	"hModule",	0);
	set_cmt	(0XE53F9D,	"lpProcName",	0);
	create_insn	(x=0XE53F9D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53FA0);
	op_stkvar	(x,	0);
	set_cmt	(0XE53FA3,	"lpModuleName",	0);
	set_cmt	(0XE53FA6,	"hModule",	0);
	set_cmt	(0XE53FA9,	"lpProcName",	0);
	create_insn	(x=0XE53FA9);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53FAC);
	op_stkvar	(x,	0);
	set_cmt	(0XE53FAF,	"lpModuleName",	0);
	set_cmt	(0XE53FB2,	"hModule",	0);
	create_insn	(x=0XE53FB7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53FBA);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53FC3);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53FCC);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53FD5);
	op_stkvar	(x,	0);
	create_insn	(x=0XE53FE6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE53FEC,	"dwProcessId",	0);
	set_cmt	(0XE53FED,	"bInheritHandle",	0);
	set_cmt	(0XE53FEE,	"dwDesiredAccess",	0);
	create_insn	(x=0XE53FF3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE53FFB);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5400A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54010);
	op_stkvar	(x,	0);
	set_cmt	(0XE5401B,	"lpNumberOfBytesRead",	0);
	set_cmt	(0XE5401C,	"nSize",	0);
	create_insn	(x=0XE5401E);
	op_stkvar	(x,	1);
	set_cmt	(0XE54021,	"lpBuffer",	0);
	set_cmt	(0XE54022,	"lpBaseAddress",	0);
	create_insn	(x=0XE54022);
	op_stkvar	(x,	0);
	set_cmt	(0XE54025,	"hProcess",	0);
	create_insn	(x=0XE54026);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XE54036,	"lpNumberOfBytesRead",	0);
	set_cmt	(0XE54037,	"nSize",	0);
	create_insn	(x=0XE54039);
	op_stkvar	(x,	1);
	set_cmt	(0XE5403F,	"lpBuffer",	0);
	set_cmt	(0XE54040,	"lpBaseAddress",	0);
	create_insn	(x=0XE54040);
	op_stkvar	(x,	0);
	set_cmt	(0XE54043,	"hProcess",	0);
	create_insn	(x=0XE54043);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54050);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54053);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54056);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54059);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54060);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54063);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54066);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5406D);
	op_stkvar	(x,	0);
	set_cmt	(0XE54070,	"nSize",	0);
	create_insn	(x=0XE54075);
	op_stkvar	(x,	1);
	set_cmt	(0XE5407B,	"lpFilename",	0);
	set_cmt	(0XE5407C,	"hModule",	0);
	create_insn	(x=0XE5407D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE54083);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54089);
	op_stkvar	(x,	0);
	set_cmt	(0XE5408C,	"lpNumberOfBytesRead",	0);
	set_cmt	(0XE5408D,	"nSize",	0);
	create_insn	(x=0XE5408F);
	op_stkvar	(x,	1);
	set_cmt	(0XE54092,	"lpBuffer",	0);
	create_insn	(x=0XE54093);
	op_stkvar	(x,	1);
	set_cmt	(0XE54096,	"lpBaseAddress",	0);
	set_cmt	(0XE54097,	"hProcess",	0);
	create_insn	(x=0XE54097);
	op_stkvar	(x,	0);
	create_insn	(x=0XE540A0);
	op_stkvar	(x,	1);
	set_cmt	(0XE540A7,	"lpNumberOfBytesRead",	0);
	set_cmt	(0XE540A8,	"nSize",	0);
	create_insn	(x=0XE540A9);
	op_stkvar	(x,	1);
	set_cmt	(0XE540AF,	"lpBuffer",	0);
	set_cmt	(0XE540B0,	"lpBaseAddress",	0);
	set_cmt	(0XE540B3,	"hProcess",	0);
	create_insn	(x=0XE540B3);
	op_stkvar	(x,	0);
	create_insn	(x=0XE540BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE540C2);
	op_stkvar	(x,	1);
	create_insn	(x=0XE540CF);
	op_stkvar	(x,	1);
	create_insn	(x=0XE540D6);
	op_stkvar	(x,	1);
	create_insn	(x=0XE540DD);
	op_stkvar	(x,	0);
	create_insn	(x=0XE540E4);
	op_stkvar	(x,	0);
	create_insn	(x=0XE540E7);
	op_stkvar	(x,	1);
	create_insn	(x=0XE540EA);
	op_stkvar	(x,	0);
	create_insn	(x=0XE540F1);
	op_stkvar	(x,	0);
	create_insn	(x=0XE540F4);
	op_stkvar	(x,	0);
	create_insn	(x=0XE540FB);
	op_stkvar	(x,	0);
	create_insn	(x=0XE540FE);
	op_stkvar	(x,	0);
	set_cmt	(0XE54101,	"hObject",	0);
	create_insn	(x=0XE54101);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54104);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE5410A,	"int",	0);
	create_insn	(x=0XE5410A);
	op_stkvar	(x,	0);
	set_cmt	(0XE5410D,	"lpMem",	0);
	create_insn	(x=0XE54113);
	op_stkvar	(x,	1);
	create_insn	(0XE5411D);
	create_insn	(x=0XE54120);
	op_hex		(x,	1);
	create_insn	(x=0XE54126);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5412E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5413E);
	op_hex		(x,	1);
	set_cmt	(0XE54145,	"lpProcName",	0);
	set_cmt	(0XE54146,	"lpModuleName",	0);
	create_insn	(x=0XE54147);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE5414D,	"hModule",	0);
	create_insn	(x=0XE5414E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE54157);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54163);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54169);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5416C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54171);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54174);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54177);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5417A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54183);
	op_stkvar	(x,	1);
	set_cmt	(0XE54186,	"ppv",	0);
	set_cmt	(0XE54187,	"riid",	0);
	create_insn	(x=0XE54187);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5418C);
	op_stkvar	(x,	1);
	set_cmt	(0XE5418F,	"pBindOptions",	0);
	set_cmt	(0XE54190,	"pszName",	0);
	create_insn	(x=0XE54190);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54193);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5419A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE541A1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE541AF);
	op_stkvar	(x,	1);
	create_insn	(x=0XE541B9);
	op_stkvar	(x,	1);
	create_insn	(x=0XE541BE);
	op_hex		(x,	1);
	create_insn	(x=0XE541D3);
	op_stkvar	(x,	1);
	create_insn	(x=0XE541D7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE541DE);
	op_stkvar	(x,	0);
	create_insn	(x=0XE541E1);
	op_stkvar	(x,	0);
	create_insn	(x=0XE541E8);
	op_stkvar	(x,	0);
	create_insn	(x=0XE541EE);
	op_stkvar	(x,	1);
	create_insn	(x=0XE541F4);
	op_stkvar	(x,	0);
	create_insn	(x=0XE541F7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE541FE);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54204);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54207);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5420A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54213);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54219);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5421F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5422A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54237);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5423E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5424B);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54258);
	op_stkvar	(x,	1);
	set_cmt	(0XE54265,	"lpMem",	0);
	create_insn	(x=0XE54265);
	op_stkvar	(x,	0);
	set_cmt	(0XE5426E,	"int",	0);
	create_insn	(x=0XE5426E);
	op_stkvar	(x,	0);
	set_cmt	(0XE54271,	"lpMem",	0);
	create_insn	(x=0XE54277);
	op_stkvar	(x,	1);
	create_insn	(0XE54281);
	create_insn	(x=0XE54285);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54295);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5429E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE542AC);
	op_hex		(x,	1);
	create_insn	(0XE542BD);
	create_insn	(x=0XE542C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE542C3);
	op_hex		(x,	1);
	create_insn	(x=0XE542D6);
	op_stkvar	(x,	1);
	create_insn	(x=0XE542DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE542E2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE542E7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE542F7);
	op_hex		(x,	1);
	create_insn	(x=0XE54301);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54315);
	op_hex		(x,	1);
	create_insn	(0XE54325);
	create_insn	(x=0XE54328);
	op_hex		(x,	1);
	create_insn	(x=0XE54362);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54365);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE54369);
	op_hex		(x,	1);
	create_insn	(x=0XE5436F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54372);
	op_stkvar	(x,	1);
	set_cmt	(0XE54375,	"dwCoInit",	0);
	set_cmt	(0XE54377,	"pvReserved",	0);
	create_insn	(x=0XE54379);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5437C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5437F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE54389);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5438C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE54393);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE54398);
	op_stkvar	(x,	0);
	create_insn	(x=0XE543A7);
	op_stkvar	(x,	1);
	create_insn	(x=0XE543B2);
	op_hex		(x,	1);
	create_insn	(x=0XE543B5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE543BB,	"int",	0);
	set_cmt	(0XE543BC,	"lpMem",	0);
	create_insn	(x=0XE543C2);
	op_stkvar	(x,	1);
	create_insn	(0XE543CC);
	create_insn	(x=0XE543CF);
	op_hex		(x,	1);
	create_insn	(x=0XE543D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE543E7);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE543EB);
	op_hex		(x,	1);
	create_insn	(x=0XE543EE);
	op_stkvar	(x,	1);
	set_cmt	(0XE543F1,	"lpData",	0);
	set_cmt	(0XE543F6,	"lpValueName",	0);
	set_cmt	(0XE543F7,	"lpSubKey",	0);
	set_cmt	(0XE543F8,	"hKey",	0);
	create_insn	(x=0XE543FD);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54400);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5440C);
	op_hex		(x,	1);
	create_insn	(x=0XE54413);
	op_stkvar	(x,	0);
	set_cmt	(0XE54416,	"int",	0);
	create_insn	(x=0XE54416);
	op_stkvar	(x,	0);
	set_cmt	(0XE54419,	"lpMem",	0);
	create_insn	(x=0XE5441F);
	op_stkvar	(x,	1);
	create_insn	(0XE54428);
	set_name	(0XE54428,	"mw_check_Sid");
	create_insn	(x=0XE5442B);
	op_hex		(x,	1);
	create_insn	(x=0XE54433);
	op_stkvar	(x,	1);
	set_cmt	(0XE54438,	"TokenHandle",	0);
	set_cmt	(0XE54439,	"DesiredAccess",	0);
	create_insn	(x=0XE5443B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54440);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54443);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54446);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54449);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5444F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE54455,	"ProcessHandle",	0);
	create_insn	(x=0XE54456);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE54465);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5446B);
	op_stkvar	(x,	1);
	set_cmt	(0XE5446E,	"ReturnLength",	0);
	set_cmt	(0XE5446F,	"TokenInformationLength",	0);
	create_insn	(x=0XE5446F);
	op_stkvar	(x,	0);
	set_cmt	(0XE54472,	"TokenInformation",	0);
	set_cmt	(0XE54473,	"TokenInformationClass",	0);
	set_cmt	(0XE54475,	"TokenHandle",	0);
	create_insn	(x=0XE54475);
	op_stkvar	(x,	0);
	set_cmt	(0XE5447A,	"dwBytes",	0);
	create_insn	(x=0XE5447A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54485);
	op_stkvar	(x,	1);
	set_cmt	(0XE54488,	"ReturnLength",	0);
	set_cmt	(0XE54489,	"TokenInformationLength",	0);
	create_insn	(x=0XE54489);
	op_stkvar	(x,	0);
	set_cmt	(0XE5448C,	"TokenInformation",	0);
	set_cmt	(0XE5448D,	"TokenInformationClass",	0);
	set_cmt	(0XE5448F,	"TokenHandle",	0);
	create_insn	(x=0XE5448F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5449C);
	op_stkvar	(x,	1);
	set_cmt	(0XE5449F,	"pSid",	0);
	set_cmt	(0XE544A0,	"nSubAuthority7",	0);
	set_cmt	(0XE544A1,	"nSubAuthority6",	0);
	set_cmt	(0XE544A2,	"nSubAuthority5",	0);
	set_cmt	(0XE544A3,	"nSubAuthority4",	0);
	set_cmt	(0XE544A4,	"nSubAuthority3",	0);
	set_cmt	(0XE544A5,	"nSubAuthority2",	0);
	set_cmt	(0XE544A6,	"nSubAuthority1",	0);
	set_cmt	(0XE544AB,	"nSubAuthority0",	0);
	set_cmt	(0XE544AD,	"nSubAuthorityCount",	0);
	create_insn	(x=0XE544AF);
	op_stkvar	(x,	1);
	set_cmt	(0XE544B2,	"pIdentifierAuthority",	0);
	create_insn	(x=0XE544B3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE544C6);
	op_stkvar	(x,	0);
	create_insn	(x=0XE544C9);
	op_stkvar	(x,	1);
	set_cmt	(0XE544CC,	"pSid2",	0);
	set_cmt	(0XE544CE,	"pSid1",	0);
	create_insn	(x=0XE544CE);
	op_stkvar	(x,	0);
	create_insn	(x=0XE544D1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE544DB);
	op_stkvar	(x,	0);
	create_insn	(x=0XE544E6);
	op_stkvar	(x,	1);
	set_cmt	(0XE544E9,	"peUse",	0);
	create_insn	(x=0XE544EA);
	op_stkvar	(x,	1);
	set_cmt	(0XE544ED,	"cchReferencedDomainName",	0);
	create_insn	(x=0XE544EE);
	op_stkvar	(x,	1);
	set_cmt	(0XE544F4,	"ReferencedDomainName",	0);
	create_insn	(x=0XE544F5);
	op_stkvar	(x,	1);
	set_cmt	(0XE544F8,	"cchName",	0);
	create_insn	(x=0XE544F9);
	op_stkvar	(x,	1);
	set_cmt	(0XE544FF,	"Name",	0);
	create_insn	(x=0XE54500);
	op_stkvar	(x,	0);
	set_cmt	(0XE54507,	"Sid",	0);
	set_cmt	(0XE5450B,	"lpSystemName",	0);
	create_insn	(x=0XE5450C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE54516);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE54523);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5452B);
	op_stkvar	(x,	0);
	set_cmt	(0XE54530,	"pSid",	0);
	create_insn	(x=0XE54530);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54533);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE5453D,	"lpMem",	0);
	create_insn	(x=0XE54544);
	op_stkvar	(x,	1);
	create_insn	(0XE5454B);
	set_name	(0XE5454B,	"StartAddress");
	create_insn	(x=0XE5454E);
	op_hex		(x,	1);
	create_insn	(x=0XE54551);
	op_hex		(x,	1);
	create_insn	(x=0XE5455A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54569);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54578);
	op_hex		(x,	1);
	create_insn	(x=0XE5457B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5457F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54588);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5458C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE545A0);
	op_hex		(x,	1);
	create_insn	(x=0XE545A3);
	op_stkvar	(x,	1);
	set_cmt	(0XE545A7,	"lpData",	0);
	set_cmt	(0XE545AC,	"lpValueName",	0);
	set_cmt	(0XE545AD,	"lpSubKey",	0);
	set_cmt	(0XE545AE,	"hKey",	0);
	create_insn	(x=0XE545B3);
	op_stkvar	(x,	1);
	create_insn	(x=0XE545B7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE545BB);
	op_stkvar	(x,	0);
	create_insn	(x=0XE545C8);
	op_hex		(x,	1);
	create_insn	(x=0XE545D1);
	op_stkvar	(x,	1);
	create_insn	(x=0XE545DC);
	op_hex		(x,	1);
	create_insn	(x=0XE545DF);
	op_stkvar	(x,	0);
	set_cmt	(0XE545E3,	"int",	0);
	create_insn	(x=0XE545E3);
	op_stkvar	(x,	0);
	set_cmt	(0XE545E7,	"lpMem",	0);
	create_insn	(x=0XE545EF);
	op_stkvar	(x,	0);
	create_insn	(x=0XE545F3);
	op_stkvar	(x,	0);
	create_insn	(x=0XE545FC);
	op_hex		(x,	1);
	create_insn	(x=0XE54602);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5460E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54619);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54622);
	op_hex		(x,	1);
	set_cmt	(0XE54625,	"dwBytes",	0);
	create_insn	(x=0XE5462A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54634);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54638);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5463C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE54642,	"lpProcName",	0);
	create_insn	(x=0XE54642);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54646);
	op_stkvar	(x,	0);
	set_cmt	(0XE5464A,	"lpModuleName",	0);
	create_insn	(x=0XE5464A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5464E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE54654,	"hModule",	0);
	create_insn	(x=0XE54655);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5465D);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54664);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5466D);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54678);
	op_stkvar	(x,	0);
	set_cmt	(0XE546A0,	"lpFilename",	0);
	create_insn	(x=0XE546A0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE546B5);
	op_stkvar	(x,	0);
	create_insn	(x=0XE546B9);
	op_stkvar	(x,	1);
	create_insn	(x=0XE546CD);
	op_hex		(x,	1);
	create_insn	(x=0XE546DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE546E1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE546EE);
	op_stkvar	(x,	0);
	create_insn	(x=0XE546F6);
	op_stkvar	(x,	0);
	create_insn	(x=0XE546FC);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54700);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54705);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54718);
	op_stkvar	(x,	0);
	set_cmt	(0XE54724,	"hTemplateFile",	0);
	set_cmt	(0XE54725,	"dwFlagsAndAttributes",	0);
	set_cmt	(0XE54726,	"dwCreationDisposition",	0);
	set_cmt	(0XE54728,	"lpSecurityAttributes",	0);
	set_cmt	(0XE54729,	"dwShareMode",	0);
	set_cmt	(0XE5472A,	"dwDesiredAccess",	0);
	create_insn	(x=0XE5472F);
	op_stkvar	(x,	1);
	set_cmt	(0XE54736,	"lpFileName",	0);
	create_insn	(x=0XE54737);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5473D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5474A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XE54750,	"lpOverlapped",	0);
	create_insn	(x=0XE54751);
	op_stkvar	(x,	1);
	set_cmt	(0XE54755,	"lpNumberOfBytesWritten",	0);
	set_cmt	(0XE54756,	"nNumberOfBytesToWrite",	0);
	create_insn	(x=0XE54756);
	op_stkvar	(x,	0);
	set_cmt	(0XE5475A,	"lpBuffer",	0);
	create_insn	(x=0XE5475A);
	op_stkvar	(x,	0);
	set_cmt	(0XE5475E,	"hFile",	0);
	create_insn	(x=0XE54769);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5476D);
	op_stkvar	(x,	0);
	set_cmt	(0XE54777,	"lpOverlapped",	0);
	create_insn	(x=0XE54778);
	op_stkvar	(x,	1);
	set_cmt	(0XE5477C,	"lpNumberOfBytesWritten",	0);
	set_cmt	(0XE54782,	"nNumberOfBytesToWrite",	0);
	set_cmt	(0XE54783,	"lpBuffer",	0);
	create_insn	(x=0XE54783);
	op_stkvar	(x,	0);
	set_cmt	(0XE54787,	"hFile",	0);
	create_insn	(x=0XE54787);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54795);
	op_stkvar	(x,	0);
	set_cmt	(0XE5479F,	"hFile",	0);
	create_insn	(x=0XE5479F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE547A3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE547A9,	"hObject",	0);
	create_insn	(x=0XE547A9);
	op_stkvar	(x,	0);
	create_insn	(x=0XE547AD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE547B3);
	op_stkvar	(x,	0);
	create_insn	(x=0XE547C1);
	op_stkvar	(x,	0);
	create_insn	(x=0XE547C5);
	op_stkvar	(x,	1);
	create_insn	(x=0XE547CC);
	op_stkvar	(x,	0);
	create_insn	(x=0XE547D7);
	op_hex		(x,	1);
	create_insn	(x=0XE547DE);
	op_stkvar	(x,	0);
	create_insn	(x=0XE547E2);
	op_stkvar	(x,	0);
	create_insn	(x=0XE547ED);
	op_stkvar	(x,	0);
	set_cmt	(0XE547F5,	"dwMilliseconds",	0);
	set_cmt	(0XE547F7,	"hHandle",	0);
	create_insn	(x=0XE547F7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE547FA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE54800);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54804);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54810);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54819);
	op_hex		(x,	1);
	create_insn	(x=0XE5481C);
	op_stkvar	(x,	1);
	set_cmt	(0XE54823,	"lpFileName",	0);
	create_insn	(x=0XE54824);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5482C);
	op_stkvar	(x,	0);
	set_cmt	(0XE54835,	"lpMem",	0);
	create_insn	(x=0XE54835);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5483E);
	op_hex		(x,	1);
	set_cmt	(0XE54841,	"int",	0);
	create_insn	(x=0XE54841);
	op_stkvar	(x,	0);
	set_cmt	(0XE54845,	"lpMem",	0);
	create_insn	(x=0XE54845);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54853);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54861);
	op_hex		(x,	1);
	set_cmt	(0XE54864,	"lpMem",	0);
	create_insn	(x=0XE54864);
	op_stkvar	(x,	0);
	set_cmt	(0XE5486E,	"int",	0);
	create_insn	(x=0XE5486E);
	op_stkvar	(x,	0);
	set_cmt	(0XE54872,	"lpMem",	0);
	create_insn	(x=0XE54872);
	op_stkvar	(x,	0);
	set_cmt	(0XE5487B,	"lpMem",	0);
	create_insn	(x=0XE5487B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54884);
	op_hex		(x,	1);
	set_cmt	(0XE54887,	"lpMem",	0);
	create_insn	(x=0XE54887);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54890);
	op_stkvar	(x,	1);
	create_insn	(0XE5489E);
	create_insn	(x=0XE548A1);
	op_hex		(x,	1);
	set_cmt	(0XE548A9,	"dwBytes",	0);
	create_insn	(x=0XE548AE);
	op_stkvar	(x,	0);
	create_insn	(x=0XE548BB);
	op_stkvar	(x,	1);
	create_insn	(x=0XE548C0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE548CA);
	op_stkvar	(x,	0);
	create_insn	(x=0XE548CD);
	op_stkvar	(x,	1);
	create_insn	(x=0XE548D2);
	op_hex		(x,	1);
	create_insn	(x=0XE548D6);
	op_stkvar	(x,	1);
	set_cmt	(0XE548E6,	"lpFilename",	0);
	create_insn	(x=0XE548F1);
	op_stkvar	(x,	1);
	set_cmt	(0XE548F4,	"lpProcessInformation",	0);
	create_insn	(x=0XE548F5);
	op_stkvar	(x,	1);
	set_cmt	(0XE548F8,	"lpStartupInfo",	0);
	set_cmt	(0XE548F9,	"lpCurrentDirectory",	0);
	set_cmt	(0XE548FA,	"lpEnvironment",	0);
	set_cmt	(0XE548FB,	"dwCreationFlags",	0);
	set_cmt	(0XE548FC,	"bInheritHandles",	0);
	set_cmt	(0XE548FD,	"lpThreadAttributes",	0);
	set_cmt	(0XE548FE,	"lpProcessAttributes",	0);
	set_cmt	(0XE548FF,	"lpCommandLine",	0);
	set_cmt	(0XE54900,	"lpApplicationName",	0);
	create_insn	(x=0XE54901);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54908);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5490E);
	op_stkvar	(x,	0);
	set_cmt	(0XE54915,	"hObject",	0);
	create_insn	(x=0XE54915);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54918);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XE54920,	"hObject",	0);
	create_insn	(x=0XE54920);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54927);
	op_stkvar	(x,	0);
	set_cmt	(0XE54935,	"lpMem",	0);
	create_insn	(x=0XE5493C);
	op_stkvar	(x,	1);
	create_insn	(0XE54944);
	set_name	(0XE54944,	"mw_CreateProcess_E54944");
	create_insn	(x=0XE54947);
	op_hex		(x,	1);
	create_insn	(x=0XE5494A);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE54951);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE54962,	"dwBytes",	0);
	create_insn	(x=0XE5496E);
	op_hex		(x,	1);
	create_insn	(x=0XE54981);
	op_stkvar	(x,	1);
	set_cmt	(0XE54996,	"lpFilename",	0);
	create_insn	(x=0XE549AA);
	op_stkvar	(x,	0);
	create_insn	(x=0XE549AF);
	op_stkvar	(x,	0);
	set_cmt	(0XE549BD,	"lpMem",	0);
	set_cmt	(0XE549C4,	"lpMem",	0);
	create_insn	(x=0XE549CA);
	op_stkvar	(x,	1);
	create_insn	(0XE549D3);
	create_insn	(x=0XE549D6);
	op_hex		(x,	1);
	create_insn	(x=0XE549DF);
	op_stkvar	(x,	1);
	create_insn	(x=0XE549E7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE549F2);
	op_stkvar	(x,	0);
	create_insn	(x=0XE549FA);
	op_hex		(x,	1);
	set_cmt	(0XE549FD,	"dwBytes",	0);
	create_insn	(x=0XE54A0C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54A0F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54A12);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE54A1A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54A1D);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54A25);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54A28);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54A2B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54A2E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54A3B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54A3E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54A46);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54A49);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54A4D);
	op_hex		(x,	1);
	create_insn	(x=0XE54A50);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54A55);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE54A61);
	op_stkvar	(x,	1);
	set_cmt	(0XE54A6D,	"lpProcName",	0);
	set_cmt	(0XE54A6E,	"lpModuleName",	0);
	create_insn	(x=0XE54A6E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54A71);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE54A77,	"hModule",	0);
	create_insn	(x=0XE54A78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE54A7E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54A89);
	op_stkvar	(x,	0);
	set_cmt	(0XE54A92,	"lpFilename",	0);
	create_insn	(x=0XE54A92);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54AA3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE54AAD);
	op_stkvar	(x,	1);
	set_cmt	(0XE54AB0,	"lpdwProcessId",	0);
	set_cmt	(0XE54AB1,	"hWnd",	0);
	create_insn	(x=0XE54AB2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE54ABC,	"dwProcessId",	0);
	create_insn	(x=0XE54ABC);
	op_stkvar	(x,	0);
	set_cmt	(0XE54ABF,	"bInheritHandle",	0);
	set_cmt	(0XE54AC0,	"dwDesiredAccess",	0);
	create_insn	(x=0XE54AC5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE54ACB);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54AD2);
	op_stkvar	(x,	1);
	set_cmt	(0XE54AD5,	"TokenHandle",	0);
	set_cmt	(0XE54ADB,	"DesiredAccess",	0);
	set_cmt	(0XE54ADC,	"ProcessHandle",	0);
	create_insn	(x=0XE54ADD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE54AE7);
	op_stkvar	(x,	1);
	set_cmt	(0XE54AEA,	"phNewToken",	0);
	set_cmt	(0XE54AEB,	"TokenType",	0);
	set_cmt	(0XE54AED,	"ImpersonationLevel",	0);
	create_insn	(x=0XE54AEF);
	op_stkvar	(x,	1);
	set_cmt	(0XE54AF2,	"lpTokenAttributes",	0);
	set_cmt	(0XE54AF3,	"dwDesiredAccess",	0);
	set_cmt	(0XE54AF4,	"hExistingToken",	0);
	create_insn	(x=0XE54AF4);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54AF7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54AFE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE54B08);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54B0C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54B17);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54B1B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54B1E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54B21);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54B26);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54B30);
	op_stkvar	(x,	0);
	set_cmt	(0XE54B35,	"hObject",	0);
	create_insn	(x=0XE54B35);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54B3A);
	op_stkvar	(x,	0);
	set_cmt	(0XE54B3F,	"hObject",	0);
	create_insn	(x=0XE54B3F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54B44);
	op_stkvar	(x,	0);
	set_cmt	(0XE54B49,	"hObject",	0);
	create_insn	(x=0XE54B49);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54B4E);
	op_stkvar	(x,	0);
	set_cmt	(0XE54B53,	"hObject",	0);
	create_insn	(x=0XE54B53);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54B58);
	op_stkvar	(x,	0);
	set_cmt	(0XE54B5D,	"hObject",	0);
	create_insn	(x=0XE54B5D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54B62);
	op_stkvar	(x,	0);
	set_cmt	(0XE54B67,	"lpMem",	0);
	create_insn	(x=0XE54B67);
	op_stkvar	(x,	0);
	set_cmt	(0XE54B70,	"int",	0);
	create_insn	(x=0XE54B70);
	op_stkvar	(x,	0);
	set_cmt	(0XE54B73,	"lpMem",	0);
	create_insn	(x=0XE54B73);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54B7B);
	op_stkvar	(x,	1);
	create_insn	(0XE54B85);
	create_insn	(x=0XE54B88);
	op_hex		(x,	1);
	create_insn	(x=0XE54B8B);
	op_hex		(x,	1);
	create_insn	(x=0XE54B98);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54B9C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54BA6);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54BAA);
	op_hex		(x,	1);
	create_insn	(x=0XE54BAF);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54BB3);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54BB7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54BBB);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54BBF);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54BCA);
	op_hex		(x,	1);
	create_insn	(x=0XE54BD1);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54BDC);
	op_hex		(x,	1);
	create_insn	(x=0XE54BE1);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54BEC);
	op_hex		(x,	1);
	create_insn	(x=0XE54BF1);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54BF8);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54BFC);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54C05);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XE54C0D,	"nSize",	0);
	create_insn	(x=0XE54C0E);
	op_stkvar	(x,	1);
	set_cmt	(0XE54C12,	"lpPipeAttributes",	0);
	create_insn	(x=0XE54C13);
	op_stkvar	(x,	1);
	set_cmt	(0XE54C17,	"hWritePipe",	0);
	create_insn	(x=0XE54C18);
	op_stkvar	(x,	1);
	set_cmt	(0XE54C1C,	"hReadPipe",	0);
	set_cmt	(0XE54C27,	"nSize",	0);
	create_insn	(x=0XE54C28);
	op_stkvar	(x,	1);
	set_cmt	(0XE54C2C,	"lpPipeAttributes",	0);
	create_insn	(x=0XE54C2D);
	op_stkvar	(x,	1);
	set_cmt	(0XE54C31,	"hWritePipe",	0);
	create_insn	(x=0XE54C32);
	op_stkvar	(x,	1);
	set_cmt	(0XE54C36,	"hReadPipe",	0);
	create_insn	(x=0XE54C41);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XE54C47,	"dwFlags",	0);
	set_cmt	(0XE54C48,	"dwMask",	0);
	set_cmt	(0XE54C49,	"hObject",	0);
	create_insn	(x=0XE54C49);
	op_stkvar	(x,	0);
	set_cmt	(0XE54C57,	"dwFlags",	0);
	set_cmt	(0XE54C58,	"dwMask",	0);
	set_cmt	(0XE54C59,	"hObject",	0);
	create_insn	(x=0XE54C59);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54C67);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54C6B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54C72);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54C76);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54C7D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54C86);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54C8B);
	op_stkvar	(x,	1);
	set_cmt	(0XE54C8F,	"lpProcessInformation",	0);
	create_insn	(x=0XE54C90);
	op_stkvar	(x,	1);
	set_cmt	(0XE54C94,	"lpStartupInfo",	0);
	set_cmt	(0XE54C95,	"lpCurrentDirectory",	0);
	set_cmt	(0XE54C96,	"lpEnvironment",	0);
	set_cmt	(0XE54C97,	"dwCreationFlags",	0);
	set_cmt	(0XE54C98,	"bInheritHandles",	0);
	set_cmt	(0XE54C99,	"lpThreadAttributes",	0);
	set_cmt	(0XE54C9A,	"lpProcessAttributes",	0);
	set_cmt	(0XE54C9B,	"lpCommandLine",	0);
	set_cmt	(0XE54C9C,	"lpApplicationName",	0);
	create_insn	(x=0XE54C9C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54CA0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54CA8);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54CB3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE54CBD,	"lpOverlapped",	0);
	create_insn	(x=0XE54CBE);
	op_stkvar	(x,	1);
	set_cmt	(0XE54CC2,	"lpNumberOfBytesWritten",	0);
	create_insn	(x=0XE54CC3);
	op_stkvar	(x,	0);
	set_cmt	(0XE54CCC,	"nNumberOfBytesToWrite",	0);
	set_cmt	(0XE54CCD,	"lpBuffer",	0);
	create_insn	(x=0XE54CCD);
	op_stkvar	(x,	0);
	set_cmt	(0XE54CD0,	"hFile",	0);
	create_insn	(x=0XE54CD0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54CD4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE54CDA,	"dwMilliseconds",	0);
	set_cmt	(0XE54CDC,	"hHandle",	0);
	create_insn	(x=0XE54CDC);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54CE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE54CE6);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54CF3);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54CF7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE54CFD);
	op_stkvar	(x,	0);
	set_cmt	(0XE54D03,	"hObject",	0);
	create_insn	(x=0XE54D03);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54D09);
	op_stkvar	(x,	0);
	set_cmt	(0XE54D0F,	"hObject",	0);
	create_insn	(x=0XE54D0F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54D15);
	op_hex		(x,	1);
	create_insn	(x=0XE54D18);
	op_stkvar	(x,	0);
	set_cmt	(0XE54D1E,	"hObject",	0);
	create_insn	(x=0XE54D1E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54D24);
	op_stkvar	(x,	0);
	set_cmt	(0XE54D2A,	"hObject",	0);
	create_insn	(x=0XE54D2A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54D30);
	op_stkvar	(x,	0);
	set_cmt	(0XE54D36,	"hObject",	0);
	create_insn	(x=0XE54D36);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54D3C);
	op_stkvar	(x,	0);
	set_cmt	(0XE54D42,	"hObject",	0);
	create_insn	(x=0XE54D42);
	op_stkvar	(x,	0);
	set_cmt	(0XE54D48,	"lpMem",	0);
	create_insn	(x=0XE54D48);
	op_stkvar	(x,	0);
	set_cmt	(0XE54D52,	"lpMem",	0);
	create_insn	(x=0XE54D52);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54D5A);
	op_stkvar	(x,	1);
	create_insn	(0XE54D68);
	set_name	(0XE54D68,	"mw_prepare_pip_E54D68");
	create_insn	(x=0XE54D6D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54D72);
	op_stkvar	(x,	0);
	set_cmt	(0XE54D80,	"lpThreadId",	0);
	set_cmt	(0XE54D81,	"dwCreationFlags",	0);
	set_cmt	(0XE54D82,	"lpParameter",	0);
	set_cmt	(0XE54D83,	"lpStartAddress",	0);
	create_insn	(x=0XE54D83);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE54D88,	"dwStackSize",	0);
	set_cmt	(0XE54D89,	"lpThreadAttributes",	0);
	create_insn	(x=0XE54D8A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE54D96,	"dwMilliseconds",	0);
	set_cmt	(0XE54D97,	"hHandle",	0);
	create_insn	(x=0XE54D98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE54DA2);
	op_stkvar	(x,	1);
	set_cmt	(0XE54DA5,	"lpExitCode",	0);
	set_cmt	(0XE54DA6,	"hThread",	0);
	create_insn	(x=0XE54DA7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE54DAD);
	op_stkvar	(x,	0);
	set_cmt	(0XE54DB0,	"hObject",	0);
	create_insn	(x=0XE54DB1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE54DB8);
	op_stkvar	(x,	1);
	create_insn	(0XE54DBE);
	set_name	(0XE54DBE,	"mw_prepare_pip");
	create_insn	(x=0XE54DC7);
	op_stkvar	(x,	0);
	set_cmt	(0XE54DDE,	"lpMem",	0);
	create_insn	(0XE54DEE);
	create_insn	(x=0XE54DF1);
	op_hex		(x,	1);
	set_cmt	(0XE54DFA,	"th32ProcessID",	0);
	set_cmt	(0XE54DFB,	"dwFlags",	0);
	create_insn	(x=0XE54DFD);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54E00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE54E06);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54E18);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54E25);
	op_hex		(x,	1);
	create_insn	(x=0XE54E28);
	op_stkvar	(x,	1);
	set_cmt	(0XE54E2E,	"lppe",	0);
	set_cmt	(0XE54E2F,	"hSnapshot",	0);
	create_insn	(x=0XE54E2F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54E32);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54E38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE54E3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE54E49);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54E4C);
	op_stkvar	(x,	1);
	set_cmt	(0XE54E5D,	"dwProcessId",	0);
	create_insn	(x=0XE54E5D);
	op_stkvar	(x,	0);
	set_cmt	(0XE54E65,	"bInheritHandle",	0);
	set_cmt	(0XE54E66,	"dwDesiredAccess",	0);
	create_insn	(x=0XE54E68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE54E74,	"uExitCode",	0);
	set_cmt	(0XE54E75,	"hProcess",	0);
	create_insn	(x=0XE54E76);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE54E7C,	"hObject",	0);
	create_insn	(x=0XE54E81);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54E84);
	op_stkvar	(x,	1);
	set_cmt	(0XE54E8A,	"lppe",	0);
	set_cmt	(0XE54E8B,	"hSnapshot",	0);
	create_insn	(x=0XE54E8B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54E8E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE54E99,	"hObject",	0);
	create_insn	(x=0XE54E99);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54E9F);
	op_stkvar	(x,	1);
	create_insn	(0XE54EA5);
	create_insn	(x=0XE54EA8);
	op_hex		(x,	1);
	create_insn	(x=0XE54EBE);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54EC1);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54EC4);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54EC7);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54ECA);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54ED2);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54ED5);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE54EDC);
	op_stkvar	(x,	0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE54EE3);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54EE6);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54EF0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54EF7);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54EFF);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54F03);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54F0D);
	op_hex		(x,	1);
	create_insn	(x=0XE54F10);
	op_stkvar	(x,	0);
	set_cmt	(0XE54F17,	"lpName",	0);
	set_cmt	(0XE54F18,	"bInheritHandle",	0);
	set_cmt	(0XE54F19,	"dwDesiredAccess",	0);
	create_insn	(x=0XE54F1E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE54F2A,	"lpName",	0);
	set_cmt	(0XE54F2B,	"bInitialOwner",	0);
	set_cmt	(0XE54F2C,	"lpMutexAttributes",	0);
	create_insn	(x=0XE54F2D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE54F39,	"dwMilliseconds",	0);
	set_cmt	(0XE54F3A,	"hHandle",	0);
	create_insn	(x=0XE54F3C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE54F4D);
	set_cmt	(0XE54F55,	"hObject",	0);
	create_insn	(x=0XE54F56);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE54F60);
	set_cmt	(0XE54F62,	"lpMem",	0);
	create_insn	(x=0XE54F62);
	op_stkvar	(x,	0);
	set_cmt	(0XE54F6B,	"lpMem",	0);
	create_insn	(x=0XE54F6B);
	op_stkvar	(x,	0);
	create_insn	(0XE54F7A);
	set_cmt	(0XE54F80,	"LPVOID",	0);
	create_insn	(x=0XE54F80);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54F83);
	op_stkvar	(x,	1);
	set_cmt	(0XE54F92,	"hMutex",	0);
	create_insn	(x=0XE54F92);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54F95);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE54F9B,	"hObject",	0);
	create_insn	(x=0XE54F9B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54F9E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE54FA9);
	create_insn	(x=0XE54FAC);
	op_hex		(x,	1);
	create_insn	(x=0XE54FB5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE54FBD);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54FC0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54FC3);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54FCC);
	op_stkvar	(x,	0);
	create_insn	(0XE54FD8);
	create_insn	(x=0XE54FE2);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54FEC);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54FF2);
	op_stkvar	(x,	0);
	create_insn	(x=0XE54FF8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE54FFF);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5500B);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55016);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5501D);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55029);
	op_hex		(x,	1);
	create_insn	(x=0XE5502C);
	op_stkvar	(x,	1);
	set_cmt	(0XE5502F,	"timeout",	0);
	create_insn	(x=0XE55030);
	op_stkvar	(x,	1);
	set_cmt	(0XE55036,	"exceptfds",	0);
	set_cmt	(0XE55037,	"writefds",	0);
	create_insn	(x=0XE55039);
	op_stkvar	(x,	1);
	set_cmt	(0XE5503F,	"readfds",	0);
	set_cmt	(0XE55040,	"nfds",	0);
	create_insn	(x=0XE55042);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5504F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55054);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5505F);
	op_stkvar	(x,	1);
	create_insn	(0XE55067);
	create_insn	(x=0XE5506A);
	op_hex		(x,	1);
	create_insn	(x=0XE5506F);
	op_stkvar	(x,	1);
	set_cmt	(0XE55079,	"hostshort",	0);
	create_insn	(x=0XE5507E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55081);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55085);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5508B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55091);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55095);
	op_stkvar	(x,	1);
	create_insn	(x=0XE550AD);
	op_stkvar	(x,	0);
	create_insn	(x=0XE550B5);
	op_hex		(x,	1);
	create_insn	(x=0XE550B8);
	op_stkvar	(x,	0);
	create_insn	(x=0XE550C5);
	op_stkvar	(x,	1);
	set_cmt	(0XE550D2,	"hostlong",	0);
	create_insn	(x=0XE550D2);
	op_stkvar	(x,	0);
	create_insn	(x=0XE550D8);
	op_stkvar	(x,	0);
	create_insn	(x=0XE550DB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE550E1);
	op_stkvar	(x,	0);
	set_cmt	(0XE550E4,	"protocol",	0);
	set_cmt	(0XE550E6,	"type",	0);
	set_cmt	(0XE550E7,	"af",	0);
	create_insn	(x=0XE550E9);
	op_stkvar	(x,	0);
	create_insn	(x=0XE550EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE550F8);
	op_stkvar	(x,	1);
	set_cmt	(0XE550FB,	"argp",	0);
	set_cmt	(0XE550FC,	"cmd",	0);
	set_cmt	(0XE55101,	"s",	0);
	create_insn	(x=0XE55102);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE5510C,	"namelen",	0);
	create_insn	(x=0XE5510E);
	op_stkvar	(x,	1);
	set_cmt	(0XE55111,	"name",	0);
	set_cmt	(0XE55112,	"s",	0);
	create_insn	(x=0XE55113);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5511D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5512A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55131);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55134);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55141);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55149);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE5514E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55158);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55161);
	op_stkvar	(x,	1);
	set_cmt	(0XE55164,	"optlen",	0);
	create_insn	(x=0XE55165);
	op_stkvar	(x,	1);
	set_cmt	(0XE55168,	"optval",	0);
	set_cmt	(0XE55169,	"optname",	0);
	set_cmt	(0XE5516E,	"level",	0);
	create_insn	(x=0XE55173);
	op_stkvar	(x,	0);
	set_cmt	(0XE5517A,	"s",	0);
	create_insn	(x=0XE5517C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE55186);
	op_stkvar	(x,	0);
	set_cmt	(0XE5518B,	"flags",	0);
	set_cmt	(0XE5518D,	"len",	0);
	create_insn	(x=0XE5518F);
	op_stkvar	(x,	1);
	set_cmt	(0XE55192,	"buf",	0);
	set_cmt	(0XE55193,	"s",	0);
	create_insn	(x=0XE55195);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE551A2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE551A8);
	op_stkvar	(x,	0);
	create_insn	(x=0XE551AF);
	op_stkvar	(x,	0);
	create_insn	(x=0XE551B8);
	op_stkvar	(x,	1);
	set_cmt	(0XE551BB,	"namelen",	0);
	create_insn	(x=0XE551BC);
	op_stkvar	(x,	1);
	set_cmt	(0XE551BF,	"name",	0);
	create_insn	(x=0XE551C0);
	op_stkvar	(x,	0);
	set_cmt	(0XE551C7,	"s",	0);
	create_insn	(x=0XE551C9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE551CF);
	op_stkvar	(x,	1);
	create_insn	(x=0XE551D2);
	op_stkvar	(x,	1);
	create_insn	(x=0XE551D5);
	op_stkvar	(x,	1);
	create_insn	(x=0XE551D8);
	op_stkvar	(x,	0);
	create_insn	(x=0XE551DE);
	op_stkvar	(x,	1);
	set_cmt	(0XE551E1,	"s",	0);
	create_insn	(x=0XE551E3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE551F3);
	op_stkvar	(x,	0);
	create_insn	(x=0XE551F6);
	op_stkvar	(x,	0);
	create_insn	(x=0XE551F9);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55207);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5520D);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55210);
	op_stkvar	(x,	1);
	set_cmt	(0XE55219,	"lpMem",	0);
	create_insn	(x=0XE55219);
	op_stkvar	(x,	0);
	set_cmt	(0XE55222,	"lpMem",	0);
	create_insn	(x=0XE55222);
	op_stkvar	(x,	0);
	create_insn	(0XE55230);
	create_insn	(x=0XE55233);
	op_hex		(x,	1);
	create_insn	(x=0XE55236);
	op_hex		(x,	1);
	set_cmt	(0XE55241,	"dwBytes",	0);
	create_insn	(x=0XE55242);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55250);
	op_stkvar	(x,	0);
	set_cmt	(0XE55258,	"bOrder",	0);
	create_insn	(x=0XE55259);
	op_stkvar	(x,	1);
	set_cmt	(0XE5525D,	"pdwSize",	0);
	set_cmt	(0XE5525E,	"pIpAddrTable",	0);
	create_insn	(x=0XE5525F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE55269);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55271);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XE5527A,	"netlong",	0);
	set_cmt	(0XE55285,	"netlong",	0);
	set_cmt	(0XE55289,	"netlong",	0);
	set_cmt	(0XE55290,	"int",	0);
	create_insn	(x=0XE55290);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55295);
	op_stkvar	(x,	0);
	set_cmt	(0XE5529F,	"hostlong",	0);
	create_insn	(x=0XE552A5);
	op_stkvar	(x,	1);
	set_cmt	(0XE552A9,	"int",	0);
	create_insn	(x=0XE552A9);
	op_stkvar	(x,	0);
	set_cmt	(0XE552B4,	"hostlong",	0);
	create_insn	(x=0XE552BA);
	op_stkvar	(x,	1);
	create_insn	(x=0XE552BE);
	op_hex		(x,	1);
	create_insn	(x=0XE552C1);
	op_stkvar	(x,	0);
	create_insn	(x=0XE552C5);
	op_stkvar	(x,	1);
	set_cmt	(0XE552D0,	"lpMem",	0);
	create_insn	(0XE552DE);
	create_insn	(x=0XE552E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XE552EC,	"hObject",	0);
	set_cmt	(0XE552F6,	"hObject",	0);
	set_cmt	(0XE552FC,	"lpCriticalSection",	0);
	create_insn	(x=0XE552FD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE55303,	"lpMem",	0);
	create_insn	(0XE5530C);
	set_cmt	(0XE5530E,	"dwBytes",	0);
	set_cmt	(0XE5531E,	"dwSpinCount",	0);
	set_cmt	(0XE55326,	"lpCriticalSection",	0);
	create_insn	(x=0XE55327);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE55332);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XE55338,	"lpName",	0);
	set_cmt	(0XE55339,	"bInitialState",	0);
	set_cmt	(0XE5533B,	"bManualReset",	0);
	set_cmt	(0XE5533D,	"lpEventAttributes",	0);
	set_cmt	(0XE55349,	"lpName",	0);
	set_cmt	(0XE5534A,	"bInitialState",	0);
	set_cmt	(0XE5534C,	"bManualReset",	0);
	set_cmt	(0XE5534E,	"lpEventAttributes",	0);
	set_cmt	(0XE55368,	"lpMem",	0);
	create_insn	(0XE55368);
	create_insn	(0XE55376);
	create_insn	(x=0XE5537B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XE55386,	"lpCriticalSection",	0);
	create_insn	(0XE55386);
	create_insn	(x=0XE55387);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE5538D,	"dwMilliseconds",	0);
	set_cmt	(0XE5538F,	"hHandle",	0);
	create_insn	(x=0XE55392);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE5539C,	"lpCriticalSection",	0);
	create_insn	(x=0XE553A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XE553B0,	"hEvent",	0);
	create_insn	(x=0XE553B9);
	op_hex		(x,	1);
	create_insn	(0XE553BE);
	set_cmt	(0XE553C7,	"hEvent",	0);
	set_cmt	(0XE553D8,	"lpCriticalSection",	0);
	create_insn	(x=0XE553D9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE553E5);
	set_cmt	(0XE553ED,	"lpCriticalSection",	0);
	create_insn	(x=0XE553EE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE553F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XE55401,	"hEvent",	0);
	create_insn	(x=0XE5540A);
	op_hex		(x,	1);
	create_insn	(0XE5540F);
	set_cmt	(0XE55413,	"hEvent",	0);
	set_cmt	(0XE5541E,	"lpCriticalSection",	0);
	create_insn	(x=0XE5541F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE5542B);
	set_cmt	(0XE5542C,	"dwMilliseconds",	0);
	set_cmt	(0XE5542E,	"hHandle",	0);
	create_insn	(x=0XE55433);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5543D);
	op_hex		(x,	1);
	create_insn	(0XE55444);
	create_insn	(x=0XE55448);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5545F);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5546B);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55470);
	op_hex		(x,	1);
	create_insn	(x=0XE55474);
	op_hex		(x,	1);
	create_insn	(0XE55493);
	create_insn	(0XE55497);
	create_insn	(x=0XE554AD);
	op_stkvar	(x,	0);
	create_insn	(0XE554BF);
	create_insn	(x=0XE554C2);
	op_hex		(x,	1);
	create_insn	(x=0XE554C5);
	op_hex		(x,	1);
	create_insn	(x=0XE554C8);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	set_cmt	(0XE554D5,	"dwBytes",	0);
	set_cmt	(0XE554DC,	"dwBytes",	0);
	create_insn	(x=0XE554DD);
	op_stkvar	(x,	0);
	create_insn	(x=0XE554E6);
	op_stkvar	(x,	0);
	create_insn	(x=0XE554EA);
	op_stkvar	(x,	1);
	set_cmt	(0XE554F8,	"dwBytes",	0);
	create_insn	(x=0XE554FA);
	op_stkvar	(x,	0);
	set_cmt	(0XE55513,	"dwBytes",	0);
	create_insn	(x=0XE55530);
	op_hex		(x,	1);
	create_insn	(x=0XE55535);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55542);
	op_hex		(x,	1);
	set_cmt	(0XE55549,	"lpMem",	0);
	create_insn	(0XE55549);
	create_insn	(x=0XE5555A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55565);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55570);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5557E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55584);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5558D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55594);
	op_hex		(x,	1);
	set_cmt	(0XE5559A,	"lpCriticalSection",	0);
	create_insn	(x=0XE5559A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5559E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE555A4,	"dwMilliseconds",	0);
	set_cmt	(0XE555A6,	"hHandle",	0);
	create_insn	(x=0XE555A9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE555AF,	"lpCriticalSection",	0);
	create_insn	(x=0XE555AF);
	op_stkvar	(x,	0);
	create_insn	(x=0XE555B5);
	op_stkvar	(x,	0);
	create_insn	(x=0XE555BE);
	op_stkvar	(x,	0);
	set_cmt	(0XE555C7,	"lpCriticalSection",	0);
	create_insn	(x=0XE555C7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE555CB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE555D1);
	op_stkvar	(x,	0);
	create_insn	(x=0XE555D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE555F0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE555FB);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55604);
	op_hex		(x,	1);
	create_insn	(x=0XE5560F);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55632);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55636);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5563A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55645);
	op_hex		(x,	1);
	create_insn	(0XE5564D);
	create_insn	(x=0XE55657);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55662);
	op_stkvar	(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_1(void) {
        auto x;
#define id x

	set_cmt	(0XE55678,	"lpMem",	0);
	set_cmt	(0XE5567F,	"lpMem",	0);
	create_insn	(x=0XE55686);
	op_stkvar	(x,	0);
	set_cmt	(0XE5568D,	"lpMem",	0);
	create_insn	(x=0XE5568D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55697);
	op_stkvar	(x,	0);
	set_cmt	(0XE5569E,	"lpMem",	0);
	create_insn	(x=0XE5569E);
	op_stkvar	(x,	0);
	create_insn	(0XE556B3);
	create_insn	(x=0XE556B6);
	op_hex		(x,	1);
	create_insn	(x=0XE556B9);
	op_hex		(x,	1);
	set_cmt	(0XE556C4,	"dwBytes",	0);
	create_insn	(x=0XE556D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE556D3);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE556E3);
	op_stkvar	(x,	0);
	set_cmt	(0XE55712,	"char",	0);
	set_cmt	(0XE55713,	"int",	0);
	set_cmt	(0XE55715,	"lpCriticalSection",	0);
	create_insn	(x=0XE5571F);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5572A);
	op_hex		(x,	1);
	create_insn	(x=0XE5572D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55731);
	op_stkvar	(x,	0);
	set_cmt	(0XE55737,	"lpThreadId",	0);
	set_cmt	(0XE55738,	"dwCreationFlags",	0);
	create_insn	(x=0XE55739);
	op_stkvar	(x,	1);
	set_cmt	(0XE5573D,	"lpParameter",	0);
	set_cmt	(0XE5573E,	"lpStartAddress",	0);
	create_insn	(x=0XE5573E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE55743,	"dwStackSize",	0);
	set_cmt	(0XE55745,	"lpThreadAttributes",	0);
	create_insn	(x=0XE55746);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5574C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5575F);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55768);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55771);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55776);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5577E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55782);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5578B);
	op_hex		(x,	1);
	set_cmt	(0XE5579F,	"dwMilliseconds",	0);
	set_cmt	(0XE557A1,	"hHandle",	0);
	create_insn	(x=0XE557A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE557AF,	"dwMilliseconds",	0);
	set_cmt	(0XE557B1,	"bWaitAll",	0);
	create_insn	(x=0XE557B3);
	op_stkvar	(x,	1);
	set_cmt	(0XE557B7,	"lpHandles",	0);
	set_cmt	(0XE557B8,	"nCount",	0);
	create_insn	(x=0XE557B9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE557C1);
	op_stkvar	(x,	1);
	set_cmt	(0XE557CA,	"hObject",	0);
	create_insn	(x=0XE557CB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE557D7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE557E0);
	op_stkvar	(x,	1);
	set_cmt	(0XE557F2,	"char",	0);
	set_cmt	(0XE557F3,	"int",	0);
	set_cmt	(0XE557F5,	"lpCriticalSection",	0);
	create_insn	(x=0XE557FD);
	op_hex		(x,	1);
	set_cmt	(0XE55804,	"lpMem",	0);
	set_cmt	(0XE55825,	"lpMem",	0);
	set_cmt	(0XE5582E,	"lpMem",	0);
	create_insn	(0XE55840);
	set_cmt	(0XE55849,	"dwBytes",	0);
	create_insn	(x=0XE5584D);
	op_stkvar	(x,	0);
	create_insn	(0XE5589E);
	create_insn	(x=0XE558C1);
	op_stkvar	(x,	1);
	create_insn	(x=0XE558C7);
	op_stkvar	(x,	1);
	create_insn	(x=0XE558CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE558D2);
	op_stkvar	(x,	1);
	create_insn	(x=0XE558D8);
	op_stkvar	(x,	1);
	set_cmt	(0XE558E8,	"lpThreadId",	0);
	set_cmt	(0XE558E9,	"dwCreationFlags",	0);
	set_cmt	(0XE558EA,	"lpParameter",	0);
	set_cmt	(0XE558EB,	"lpStartAddress",	0);
	create_insn	(x=0XE558EB);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE558F0,	"dwStackSize",	0);
	set_cmt	(0XE558F1,	"lpThreadAttributes",	0);
	create_insn	(x=0XE558F2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE558F8);
	op_stkvar	(x,	0);
	set_cmt	(0XE5590E,	"lpMem",	0);
	set_cmt	(0XE55916,	"lpMem",	0);
	create_insn	(x=0XE5591C);
	op_hex		(x,	1);
	set_cmt	(0XE55921,	"lpMem",	0);
	create_insn	(0XE55921);
	create_insn	(x=0XE55928);
	op_stkvar	(x,	1);
	create_insn	(0XE55930);
	set_cmt	(0XE55931,	"dwBytes",	0);
	create_insn	(x=0XE5593F);
	op_hex		(x,	1);
	set_cmt	(0XE55942,	"dwSpinCount",	0);
	set_cmt	(0XE5594A,	"lpCriticalSection",	0);
	create_insn	(x=0XE5594B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE55955,	"lpMem",	0);
	create_insn	(0XE55962);
	set_cmt	(0XE55969,	"lpCriticalSection",	0);
	create_insn	(x=0XE5596A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE55972,	"lpCriticalSection",	0);
	create_insn	(x=0XE55973);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE5597E);
	set_cmt	(0XE55982,	"lpCriticalSection",	0);
	create_insn	(x=0XE55983);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE55989,	"lpCriticalSection",	0);
	create_insn	(x=0XE5598A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE55990,	"lpMem",	0);
	create_insn	(0XE55999);
	create_insn	(0XE559B5);
	create_insn	(0XE559DF);
	create_insn	(x=0XE559E3);
	op_hex		(x,	1);
	create_insn	(0XE559E8);
	create_insn	(0XE559F1);
	create_insn	(x=0XE559F5);
	op_stkvar	(x,	0);
	create_insn	(x=0XE559F9);
	op_stkvar	(x,	1);
	create_insn	(x=0XE559FC);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55A03);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55A07);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55A0C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55A15);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55A20);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55A2C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55A2F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55A3E);
	op_stkvar	(x,	0);
	create_insn	(0XE55A46);
	create_insn	(x=0XE55A4F);
	op_hex		(x,	1);
	create_insn	(x=0XE55A7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XE55A90);
	create_insn	(0XE55A9F);
	create_insn	(0XE55AB0);
	create_insn	(x=0XE55AB9);
	op_hex		(x,	1);
	create_insn	(x=0XE55AE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XE55AF3);
	create_insn	(0XE55B02);
	set_cmt	(0XE55B0E,	"nSize",	0);
	create_insn	(0XE55B0E);
	set_name	(0XE55B0E,	"mw_GetModuleFileNameW_E55B0E");
	set_cmt	(0XE55B13,	"lpFilename",	0);
	create_insn	(x=0XE55B13);
	op_stkvar	(x,	0);
	set_cmt	(0XE55B17,	"hModule",	0);
	create_insn	(x=0XE55B19);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE55B20);
	set_cmt	(0XE55B22,	"dwBytes",	0);
	set_cmt	(0XE55B35,	"lpFilename",	0);
	create_insn	(x=0XE55B62);
	op_stkvar	(x,	0);
	set_cmt	(0XE55B70,	"lpMem",	0);
	create_insn	(0XE55B7C);
	set_cmt	(0XE55B7E,	"dwBytes",	0);
	set_cmt	(0XE55B91,	"lpFilename",	0);
	create_insn	(x=0XE55B9C);
	op_stkvar	(x,	0);
	create_insn	(0XE55BCB);
	create_insn	(x=0XE55BDC);
	op_stkvar	(x,	0);
	set_cmt	(0XE55BEB,	"lpMem",	0);
	create_insn	(0XE55BF7);
	create_insn	(0XE55C93);
	create_insn	(0XE55C97);
	create_insn	(0XE55C9D);
	create_insn	(x=0XE55CB1);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55CB4);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55CE3);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55CEA);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55CED);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55D3C);
	op_stkvar	(x,	1);
	create_insn	(0XE55D43);
	create_insn	(x=0XE55D45);
	op_stkvar	(x,	0);
	create_insn	(0XE55D5A);
	create_insn	(0XE55D61);
	create_insn	(x=0XE55D64);
	op_hex		(x,	1);
	create_insn	(x=0XE55D6A);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE55D6E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55D7B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55D87);
	op_stkvar	(x,	1);
	set_cmt	(0XE55D96,	"dwBytes",	0);
	create_insn	(x=0XE55DA7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55DB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE55DBB);
	op_hex		(x,	1);
	create_insn	(x=0XE55DBE);
	op_stkvar	(x,	1);
	set_cmt	(0XE55DC4,	"lpFindFileData",	0);
	set_cmt	(0XE55DC5,	"lpFileName",	0);
	create_insn	(x=0XE55DC6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE55DCC);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55DD8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55DDB);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55DE5);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55DF3);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55DFD);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55E0B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55E16);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55E27);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55E2C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55E35);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE55E40);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55E4D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55E50);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55E58);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55E5B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55E5E);
	op_hex		(x,	1);
	create_insn	(x=0XE55E6B);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE55E78);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55E7B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55E7E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55E87);
	op_hex		(x,	1);
	create_insn	(x=0XE55E8A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55E8F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55E92);
	op_stkvar	(x,	1);
	set_cmt	(0XE55E98,	"lpFindFileData",	0);
	set_cmt	(0XE55E99,	"hFindFile",	0);
	create_insn	(x=0XE55E99);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55E9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE55EAA,	"hFindFile",	0);
	create_insn	(x=0XE55EAA);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55EAD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE55EB3,	"lpMem",	0);
	create_insn	(x=0XE55EBA);
	op_stkvar	(x,	1);
	create_insn	(0XE55EC2);
	create_insn	(x=0XE55EC5);
	op_hex		(x,	1);
	create_insn	(x=0XE55ECB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE55ED0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55ED6);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55EDB);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55EDE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE55EE3);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55EE6);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55EEB);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55F03);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55F06);
	op_hex		(x,	1);
	create_insn	(x=0XE55F08);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55F15);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55F1E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55F24);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55F27);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55F37);
	op_hex		(x,	1);
	create_insn	(x=0XE55F3A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55F41);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55F46);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55F49);
	op_hex		(x,	1);
	create_insn	(x=0XE55F4E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55F53);
	op_hex		(x,	1);
	create_insn	(x=0XE55F56);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55F5F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55F62);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55F6D);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55F70);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55F73);
	op_hex		(x,	1);
	create_insn	(x=0XE55F75);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55F7E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55F87);
	op_hex		(x,	1);
	create_insn	(x=0XE55F8C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55F8F);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55F92);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55F97);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55FAB);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55FB0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55FBB);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55FC4);
	op_stkvar	(x,	0);
	create_insn	(x=0XE55FD5);
	op_stkvar	(x,	1);
	create_insn	(x=0XE55FD8);
	op_hex		(x,	1);
	create_insn	(x=0XE55FDB);
	op_stkvar	(x,	1);
	create_insn	(0XE55FE0);
	create_insn	(0XE55FE7);
	create_insn	(x=0XE55FEC);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56003);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56008);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5600F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56019);
	op_hex		(x,	1);
	create_insn	(x=0XE56024);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5602A);
	op_stkvar	(x,	0);
	set_cmt	(0XE56030,	"dwBytes",	0);
	set_cmt	(0XE56031,	"lpMem",	0);
	create_insn	(x=0XE5603D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56044);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5604C);
	op_hex		(x,	1);
	set_cmt	(0XE56055,	"lpMem",	0);
	create_insn	(0XE56055);
	create_insn	(0XE56065);
	create_insn	(x=0XE56068);
	op_hex		(x,	1);
	create_insn	(x=0XE5606C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56071);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56076);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5607C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56081);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56084);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5608A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE560A1);
	op_stkvar	(x,	1);
	create_insn	(x=0XE560AD);
	op_stkvar	(x,	0);
	create_insn	(x=0XE560B0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE560B8);
	op_stkvar	(x,	0);
	create_insn	(x=0XE560BB);
	op_stkvar	(x,	0);
	create_insn	(x=0XE560BE);
	op_stkvar	(x,	1);
	create_insn	(x=0XE560CD);
	op_hex		(x,	1);
	create_insn	(x=0XE560D0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE560D7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE560DD);
	op_stkvar	(x,	0);
	create_insn	(x=0XE560E9);
	op_hex		(x,	1);
	create_insn	(x=0XE560F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE560F3);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56101);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56109);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5610C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56114);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56117);
	op_hex		(x,	1);
	create_insn	(x=0XE5611C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56121);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56139);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56148);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5614C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56159);
	op_hex		(x,	1);
	create_insn	(x=0XE5615C);
	op_stkvar	(x,	1);
	create_insn	(0XE56165);
	create_insn	(0XE5616C);
	create_insn	(x=0XE56170);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56175);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5617A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56182);
	op_hex		(x,	1);
	create_insn	(0XE56196);
	create_insn	(x=0XE561A2);
	op_stkvar	(x,	0);
	create_insn	(x=0XE561AE);
	op_stkvar	(x,	0);
	create_insn	(x=0XE561B6);
	op_hex		(x,	1);
	create_insn	(0XE561BE);
	create_insn	(x=0XE561C2);
	op_stkvar	(x,	1);
	create_insn	(x=0XE561C7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE561CC);
	op_stkvar	(x,	0);
	create_insn	(x=0XE561D4);
	op_hex		(x,	1);
	create_insn	(0XE561E8);
	create_insn	(x=0XE561F4);
	op_stkvar	(x,	0);
	create_insn	(x=0XE561FD);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56205);
	op_hex		(x,	1);
	create_insn	(0XE5620D);
	create_insn	(x=0XE56211);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56227);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5622E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56236);
	op_hex		(x,	1);
	create_insn	(0XE5623B);
	set_cmt	(0XE56240,	"dwBytes",	0);
	set_cmt	(0XE56241,	"lpMem",	0);
	create_insn	(x=0XE5624D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56254);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5625C);
	op_hex		(x,	1);
	set_cmt	(0XE56265,	"lpMem",	0);
	create_insn	(0XE56265);
	create_insn	(0XE56274);
	set_cmt	(0XE5627A,	"lpMem",	0);
	set_cmt	(0XE56288,	"lpMem",	0);
	set_cmt	(0XE5629C,	"lpMem",	0);
	create_insn	(x=0XE562A2);
	op_hex		(x,	1);
	create_insn	(0XE562A6);
	set_cmt	(0XE562A8,	"dwBytes",	0);
	set_cmt	(0XE562BD,	"dwBytes",	0);
	set_cmt	(0XE562CD,	"dwBytes",	0);
	create_insn	(x=0XE562D3);
	op_hex		(x,	1);
	create_insn	(x=0XE562D7);
	op_hex		(x,	1);
	create_insn	(x=0XE562EA);
	op_hex		(x,	1);
	create_insn	(x=0XE5632B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56335);
	op_hex		(x,	1);
	create_insn	(0XE5633A);
	create_insn	(0XE56347);
	create_insn	(x=0XE5634A);
	op_hex		(x,	1);
	create_insn	(x=0XE5634D);
	op_hex		(x,	1);
	create_insn	(x=0XE56353);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE56359);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5637A);
	op_stkvar	(x,	1);
	create_insn	(0XE56388);
	create_insn	(x=0XE56391);
	op_hex		(x,	1);
	set_cmt	(0XE56399,	"dwBytes",	0);
	create_insn	(x=0XE5639A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE563A4);
	op_stkvar	(x,	0);
	create_insn	(x=0XE563B0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE563B8);
	op_stkvar	(x,	0);
	create_insn	(x=0XE563C1);
	op_hex		(x,	1);
	create_insn	(x=0XE563C6);
	op_stkvar	(x,	1);
	create_insn	(x=0XE563D2);
	op_hex		(x,	1);
	create_insn	(x=0XE563D5);
	op_stkvar	(x,	1);
	create_insn	(x=0XE563DE);
	op_stkvar	(x,	1);
	create_insn	(x=0XE563E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE563EC);
	op_hex		(x,	1);
	create_insn	(x=0XE563EF);
	op_stkvar	(x,	0);
	create_insn	(x=0XE563F3);
	op_stkvar	(x,	1);
	create_insn	(x=0XE563F7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56401);
	op_hex		(x,	1);
	create_insn	(x=0XE56409);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56415);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56418);
	op_hex		(x,	1);
	create_insn	(x=0XE56427);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56432);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56436);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5643C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56445);
	op_hex		(x,	1);
	create_insn	(x=0XE5644E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56452);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56458);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56461);
	op_hex		(x,	1);
	create_insn	(0XE5646A);
	create_insn	(x=0XE5646D);
	op_hex		(x,	1);
	create_insn	(x=0XE56484);
	op_hex		(x,	1);
	create_insn	(x=0XE5648E);
	op_hex		(x,	1);
	create_insn	(x=0XE56496);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5649D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE564B3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE564BA);
	op_hex		(x,	1);
	create_insn	(x=0XE564C8);
	op_hex		(x,	1);
	create_insn	(x=0XE564D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE564DA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE564E1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE564E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE564EF);
	op_hex		(x,	1);
	create_insn	(x=0XE564F2);
	op_stkvar	(x,	1);
	create_insn	(x=0XE564FE);
	op_hex		(x,	1);
	create_insn	(x=0XE5650C);
	op_hex		(x,	1);
	create_insn	(x=0XE5651B);
	op_hex		(x,	1);
	create_insn	(x=0XE56526);
	op_hex		(x,	1);
	create_insn	(x=0XE5652D);
	op_hex		(x,	1);
	create_insn	(x=0XE56534);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5653A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5654B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56554);
	op_hex		(x,	1);
	create_insn	(x=0XE5655D);
	op_hex		(x,	1);
	create_insn	(x=0XE5656B);
	op_hex		(x,	1);
	create_insn	(x=0XE56570);
	op_hex		(x,	1);
	create_insn	(x=0XE56575);
	op_hex		(x,	1);
	create_insn	(x=0XE5657C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE56583);
	op_hex		(x,	1);
	create_insn	(x=0XE56586);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5658D);
	op_hex		(x,	1);
	create_insn	(x=0XE56590);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE56597);
	op_hex		(x,	1);
	create_insn	(x=0XE5659A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE565A1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE565AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE565B3);
	op_stkvar	(x,	1);
	create_insn	(x=0XE565BE);
	op_stkvar	(x,	1);
	create_insn	(x=0XE565C5);
	op_stkvar	(x,	0);
	create_insn	(x=0XE565CA);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE565CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE565D9);
	op_stkvar	(x,	1);
	create_insn	(x=0XE565E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE565EB);
	op_stkvar	(x,	1);
	create_insn	(x=0XE565F2);
	op_stkvar	(x,	0);
	create_insn	(x=0XE565F7);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE565FB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56606);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5660D);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56618);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5661F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56624);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE56628);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56633);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5663A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56645);
	op_stkvar	(x,	1);
	create_insn	(0XE5664E);
	create_insn	(x=0XE56650);
	op_hex		(x,	1);
	create_insn	(x=0XE56653);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56656);
	op_hex		(x,	1);
	create_insn	(x=0XE56659);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5665C);
	op_hex		(x,	1);
	create_insn	(x=0XE5665F);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56663);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5666A);
	op_hex		(x,	1);
	create_insn	(x=0XE5666F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE56676);
	op_hex		(x,	1);
	create_insn	(x=0XE56679);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE56680);
	op_hex		(x,	1);
	create_insn	(x=0XE56683);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE5669B);
	create_insn	(x=0XE566A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE566B1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE566BB);
	op_stkvar	(x,	1);
	create_insn	(x=0XE566BE);
	op_stkvar	(x,	1);
	create_insn	(x=0XE566D7);
	op_hex		(x,	1);
	create_insn	(x=0XE566E0);
	op_hex		(x,	1);
	create_insn	(x=0XE566E9);
	op_hex		(x,	1);
	create_insn	(x=0XE56715);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56724);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5672D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56734);
	op_hex		(x,	1);
	create_insn	(x=0XE5673D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56744);
	op_hex		(x,	1);
	create_insn	(x=0XE5674D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56754);
	op_hex		(x,	1);
	create_insn	(x=0XE56759);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5675C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56767);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56787);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56792);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56799);
	op_hex		(x,	1);
	create_insn	(x=0XE567A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE567A9);
	op_hex		(x,	1);
	create_insn	(x=0XE567B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE567B7);
	op_hex		(x,	1);
	create_insn	(x=0XE567DB);
	op_stkvar	(x,	0);
	create_insn	(0XE567EA);
	create_insn	(x=0XE567F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56801);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56808);
	op_hex		(x,	1);
	create_insn	(x=0XE56811);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56818);
	op_hex		(x,	1);
	create_insn	(x=0XE56821);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56828);
	op_hex		(x,	1);
	create_insn	(x=0XE5682D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XE5686B);
	create_insn	(x=0XE56879);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56882);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56889);
	op_hex		(x,	1);
	create_insn	(x=0XE56892);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56899);
	op_hex		(x,	1);
	create_insn	(x=0XE568A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE568A9);
	op_hex		(x,	1);
	create_insn	(x=0XE568AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE568DA);
	op_stkvar	(x,	1);
	create_insn	(x=0XE568DD);
	op_stkvar	(x,	1);
	create_insn	(0XE568EE);
	create_insn	(x=0XE568F1);
	op_hex		(x,	1);
	create_insn	(x=0XE568FF);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5690D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56910);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56913);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56916);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56928);
	op_hex		(x,	1);
	create_insn	(x=0XE5692B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56936);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56941);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5694B);
	op_hex		(x,	1);
	create_insn	(x=0XE5694E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56973);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56980);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56987);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56992);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56999);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE569A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE569AB);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE569B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE569BB);
	op_hex		(x,	1);
	create_insn	(x=0XE569C1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE569C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE569D5);
	op_stkvar	(x,	0);
	create_insn	(x=0XE569FC);
	op_stkvar	(x,	1);
	create_insn	(0XE56A04);
	create_insn	(x=0XE56A07);
	op_hex		(x,	1);
	create_insn	(x=0XE56A0E);
	op_hex		(x,	1);
	create_insn	(x=0XE56A11);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56A23);
	op_hex		(x,	1);
	create_insn	(x=0XE56A2B);
	op_hex		(x,	1);
	create_insn	(x=0XE56A36);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56A3D);
	op_hex		(x,	1);
	create_insn	(x=0XE56A4A);
	op_hex		(x,	1);
	create_insn	(x=0XE56A53);
	op_hex		(x,	1);
	create_insn	(x=0XE56A5F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56A66);
	op_hex		(x,	1);
	create_insn	(x=0XE56A6F);
	op_hex		(x,	1);
	create_insn	(x=0XE56A78);
	op_hex		(x,	1);
	create_insn	(x=0XE56A84);
	op_hex		(x,	1);
	create_insn	(x=0XE56A91);
	op_hex		(x,	1);
	create_insn	(x=0XE56A96);
	op_hex		(x,	1);
	create_insn	(x=0XE56A9E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56AA1);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56AA6);
	op_hex		(x,	1);
	create_insn	(x=0XE56AAC);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56ABB);
	op_hex		(x,	1);
	create_insn	(x=0XE56AC0);
	op_hex		(x,	1);
	create_insn	(x=0XE56AC3);
	op_hex		(x,	1);
	create_insn	(x=0XE56ACA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56AD1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56AD8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56ADB);
	op_hex		(x,	1);
	create_insn	(x=0XE56ADE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56AE5);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56AEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56AF1);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56AF4);
	op_hex		(x,	1);
	create_insn	(x=0XE56AF9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56B00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56B07);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56B0A);
	op_hex		(x,	1);
	create_insn	(x=0XE56B0D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56B14);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56B19);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56B20);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56B26);
	op_hex		(x,	1);
	create_insn	(x=0XE56B29);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56B2F);
	op_hex		(x,	1);
	create_insn	(x=0XE56B34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56B3D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56B44);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56B47);
	op_hex		(x,	1);
	create_insn	(x=0XE56B4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56B51);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56B56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56B5D);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56B63);
	op_hex		(x,	1);
	create_insn	(x=0XE56B66);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56B69);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56B6C);
	op_hex		(x,	1);
	create_insn	(x=0XE56B71);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56B7A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56B81);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56B84);
	op_hex		(x,	1);
	create_insn	(x=0XE56B87);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56B8E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56B95);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56B9C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56BA2);
	op_hex		(x,	1);
	create_insn	(x=0XE56BA5);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56BA8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56BAB);
	op_hex		(x,	1);
	create_insn	(x=0XE56BB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56BB9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56BC0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56BC3);
	op_hex		(x,	1);
	create_insn	(x=0XE56BC6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56BD1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56BD8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56BDE);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56BE1);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56BE4);
	op_hex		(x,	1);
	create_insn	(x=0XE56BE9);
	op_hex		(x,	1);
	create_insn	(x=0XE56BEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56BF5);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56BFE);
	op_hex		(x,	1);
	create_insn	(x=0XE56C01);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56C08);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56C0D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56C19);
	op_hex		(x,	1);
	create_insn	(x=0XE56C1C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56C1F);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56C22);
	op_hex		(x,	1);
	create_insn	(x=0XE56C27);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56C30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56C37);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56C3A);
	op_hex		(x,	1);
	create_insn	(x=0XE56C3D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56C44);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56C49);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56C50);
	op_hex		(x,	1);
	create_insn	(x=0XE56C5A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56C5D);
	op_hex		(x,	1);
	create_insn	(x=0XE56C62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56C69);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56C70);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56C73);
	op_hex		(x,	1);
	create_insn	(x=0XE56C76);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56C7D);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56C82);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56C8F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56C92);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56C96);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56C99);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56C9C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56CA7);
	op_hex		(x,	1);
	create_insn	(x=0XE56CAC);
	op_hex		(x,	1);
	create_insn	(x=0XE56CB1);
	op_hex		(x,	1);
	create_insn	(x=0XE56CB4);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56CB7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56CBE);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56CC1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56CCB);
	op_hex		(x,	1);
	create_insn	(x=0XE56CCE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56CD5);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56CDA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56CE1);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56CE4);
	op_hex		(x,	1);
	create_insn	(x=0XE56CE9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56CF2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56CF9);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56CFC);
	op_hex		(x,	1);
	create_insn	(x=0XE56CFF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56D06);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56D0B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56D12);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56D18);
	op_hex		(x,	1);
	create_insn	(x=0XE56D1B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56D1E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56D21);
	op_hex		(x,	1);
	create_insn	(x=0XE56D26);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56D2F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56D36);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56D39);
	op_hex		(x,	1);
	create_insn	(x=0XE56D3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56D43);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56D48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56D4F);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56D55);
	op_hex		(x,	1);
	create_insn	(x=0XE56D58);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56D5B);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56D5E);
	op_hex		(x,	1);
	create_insn	(x=0XE56D63);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56D6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56D73);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56D76);
	op_hex		(x,	1);
	create_insn	(x=0XE56D79);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56D80);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56D85);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56D8C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56D94);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56D97);
	op_hex		(x,	1);
	create_insn	(x=0XE56D9A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56DA1);
	op_hex		(x,	1);
	create_insn	(x=0XE56DA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56DAD);
	op_hex		(x,	1);
	create_insn	(x=0XE56DB2);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56DB5);
	op_hex		(x,	1);
	create_insn	(x=0XE56DBA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56DC1);
	op_hex		(x,	1);
	create_insn	(x=0XE56DCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56DD1);
	op_hex		(x,	1);
	create_insn	(x=0XE56DD9);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56DDC);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56DDF);
	op_hex		(x,	1);
	create_insn	(x=0XE56DE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56DED);
	op_hex		(x,	1);
	create_insn	(x=0XE56DF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56DF7);
	op_hex		(x,	1);
	create_insn	(x=0XE56DFC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56DFF);
	op_hex		(x,	1);
	create_insn	(x=0XE56E04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56E0B);
	op_hex		(x,	1);
	create_insn	(x=0XE56E10);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56E15);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56E1C);
	op_hex		(x,	1);
	create_insn	(x=0XE56E24);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56E27);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56E2A);
	op_hex		(x,	1);
	create_insn	(x=0XE56E2D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56E36);
	op_hex		(x,	1);
	create_insn	(x=0XE56E3B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56E42);
	op_hex		(x,	1);
	create_insn	(x=0XE56E47);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56E4A);
	op_hex		(x,	1);
	create_insn	(x=0XE56E4F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56E56);
	op_hex		(x,	1);
	create_insn	(x=0XE56E5B);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56E60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56E67);
	op_hex		(x,	1);
	create_insn	(x=0XE56E6F);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56E72);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56E75);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56E78);
	op_hex		(x,	1);
	create_insn	(x=0XE56E7D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56E84);
	op_hex		(x,	1);
	create_insn	(x=0XE56E87);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56E8E);
	op_hex		(x,	1);
	create_insn	(x=0XE56E93);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56E9A);
	op_hex		(x,	1);
	create_insn	(x=0XE56E9F);
	op_hex		(x,	1);
	create_insn	(x=0XE56EA4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56EA9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56EB0);
	op_hex		(x,	1);
	create_insn	(x=0XE56EB8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56EBD);
	op_hex		(x,	1);
	create_insn	(x=0XE56EC7);
	op_hex		(x,	1);
	create_insn	(x=0XE56ECA);
	op_hex		(x,	1);
	create_insn	(x=0XE56ED0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56ED8);
	op_hex		(x,	1);
	create_insn	(x=0XE56EE3);
	op_hex		(x,	1);
	create_insn	(x=0XE56EE9);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56EEC);
	op_hex		(x,	1);
	create_insn	(x=0XE56EF4);
	op_hex		(x,	1);
	create_insn	(x=0XE56EFF);
	op_hex		(x,	1);
	create_insn	(x=0XE56F07);
	op_hex		(x,	1);
	create_insn	(x=0XE56F0F);
	op_hex		(x,	1);
	create_insn	(x=0XE56F12);
	op_hex		(x,	1);
	create_insn	(x=0XE56F18);
	op_hex		(x,	1);
	create_insn	(0XE56F2A);
	create_insn	(x=0XE56F2D);
	op_hex		(x,	1);
	create_insn	(x=0XE56F39);
	op_hex		(x,	1);
	create_insn	(x=0XE56F42);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56F48);
	op_hex		(x,	1);
	create_insn	(x=0XE56F55);
	op_hex		(x,	1);
	create_insn	(x=0XE56F5E);
	op_hex		(x,	1);
	create_insn	(x=0XE56F67);
	op_hex		(x,	1);
	create_insn	(x=0XE56F70);
	op_hex		(x,	1);
	create_insn	(x=0XE56F7C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56F83);
	op_hex		(x,	1);
	create_insn	(x=0XE56F8C);
	op_hex		(x,	1);
	create_insn	(x=0XE56F95);
	op_hex		(x,	1);
	create_insn	(x=0XE56FA3);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56FAA);
	op_hex		(x,	1);
	create_insn	(x=0XE56FB7);
	op_hex		(x,	1);
	create_insn	(x=0XE56FBC);
	op_hex		(x,	1);
	create_insn	(x=0XE56FC1);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56FC9);
	op_hex		(x,	1);
	create_insn	(x=0XE56FCF);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56FD2);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56FDC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE56FDF);
	op_stkvar	(x,	0);
	create_insn	(x=0XE56FE8);
	op_hex		(x,	1);
	create_insn	(x=0XE56FED);
	op_hex		(x,	1);
	create_insn	(x=0XE56FF2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE56FF9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE57000);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57003);
	op_hex		(x,	1);
	create_insn	(x=0XE57006);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE57011);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5701C);
	op_hex		(x,	1);
	create_insn	(x=0XE57021);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57024);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57027);
	op_hex		(x,	1);
	create_insn	(x=0XE5702C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE57033);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5703A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5703D);
	op_hex		(x,	1);
	create_insn	(x=0XE57040);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE57047);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5704C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE57053);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57056);
	op_hex		(x,	1);
	create_insn	(x=0XE5705B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE57062);
	op_hex		(x,	1);
	create_insn	(x=0XE57067);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5706E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57071);
	op_hex		(x,	1);
	create_insn	(x=0XE57074);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5707B);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57080);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE57087);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5708D);
	op_hex		(x,	1);
	create_insn	(x=0XE57090);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57093);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57096);
	op_hex		(x,	1);
	create_insn	(x=0XE5709B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE570A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE570AB);
	op_stkvar	(x,	1);
	create_insn	(x=0XE570B1);
	op_hex		(x,	1);
	create_insn	(x=0XE570B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE570BB);
	op_stkvar	(x,	1);
	create_insn	(x=0XE570C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE570C7);
	op_stkvar	(x,	1);
	create_insn	(x=0XE570CD);
	op_hex		(x,	1);
	create_insn	(x=0XE570D0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE570D3);
	op_hex		(x,	1);
	create_insn	(x=0XE570D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE570E1);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE570EA);
	op_hex		(x,	1);
	create_insn	(x=0XE570ED);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE570F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE570F9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE57100);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57106);
	op_hex		(x,	1);
	create_insn	(x=0XE57109);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5710C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5710F);
	op_hex		(x,	1);
	create_insn	(x=0XE57116);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5711D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE57124);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57127);
	op_hex		(x,	1);
	create_insn	(x=0XE5712A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE57135);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5713C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57142);
	op_hex		(x,	1);
	create_insn	(x=0XE57145);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5714A);
	op_hex		(x,	1);
	create_insn	(x=0XE5714F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE57158);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5715F);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57162);
	op_hex		(x,	1);
	create_insn	(x=0XE57165);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5716C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57171);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE57178);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5717E);
	op_hex		(x,	1);
	create_insn	(x=0XE57181);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57184);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57187);
	op_hex		(x,	1);
	create_insn	(x=0XE5718C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE57195);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5719C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5719F);
	op_hex		(x,	1);
	create_insn	(x=0XE571A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE571A9);
	op_stkvar	(x,	1);
	create_insn	(x=0XE571AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE571BB);
	op_stkvar	(x,	0);
	create_insn	(x=0XE571BE);
	op_stkvar	(x,	0);
	create_insn	(x=0XE571C9);
	op_hex		(x,	1);
	create_insn	(x=0XE571CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE571D5);
	op_hex		(x,	1);
	create_insn	(x=0XE571DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE571E1);
	op_stkvar	(x,	1);
	create_insn	(x=0XE571E4);
	op_hex		(x,	1);
	create_insn	(x=0XE571E7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE571F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE571FD);
	op_hex		(x,	1);
	create_insn	(x=0XE57200);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57203);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57206);
	op_hex		(x,	1);
	create_insn	(x=0XE5720D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57210);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE57217);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5721A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE57221);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57224);
	op_hex		(x,	1);
	create_insn	(x=0XE57227);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5722E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57233);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5723A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5723D);
	op_hex		(x,	1);
	create_insn	(x=0XE57240);
	op_hex		(x,	1);
	create_insn	(x=0XE57245);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5724E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE57255);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57258);
	op_hex		(x,	1);
	create_insn	(x=0XE5725B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE57262);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57267);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5726E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57277);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5727A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5727D);
	op_hex		(x,	1);
	create_insn	(x=0XE57280);
	op_hex		(x,	1);
	create_insn	(x=0XE57285);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5728E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE57295);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57298);
	op_hex		(x,	1);
	create_insn	(x=0XE5729B);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE572A2);
	op_stkvar	(x,	1);
	create_insn	(x=0XE572A7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE572B3);
	op_hex		(x,	1);
	create_insn	(x=0XE572B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE572BD);
	op_stkvar	(x,	0);
	create_insn	(x=0XE572C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE572C3);
	op_hex		(x,	1);
	create_insn	(x=0XE572C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE572CF);
	op_hex		(x,	1);
	create_insn	(x=0XE572D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE572D7);
	op_hex		(x,	1);
	create_insn	(x=0XE572DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE572E3);
	op_hex		(x,	1);
	create_insn	(x=0XE572E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE572EB);
	op_hex		(x,	1);
	create_insn	(x=0XE572F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE572FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE572FF);
	op_hex		(x,	1);
	create_insn	(x=0XE57302);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE57309);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5730C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5730F);
	op_hex		(x,	1);
	create_insn	(x=0XE57312);
	op_hex		(x,	1);
	create_insn	(x=0XE57317);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE57320);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57323);
	op_hex		(x,	1);
	create_insn	(x=0XE57328);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5732F);
	op_hex		(x,	1);
	create_insn	(x=0XE57338);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5733F);
	op_hex		(x,	1);
	create_insn	(x=0XE57347);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5734A);
	op_hex		(x,	1);
	create_insn	(x=0XE5734D);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE57354);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57357);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5735A);
	op_hex		(x,	1);
	create_insn	(x=0XE5735D);
	op_hex		(x,	1);
	create_insn	(x=0XE57362);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5736D);
	op_hex		(x,	1);
	create_insn	(x=0XE57372);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE57379);
	op_hex		(x,	1);
	create_insn	(x=0XE5737E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57383);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5738A);
	op_hex		(x,	1);
	create_insn	(x=0XE5738F);
	op_hex		(x,	1);
	create_insn	(x=0XE57394);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE5739B);
	op_stkvar	(x,	1);
	create_insn	(x=0XE573A1);
	op_hex		(x,	1);
	create_insn	(x=0XE573A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE573AB);
	op_hex		(x,	1);
	create_insn	(x=0XE573B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE573B3);
	op_hex		(x,	1);
	create_insn	(x=0XE573B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE573BF);
	op_hex		(x,	1);
	create_insn	(x=0XE573C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE573C9);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE573D0);
	op_hex		(x,	1);
	create_insn	(x=0XE573D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE573DD);
	op_hex		(x,	1);
	create_insn	(x=0XE573E7);
	op_hex		(x,	1);
	create_insn	(x=0XE573EA);
	op_hex		(x,	1);
	create_insn	(x=0XE573F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE573F8);
	op_hex		(x,	1);
	create_insn	(x=0XE57403);
	op_hex		(x,	1);
	create_insn	(x=0XE5740B);
	op_hex		(x,	1);
	create_insn	(x=0XE57413);
	op_hex		(x,	1);
	create_insn	(x=0XE5741B);
	op_hex		(x,	1);
	create_insn	(x=0XE57426);
	op_hex		(x,	1);
	create_insn	(x=0XE57429);
	op_hex		(x,	1);
	create_insn	(x=0XE5742C);
	op_hex		(x,	1);
	create_insn	(x=0XE57432);
	op_hex		(x,	1);
	create_insn	(0XE57447);
	create_insn	(x=0XE5744A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5744D);
	op_hex		(x,	1);
	create_insn	(x=0XE57453);
	op_hex		(x,	1);
	create_insn	(x=0XE5745D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5746E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57471);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57477);
	op_hex		(x,	1);
	create_insn	(x=0XE5747A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5747D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57481);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57484);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57489);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57490);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5749E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE574AA);
	op_stkvar	(x,	1);
	create_insn	(x=0XE574AD);
	op_stkvar	(x,	0);
	create_insn	(x=0XE574B1);
	op_stkvar	(x,	0);
	create_insn	(x=0XE574B9);
	op_stkvar	(x,	1);
	create_insn	(x=0XE574C0);
	op_stkvar	(x,	0);
	create_insn	(0XE574C7);
	create_insn	(x=0XE574CD);
	op_stkvar	(x,	1);
	create_insn	(x=0XE574D1);
	op_hex		(x,	1);
	create_insn	(x=0XE574D5);
	op_stkvar	(x,	0);
	create_insn	(x=0XE574D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE574DB);
	op_stkvar	(x,	1);
	create_insn	(x=0XE574F1);
	op_stkvar	(x,	0);
	create_insn	(x=0XE574F5);
	op_stkvar	(x,	0);
	create_insn	(0XE57503);
	create_insn	(x=0XE57508);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5750B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5750F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5751C);
	op_stkvar	(x,	0);
	create_insn	(0XE5752A);
	create_insn	(x=0XE5752D);
	op_stkvar	(x,	1);
	set_cmt	(0XE57536,	"lpMem",	0);
	create_insn	(x=0XE5757A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5757F);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57584);
	op_stkvar	(x,	1);
	create_insn	(x=0XE575B4);
	op_stkvar	(x,	0);
	create_insn	(x=0XE575BC);
	op_stkvar	(x,	0);
	create_insn	(x=0XE575D0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE575D3);
	op_stkvar	(x,	1);
	create_insn	(x=0XE575DD);
	op_hex		(x,	1);
	create_insn	(0XE575EF);
	create_insn	(x=0XE575F0);
	op_stkvar	(x,	1);
	create_insn	(0XE5766E);
	set_cmt	(0XE57673,	"lpMem",	0);
	set_cmt	(0XE57679,	"lpMem",	0);
	create_insn	(0XE57686);
	create_insn	(x=0XE57689);
	op_hex		(x,	1);
	create_insn	(x=0XE57690);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5769A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE576B7);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE576BF);
	op_stkvar	(x,	1);
	create_insn	(x=0XE576C9);
	op_stkvar	(x,	0);
	create_insn	(x=0XE576D3);
	op_stkvar	(x,	1);
	create_insn	(x=0XE576DC);
	op_stkvar	(x,	0);
	create_insn	(x=0XE576DF);
	op_stkvar	(x,	0);
	create_insn	(x=0XE576F1);
	op_hex		(x,	1);
	create_insn	(x=0XE576F6);
	op_stkvar	(x,	1);
	create_insn	(x=0XE576FB);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5770D);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57713);
	op_hex		(x,	1);
	create_insn	(x=0XE57732);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57743);
	op_hex		(x,	1);
	create_insn	(x=0XE5774B);
	op_stkvar	(x,	1);
	create_insn	(0XE57753);
	create_insn	(x=0XE57756);
	op_hex		(x,	1);
	create_insn	(x=0XE5775D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57760);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57763);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57766);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5776D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57774);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5777B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57782);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57789);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57790);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57797);
	op_stkvar	(x,	0);
	create_insn	(x=0XE577A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE577A3);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE577A9);
	op_stkvar	(x,	0);
	create_insn	(x=0XE577AD);
	op_stkvar	(x,	0);
	create_insn	(x=0XE577B0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE577B6);
	op_stkvar	(x,	1);
	create_insn	(x=0XE577C0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE577C7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE577CA);
	op_stkvar	(x,	0);
	create_insn	(x=0XE577D3);
	op_stkvar	(x,	1);
	create_insn	(0XE577DF);
	create_insn	(x=0XE577E2);
	op_hex		(x,	1);
	set_cmt	(0XE577E7,	"dwSpinCount",	0);
	create_insn	(x=0XE577EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XE577F1,	"lpCriticalSection",	0);
	create_insn	(x=0XE577F2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE577F8,	"lpCriticalSection",	0);
	create_insn	(x=0XE577F9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE577FF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE57805);
	op_stkvar	(x,	1);
	set_cmt	(0XE57808,	"lpPerformanceCount",	0);
	create_insn	(x=0XE5780B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE57811);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE57817);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5781A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE57820);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57823);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE57829);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5782F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE57835);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5783B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE57841);
	op_stkvar	(x,	1);
	set_cmt	(0XE57844,	"lpSystemTime",	0);
	create_insn	(x=0XE57845);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5784B);
	op_stkvar	(x,	1);
	set_cmt	(0XE5784E,	"lpFileTime",	0);
	create_insn	(x=0XE5784F);
	op_stkvar	(x,	1);
	set_cmt	(0XE57852,	"lpSystemTime",	0);
	create_insn	(x=0XE57853);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE57859);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5785C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE57862);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57865);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5786B);
	op_stkvar	(x,	1);
	set_cmt	(0XE5786E,	"lpPerformanceCount",	0);
	create_insn	(x=0XE57871);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57874);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5787A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5787D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE57888);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE57891,	"lpCriticalSection",	0);
	create_insn	(x=0XE57892);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE57899);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE578A3);
	create_insn	(x=0XE578A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE578B7);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XE578BC,	"lpCriticalSection",	0);
	create_insn	(x=0XE578BD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE578D1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE578D6);
	op_stkvar	(x,	0);
	create_insn	(x=0XE578DF);
	op_hex		(x,	1);
	set_cmt	(0XE578EB,	"lpCriticalSection",	0);
	create_insn	(x=0XE578EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE578FE);
	set_cmt	(0XE57907,	"lpMem",	0);
	set_cmt	(0XE57911,	"lpMem",	0);
	create_insn	(0XE57928);
	create_insn	(0XE57933);
	create_insn	(0XE5793B);
	create_insn	(0XE57949);
	create_insn	(0XE57951);
	create_insn	(0XE57979);
	create_insn	(0XE5797A);
	create_insn	(x=0XE5797E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57987);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5799D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE579A5);
	op_stkvar	(x,	1);
	create_insn	(x=0XE579A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE579B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE579E7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE579EF);
	op_stkvar	(x,	1);
	create_insn	(x=0XE579F5);
	op_stkvar	(x,	1);
	create_insn	(x=0XE579FD);
	op_stkvar	(x,	1);
	create_insn	(0XE57A0A);
	create_insn	(x=0XE57A0F);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE57A14);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57A1C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57A3A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57A5D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57A60);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57A65);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57A6E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57A74);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57A7E);
	op_stkvar	(x,	1);
	create_insn	(0XE57A8F);
	create_insn	(x=0XE57A92);
	op_hex		(x,	1);
	create_insn	(x=0XE57A95);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57A98);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE57A9D);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57AB1);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE57AB5);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57AB8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57ACB);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57ACF);
	op_hex		(x,	1);
	create_insn	(x=0XE57AD2);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57AD9);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57AEA);
	op_hex		(x,	1);
	create_insn	(x=0XE57AF0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57AF3);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57AF6);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57AFB);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57B01);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57B09);
	op_stkvar	(x,	1);
	create_insn	(0XE57B16);
	create_insn	(x=0XE57B19);
	op_hex		(x,	1);
	create_insn	(x=0XE57B1C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57B1F);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57B25);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE57B2B);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57B37);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57B3A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57B41);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57B44);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57B50);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57B53);
	op_stkvar	(x,	1);
	create_insn	(0XE57B62);
	create_insn	(x=0XE57B65);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57B6D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57B73);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57B7D);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57B9D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57BA3);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57BA6);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57BBA);
	op_hex		(x,	1);
	create_insn	(x=0XE57BBD);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57BC4);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57BC8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57BD1);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57BD4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57BDC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57BDF);
	op_hex		(x,	1);
	create_insn	(x=0XE57BE2);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57BEB);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57BFA);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57BFD);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57C00);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57C07);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57C0E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57C14);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57C17);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57C32);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57C3E);
	op_hex		(x,	1);
	create_insn	(x=0XE57C41);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57C4B);
	op_stkvar	(x,	0);
	create_insn	(0XE57C57);
	create_insn	(x=0XE57C65);
	op_hex		(x,	1);
	create_insn	(x=0XE57C6A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57C75);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57C82);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57C8D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57C95);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57C98);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57CB3);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57CBA);
	op_hex		(x,	1);
	create_insn	(x=0XE57CBF);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57CCA);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57CD1);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57CEA);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57CEE);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57CF2);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57CFA);
	op_hex		(x,	1);
	create_insn	(x=0XE57CFE);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57D06);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57D0B);
	op_hex		(x,	1);
	create_insn	(x=0XE57D15);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57D1C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57D1F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57D26);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57D31);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57D38);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57D3E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57D5D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57D65);
	op_hex		(x,	1);
	create_insn	(x=0XE57D72);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57D75);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57D7C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57D7F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57D82);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57D95);
	op_hex		(x,	1);
	create_insn	(x=0XE57D98);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57D9B);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57D9E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57DA7);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57DB1);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57DBB);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57DBE);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57DCD);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57DE3);
	op_hex		(x,	1);
	create_insn	(x=0XE57E00);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57E07);
	op_stkvar	(x,	1);
	create_insn	(0XE57E19);
	create_insn	(x=0XE57E28);
	op_hex		(x,	1);
	create_insn	(x=0XE57E48);
	op_hex		(x,	1);
	create_insn	(x=0XE57E4F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57E52);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57E5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57E61);
	op_hex		(x,	1);
	create_insn	(x=0XE57E72);
	op_stkvar	(x,	0);
	create_insn	(0XE57E85);
	create_insn	(x=0XE57E8E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57E9B);
	op_hex		(x,	1);
	create_insn	(x=0XE57EA7);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE57EAB);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE57EAF);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57EC1);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57EC4);
	op_hex		(x,	1);
	create_insn	(x=0XE57ECD);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57ED6);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57EDA);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57EDD);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57EED);
	op_stkvar	(x,	1);
	create_insn	(0XE57EFA);
	create_insn	(x=0XE57EFD);
	op_hex		(x,	1);
	create_insn	(x=0XE57F00);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57F03);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57F0A);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE57F0F);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57F18);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57F1D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57F2A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57F2D);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57F33);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57F39);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57F48);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57F4B);
	op_hex		(x,	1);
	create_insn	(x=0XE57F4E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57F51);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57F56);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57F5D);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57F6C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57F76);
	op_hex		(x,	1);
	create_insn	(x=0XE57F7B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57F7E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57F83);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57F86);
	op_stkvar	(x,	0);
	create_insn	(x=0XE57F8E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57F91);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57F96);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57F99);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57FA1);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57FA4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE57FAC);
	op_stkvar	(x,	1);
	create_insn	(0XE57FB9);
	create_insn	(0XE57FCC);
	create_insn	(x=0XE57FCE);
	op_hex		(x,	1);
	create_insn	(0XE57FD3);
	create_insn	(0XE57FFC);
	create_insn	(x=0XE58001);
	op_hex		(x,	1);
	create_insn	(0XE58008);
	set_cmt	(0XE5801F,	"dwBytes",	0);
	set_cmt	(0XE58020,	"lpMem",	0);
	create_insn	(x=0XE5804A);
	op_hex		(x,	1);
	create_insn	(0XE58052);
	create_insn	(0XE58070);
	set_cmt	(0XE58077,	"dwBytes",	0);
	create_insn	(0XE58077);
	set_cmt	(0XE58083,	"dwBytes",	0);
	create_insn	(x=0XE58092);
	op_hex		(x,	1);
	create_insn	(x=0XE580A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE580B0);
	op_hex		(x,	1);
	create_insn	(x=0XE580B5);
	op_hex		(x,	1);
	create_insn	(x=0XE580BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE580C0);
	op_hex		(x,	1);
	create_insn	(x=0XE580C8);
	op_hex		(x,	1);
	create_insn	(0XE580E3);
	create_insn	(0XE580E5);
	create_insn	(0XE58104);
	create_insn	(x=0XE58109);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58120);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58129);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58135);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE58140);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	set_cmt	(0XE58152,	"dwBytes",	0);
	create_insn	(x=0XE5815E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58177);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58185);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58196);
	op_hex		(x,	1);
	create_insn	(x=0XE5819E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE581A1);
	op_stkvar	(x,	1);
	create_insn	(x=0XE581B2);
	op_stkvar	(x,	1);
	create_insn	(x=0XE581B5);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(0XE581C1);
	create_insn	(x=0XE581C7);
	op_stkvar	(x,	0);
	create_insn	(0XE581CF);
	create_insn	(x=0XE581D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE581DE);
	op_stkvar	(x,	1);
	create_insn	(x=0XE581E1);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5820D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58210);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5821A);
	op_hex		(x,	1);
	create_insn	(x=0XE58221);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58224);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58229);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE5822C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5822F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58234);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5823E);
	op_hex		(x,	1);
	create_insn	(x=0XE58259);
	op_hex		(x,	1);
	create_insn	(x=0XE5825D);
	op_stkvar	(x,	0);
	create_insn	(0XE58262);
	create_insn	(x=0XE58287);
	op_hex		(x,	1);
	create_insn	(x=0XE5828A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5828D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58299);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE582A6);
	op_stkvar	(x,	1);
	create_insn	(x=0XE582B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE582C2);
	op_stkvar	(x,	0);
	set_cmt	(0XE582CA,	"lpMem",	0);
	create_insn	(x=0XE582D3);
	op_stkvar	(x,	1);
	create_insn	(x=0XE582DD);
	op_stkvar	(x,	1);
	create_insn	(0XE582EE);
	create_insn	(x=0XE582F1);
	op_hex		(x,	1);
	create_insn	(x=0XE58304);
	op_hex		(x,	1);
	create_insn	(x=0XE5830D);
	op_hex		(x,	1);
	create_insn	(x=0XE58316);
	op_hex		(x,	1);
	create_insn	(x=0XE5831B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58334);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5833B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58345);
	op_hex		(x,	1);
	create_insn	(x=0XE5834A);
	op_hex		(x,	1);
	create_insn	(x=0XE5834D);
	op_hex		(x,	1);
	create_insn	(x=0XE58356);
	op_hex		(x,	1);
	create_insn	(x=0XE5835B);
	op_hex		(x,	1);
	create_insn	(x=0XE58360);
	op_hex		(x,	1);
	create_insn	(x=0XE58370);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58384);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE58388);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5838E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58394);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5839A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE583A0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE583A3);
	op_stkvar	(x,	0);
	create_insn	(x=0XE583A6);
	op_stkvar	(x,	0);
	create_insn	(x=0XE583AB);
	op_hex		(x,	1);
	create_insn	(x=0XE583B0);
	op_hex		(x,	1);
	create_insn	(x=0XE583B7);
	op_hex		(x,	1);
	create_insn	(x=0XE583C2);
	op_stkvar	(x,	1);
	create_insn	(x=0XE583CB);
	op_stkvar	(x,	1);
	create_insn	(x=0XE583CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE583D6);
	op_stkvar	(x,	1);
	create_insn	(x=0XE583DF);
	op_stkvar	(x,	1);
	create_insn	(x=0XE583E2);
	op_hex		(x,	1);
	create_insn	(x=0XE583E5);
	op_hex		(x,	1);
	create_insn	(x=0XE583EC);
	op_stkvar	(x,	0);
	create_insn	(x=0XE583F0);
	op_hex		(x,	1);
	create_insn	(x=0XE583F5);
	op_stkvar	(x,	1);
	create_insn	(x=0XE583FA);
	op_stkvar	(x,	1);
	create_insn	(x=0XE583FD);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58400);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58405);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5840A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5840D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58410);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58413);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58416);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58419);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5841C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5841F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58422);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58425);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5842A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58434);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58437);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5844B);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58455);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5845E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5846F);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58481);
	op_stkvar	(x,	1);
	create_insn	(0XE5848A);
	create_insn	(x=0XE5848D);
	op_hex		(x,	1);
	create_insn	(0XE584B4);
	create_insn	(x=0XE584C9);
	op_hex		(x,	1);
	create_insn	(x=0XE584DD);
	op_hex		(x,	1);
	create_insn	(x=0XE584E3);
	op_hex		(x,	1);
	create_insn	(x=0XE584FC);
	op_hex		(x,	1);
	create_insn	(x=0XE58505);
	op_hex		(x,	1);
	create_insn	(x=0XE5850A);
	op_hex		(x,	1);
	create_insn	(x=0XE58513);
	op_hex		(x,	1);
	create_insn	(x=0XE5851F);
	op_hex		(x,	1);
	create_insn	(x=0XE58527);
	op_hex		(x,	1);
	create_insn	(x=0XE5852A);
	op_hex		(x,	1);
	create_insn	(x=0XE58537);
	op_hex		(x,	1);
	create_insn	(x=0XE5853A);
	op_hex		(x,	1);
	create_insn	(x=0XE58548);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5854E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58554);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5855A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58560);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5856B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58573);
	op_hex		(x,	1);
	create_insn	(x=0XE5857C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE58582);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58587);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5858D);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58592);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE58598);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5859D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE585A3);
	op_stkvar	(x,	1);
	create_insn	(x=0XE585A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE585AE);
	op_stkvar	(x,	1);
	create_insn	(x=0XE585B3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE585B9);
	op_stkvar	(x,	1);
	create_insn	(x=0XE585BE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE585C9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE585D9);
	create_insn	(0XE585DD);
	create_insn	(x=0XE585E0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE585E6);
	op_hex		(x,	1);
	create_insn	(x=0XE585EC);
	op_hex		(x,	1);
	create_insn	(x=0XE585EF);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE585F7);
	op_stkvar	(x,	0);
	create_insn	(0XE58601);
	create_insn	(x=0XE58603);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58616);
	op_stkvar	(x,	1);
	create_insn	(0XE5861B);
	create_insn	(x=0XE58622);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5862B);
	op_hex		(x,	1);
	create_insn	(0XE58633);
	set_cmt	(0XE58634,	"dwBytes",	0);
	create_insn	(x=0XE58649);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58659);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58680);
	op_hex		(x,	1);
	create_insn	(0XE5868F);
	create_insn	(0XE586B7);
	create_insn	(x=0XE586BA);
	op_hex		(x,	1);
	create_insn	(x=0XE586C8);
	op_stkvar	(x,	0);
	create_insn	(x=0XE586D0);
	op_hex		(x,	1);
	set_cmt	(0XE586D3,	"dwMoveMethod",	0);
	create_insn	(x=0XE586D5);
	op_stkvar	(x,	1);
	set_cmt	(0XE586D8,	"lpNewFilePointer",	0);
	set_cmt	(0XE586DA,	"liDistanceToMove",	0);
	set_cmt	(0XE586DB,	"hFile",	0);
	create_insn	(x=0XE586DB);
	op_stkvar	(x,	0);
	create_insn	(x=0XE586DE);
	op_stkvar	(x,	0);
	create_insn	(x=0XE586E1);
	op_stkvar	(x,	0);
	create_insn	(x=0XE586E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE586F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE586F7);
	op_stkvar	(x,	1);
	create_insn	(x=0XE586FA);
	op_stkvar	(x,	0);
	set_cmt	(0XE586FF,	"dwMoveMethod",	0);
	create_insn	(x=0XE58700);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58703);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58706);
	op_stkvar	(x,	1);
	set_cmt	(0XE58709,	"lpNewFilePointer",	0);
	create_insn	(x=0XE5870A);
	op_stkvar	(x,	0);
	set_cmt	(0XE5870D,	"liDistanceToMove",	0);
	create_insn	(x=0XE5870D);
	op_stkvar	(x,	0);
	set_cmt	(0XE58710,	"hFile",	0);
	create_insn	(x=0XE58710);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5871C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XE5872A,	"lpOverlapped",	0);
	create_insn	(x=0XE5872C);
	op_stkvar	(x,	1);
	set_cmt	(0XE5872F,	"lpNumberOfBytesWritten",	0);
	set_cmt	(0XE58730,	"nNumberOfBytesToWrite",	0);
	set_cmt	(0XE58731,	"lpBuffer",	0);
	set_cmt	(0XE58734,	"hFile",	0);
	create_insn	(x=0XE58734);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58740);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58747);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58752);
	op_stkvar	(x,	0);
	set_cmt	(0XE58757,	"lpOverlapped",	0);
	create_insn	(x=0XE58759);
	op_stkvar	(x,	1);
	set_cmt	(0XE5875C,	"lpNumberOfBytesWritten",	0);
	set_cmt	(0XE5875D,	"nNumberOfBytesToWrite",	0);
	create_insn	(x=0XE5875D);
	op_stkvar	(x,	0);
	set_cmt	(0XE58760,	"lpBuffer",	0);
	set_cmt	(0XE58763,	"hFile",	0);
	create_insn	(x=0XE58763);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5876C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5876F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58774);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5877B);
	op_stkvar	(x,	1);
	create_insn	(0XE58782);
	create_insn	(x=0XE58785);
	op_hex		(x,	1);
	create_insn	(x=0XE5878B);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE58798);
	op_hex		(x,	1);
	create_insn	(x=0XE5879C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE587A1);
	op_stkvar	(x,	0);
	create_insn	(x=0XE587AB);
	op_stkvar	(x,	0);
	create_insn	(x=0XE587C4);
	op_stkvar	(x,	0);
	create_insn	(x=0XE587C7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE587CA);
	op_hex		(x,	1);
	create_insn	(x=0XE587D6);
	op_hex		(x,	1);
	create_insn	(0XE587E3);
	set_cmt	(0XE587E9,	"lpFileName",	0);
	create_insn	(x=0XE587E9);
	op_stkvar	(x,	0);
	create_insn	(x=0XE587EE);
	op_stkvar	(x,	0);
	create_insn	(x=0XE587F3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE587F9);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE587FD);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5880A);
	op_stkvar	(x,	0);
	set_cmt	(0XE58813,	"lpFileName",	0);
	create_insn	(x=0XE58813);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58816);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE58827,	"hTemplateFile",	0);
	set_cmt	(0XE58828,	"dwFlagsAndAttributes",	0);
	set_cmt	(0XE58829,	"dwCreationDisposition",	0);
	set_cmt	(0XE5882B,	"lpSecurityAttributes",	0);
	set_cmt	(0XE5882C,	"dwShareMode",	0);
	set_cmt	(0XE5882D,	"dwDesiredAccess",	0);
	set_cmt	(0XE58832,	"lpFileName",	0);
	create_insn	(x=0XE58832);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58835);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5883B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58847);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE5884B);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	set_cmt	(0XE5884F,	"dwMoveMethod",	0);
	create_insn	(x=0XE58851);
	op_stkvar	(x,	1);
	set_cmt	(0XE58854,	"lpNewFilePointer",	0);
	create_insn	(x=0XE58855);
	op_stkvar	(x,	0);
	set_cmt	(0XE58858,	"liDistanceToMove",	0);
	create_insn	(x=0XE58858);
	op_stkvar	(x,	0);
	set_cmt	(0XE5885B,	"hFile",	0);
	create_insn	(x=0XE5885C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5886A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5886D);
	op_stkvar	(x,	1);
	set_cmt	(0XE58878,	"dwMoveMethod",	0);
	create_insn	(x=0XE58879);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5887C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5887F);
	op_stkvar	(x,	1);
	set_cmt	(0XE58882,	"lpNewFilePointer",	0);
	create_insn	(x=0XE58883);
	op_stkvar	(x,	0);
	set_cmt	(0XE58886,	"liDistanceToMove",	0);
	create_insn	(x=0XE58886);
	op_stkvar	(x,	0);
	set_cmt	(0XE58889,	"hFile",	0);
	create_insn	(x=0XE58889);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5888C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE5889A,	"hTemplateFile",	0);
	set_cmt	(0XE5889C,	"dwFlagsAndAttributes",	0);
	create_insn	(x=0XE5889C);
	op_stkvar	(x,	0);
	set_cmt	(0XE5889F,	"dwCreationDisposition",	0);
	set_cmt	(0XE588A1,	"lpSecurityAttributes",	0);
	set_cmt	(0XE588A3,	"dwShareMode",	0);
	set_cmt	(0XE588A5,	"dwDesiredAccess",	0);
	set_cmt	(0XE588AA,	"lpFileName",	0);
	create_insn	(x=0XE588AA);
	op_stkvar	(x,	0);
	create_insn	(x=0XE588AD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE588B3);
	op_stkvar	(x,	0);
	create_insn	(x=0XE588C1);
	op_stkvar	(x,	0);
	create_insn	(x=0XE588C5);
	op_stkvar	(x,	1);
	create_insn	(x=0XE588D1);
	op_hex		(x,	1);
	create_insn	(x=0XE588DE);
	op_stkvar	(x,	1);
	create_insn	(x=0XE588E1);
	op_stkvar	(x,	1);
	create_insn	(x=0XE588EB);
	op_hex		(x,	1);
	create_insn	(x=0XE588F1);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58901);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58904);
	op_hex		(x,	1);
	create_insn	(x=0XE58907);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5890A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58912);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5891E);
	op_hex		(x,	1);
	set_cmt	(0XE58929,	"lpOverlapped",	0);
	create_insn	(x=0XE5892B);
	op_stkvar	(x,	1);
	set_cmt	(0XE5892E,	"lpNumberOfBytesWritten",	0);
	set_cmt	(0XE5892F,	"nNumberOfBytesToWrite",	0);
	create_insn	(x=0XE5892F);
	op_stkvar	(x,	0);
	set_cmt	(0XE58932,	"lpBuffer",	0);
	set_cmt	(0XE58935,	"hFile",	0);
	create_insn	(x=0XE58935);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58938);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE58946);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58949);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58952);
	op_stkvar	(x,	1);
	set_cmt	(0XE58957,	"lpOverlapped",	0);
	create_insn	(x=0XE58959);
	op_stkvar	(x,	1);
	set_cmt	(0XE5895C,	"lpNumberOfBytesRead",	0);
	set_cmt	(0XE5895D,	"nNumberOfBytesToRead",	0);
	create_insn	(x=0XE5895D);
	op_stkvar	(x,	0);
	set_cmt	(0XE58960,	"lpBuffer",	0);
	set_cmt	(0XE58963,	"hFile",	0);
	create_insn	(x=0XE58963);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58966);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE58979);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5897C);
	op_hex		(x,	1);
	create_insn	(x=0XE5897F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58989);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5899F);
	op_hex		(x,	1);
	create_insn	(x=0XE589AE);
	op_hex		(x,	1);
	create_insn	(x=0XE589B3);
	op_stkvar	(x,	0);
	create_insn	(x=0XE589C1);
	op_hex		(x,	1);
	create_insn	(x=0XE589D6);
	op_hex		(x,	1);
	create_insn	(x=0XE589EB);
	op_stkvar	(x,	1);
	create_insn	(x=0XE589EE);
	op_stkvar	(x,	1);
	create_insn	(x=0XE589F4);
	op_hex		(x,	1);
	create_insn	(x=0XE589F7);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58A09);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58A15);
	op_hex		(x,	1);
	create_insn	(x=0XE58A25);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58A33);
	op_hex		(x,	1);
	create_insn	(x=0XE58A3F);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58A4D);
	op_hex		(x,	1);
	set_cmt	(0XE58A50,	"lpOverlapped",	0);
	create_insn	(x=0XE58A52);
	op_stkvar	(x,	1);
	set_cmt	(0XE58A55,	"lpNumberOfBytesWritten",	0);
	set_cmt	(0XE58A56,	"nNumberOfBytesToWrite",	0);
	set_cmt	(0XE58A5C,	"lpBuffer",	0);
	set_cmt	(0XE58A5F,	"hFile",	0);
	create_insn	(x=0XE58A5F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58A62);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE58A6C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58A77);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	set_cmt	(0XE58A7D,	"hFile",	0);
	create_insn	(x=0XE58A7D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58A86);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	set_cmt	(0XE58A8C,	"hFile",	0);
	create_insn	(x=0XE58A8C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58A8F);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XE58A97,	"hFile",	0);
	create_insn	(x=0XE58A97);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58A9C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58AA8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58AB6);
	op_hex		(x,	1);
	set_cmt	(0XE58AB9,	"hObject",	0);
	create_insn	(x=0XE58AB9);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58ABC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE58AC4);
	op_stkvar	(x,	0);
	set_cmt	(0XE58ACA,	"hObject",	0);
	create_insn	(x=0XE58ACA);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58ACF);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58AD5);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58ADA);
	op_stkvar	(x,	0);
	set_cmt	(0XE58AE0,	"lpFileName",	0);
	create_insn	(x=0XE58AE0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58AE3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE58AE9);
	op_stkvar	(x,	1);
	create_insn	(0XE58AF1);
	create_insn	(x=0XE58AF4);
	op_hex		(x,	1);
	create_insn	(x=0XE58B04);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58B0C);
	op_hex		(x,	1);
	set_cmt	(0XE58B13,	"dwMoveMethod",	0);
	create_insn	(x=0XE58B19);
	op_stkvar	(x,	1);
	set_cmt	(0XE58B1C,	"lpNewFilePointer",	0);
	set_cmt	(0XE58B1E,	"liDistanceToMove",	0);
	set_cmt	(0XE58B1F,	"hFile",	0);
	create_insn	(x=0XE58B1F);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58B22);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58B25);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58B28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE58B32,	"lpOverlapped",	0);
	create_insn	(x=0XE58B34);
	op_stkvar	(x,	1);
	set_cmt	(0XE58B37,	"lpNumberOfBytesWritten",	0);
	set_cmt	(0XE58B38,	"nNumberOfBytesToWrite",	0);
	set_cmt	(0XE58B39,	"lpBuffer",	0);
	create_insn	(x=0XE58B39);
	op_stkvar	(x,	0);
	set_cmt	(0XE58B3C,	"hFile",	0);
	create_insn	(x=0XE58B3C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58B3F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE58B49);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58B52);
	op_hex		(x,	1);
	create_insn	(0XE58B60);
	create_insn	(x=0XE58B63);
	op_hex		(x,	1);
	set_cmt	(0XE58B69,	"dwMoveMethod",	0);
	create_insn	(x=0XE58B6D);
	op_stkvar	(x,	1);
	set_cmt	(0XE58B70,	"lpNewFilePointer",	0);
	set_cmt	(0XE58B72,	"liDistanceToMove",	0);
	set_cmt	(0XE58B73,	"hFile",	0);
	create_insn	(x=0XE58B73);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58B76);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58B79);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58B7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE58B8A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58B8D);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58B90);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58B93);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58BB2);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58BB5);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58BBF);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58BC2);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58BCE);
	op_stkvar	(x,	1);
	set_cmt	(0XE58BD1,	"dwMoveMethod",	0);
	create_insn	(x=0XE58BDA);
	op_stkvar	(x,	1);
	set_cmt	(0XE58BDD,	"lpNewFilePointer",	0);
	set_cmt	(0XE58BDF,	"liDistanceToMove",	0);
	set_cmt	(0XE58BE0,	"hFile",	0);
	create_insn	(x=0XE58BE0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58BE3);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58BE6);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58BE9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE58BF3);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58BF8);
	op_stkvar	(x,	0);
	set_cmt	(0XE58BFD,	"lpOverlapped",	0);
	create_insn	(x=0XE58BFF);
	op_stkvar	(x,	1);
	set_cmt	(0XE58C02,	"lpNumberOfBytesRead",	0);
	set_cmt	(0XE58C03,	"nNumberOfBytesToRead",	0);
	set_cmt	(0XE58C08,	"lpBuffer",	0);
	create_insn	(x=0XE58C08);
	op_stkvar	(x,	0);
	set_cmt	(0XE58C0B,	"hFile",	0);
	create_insn	(x=0XE58C0B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58C0E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE58C1D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58C22);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58C25);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58C28);
	op_stkvar	(x,	0);
	create_insn	(0XE58C42);
	create_insn	(x=0XE58C45);
	op_hex		(x,	1);
	create_insn	(x=0XE58C4B);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE58C52);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58C5E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58C6C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58C80);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58C83);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58C86);
	op_hex		(x,	1);
	create_insn	(x=0XE58C92);
	op_hex		(x,	1);
	create_insn	(0XE58C9F);
	create_insn	(x=0XE58CA5);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58CB6);
	op_stkvar	(x,	0);
	set_cmt	(0XE58CCD,	"lpNewFileName",	0);
	create_insn	(x=0XE58CCD);
	op_stkvar	(x,	0);
	set_cmt	(0XE58CD0,	"lpExistingFileName",	0);
	create_insn	(x=0XE58CD0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58CD3);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE58CE3,	"hTemplateFile",	0);
	set_cmt	(0XE58CE4,	"dwFlagsAndAttributes",	0);
	set_cmt	(0XE58CE5,	"dwCreationDisposition",	0);
	set_cmt	(0XE58CE7,	"lpSecurityAttributes",	0);
	set_cmt	(0XE58CE8,	"dwShareMode",	0);
	set_cmt	(0XE58CE9,	"dwDesiredAccess",	0);
	set_cmt	(0XE58CEE,	"lpFileName",	0);
	create_insn	(x=0XE58CEE);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58CF1);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE58CF7);
	op_stkvar	(x,	0);
	set_cmt	(0XE58D03,	"lpBuffer",	0);
	create_insn	(x=0XE58D03);
	op_stkvar	(x,	0);
	set_cmt	(0XE58D09,	"int",	0);
	set_cmt	(0XE58D0A,	"hFile",	0);
	create_insn	(x=0XE58D0A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58D12);
	op_hex		(x,	1);
	create_insn	(x=0XE58D23);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58D2B);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58D2E);
	op_hex		(x,	1);
	create_insn	(x=0XE58D31);
	op_hex		(x,	1);
	create_insn	(x=0XE58D5D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58D63);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58D6D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58D77);
	op_hex		(x,	1);
	create_insn	(x=0XE58D7A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58D7E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58D8A);
	op_hex		(x,	1);
	create_insn	(x=0XE58D98);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58D9D);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58DAB);
	op_hex		(x,	1);
	create_insn	(x=0XE58DBB);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58DC9);
	op_hex		(x,	1);
	create_insn	(x=0XE58DD8);
	op_hex		(x,	1);
	create_insn	(x=0XE58DDD);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58DEB);
	op_hex		(x,	1);
	create_insn	(x=0XE58E00);
	op_hex		(x,	1);
	create_insn	(x=0XE58E17);
	op_hex		(x,	1);
	create_insn	(x=0XE58E29);
	op_stkvar	(x,	1);
	set_cmt	(0XE58E2C,	"dwMoveMethod",	0);
	create_insn	(x=0XE58E2E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58E31);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58E34);
	op_stkvar	(x,	1);
	set_cmt	(0XE58E37,	"lpNewFilePointer",	0);
	create_insn	(x=0XE58E38);
	op_stkvar	(x,	0);
	set_cmt	(0XE58E3B,	"liDistanceToMove",	0);
	create_insn	(x=0XE58E3B);
	op_stkvar	(x,	0);
	set_cmt	(0XE58E3E,	"hFile",	0);
	create_insn	(x=0XE58E3F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE58E49,	"lpOverlapped",	0);
	create_insn	(x=0XE58E4B);
	op_stkvar	(x,	1);
	set_cmt	(0XE58E4E,	"lpNumberOfBytesWritten",	0);
	set_cmt	(0XE58E4F,	"nNumberOfBytesToWrite",	0);
	set_cmt	(0XE58E55,	"lpBuffer",	0);
	set_cmt	(0XE58E58,	"hFile",	0);
	create_insn	(x=0XE58E59);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE58E63);
	op_stkvar	(x,	1);
	set_cmt	(0XE58E6E,	"hFile",	0);
	create_insn	(x=0XE58E6F);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE58E75);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58E78);
	op_stkvar	(x,	1);
	set_cmt	(0XE58E7E,	"lpBuffer",	0);
	set_cmt	(0XE58E7F,	"hFile",	0);
	create_insn	(x=0XE58E85);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	set_cmt	(0XE58E8D,	"hFile",	0);
	create_insn	(x=0XE58E8E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE58E94);
	op_stkvar	(x,	0);
	set_cmt	(0XE58E9B,	"hObject",	0);
	create_insn	(x=0XE58E9B);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58E9E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE58EA4);
	op_stkvar	(x,	0);
	set_cmt	(0XE58EAA,	"lpNewFileName",	0);
	create_insn	(x=0XE58EAA);
	op_stkvar	(x,	0);
	set_cmt	(0XE58EAD,	"lpExistingFileName",	0);
	create_insn	(x=0XE58EAD);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58EB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE58EB6);
	op_stkvar	(x,	1);
	create_insn	(0XE58EBE);
	create_insn	(x=0XE58EC1);
	op_hex		(x,	1);
	set_cmt	(0XE58EC8,	"hTemplateFile",	0);
	set_cmt	(0XE58EC9,	"dwFlagsAndAttributes",	0);
	set_cmt	(0XE58ECA,	"dwCreationDisposition",	0);
	set_cmt	(0XE58ECC,	"lpSecurityAttributes",	0);
	set_cmt	(0XE58ECD,	"dwShareMode",	0);
	set_cmt	(0XE58ECF,	"dwDesiredAccess",	0);
	set_cmt	(0XE58ED4,	"lpFileName",	0);
	create_insn	(x=0XE58ED5);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58ED8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE58EE9);
	op_stkvar	(x,	1);
	set_cmt	(0XE58EEC,	"lpFileSize",	0);
	set_cmt	(0XE58EED,	"hFile",	0);
	create_insn	(x=0XE58EEE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE58EFC,	"hObject",	0);
	create_insn	(x=0XE58EFD);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE58F03);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58F06);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58F09);
	op_hex		(x,	1);
	create_insn	(x=0XE58F0C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58F11);
	op_stkvar	(x,	0);
	set_cmt	(0XE58F1A,	"lpFileName",	0);
	create_insn	(x=0XE58F1B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE58F21);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58F28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE58F2E);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58F31);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE58F37);
	op_hex		(x,	1);
	set_cmt	(0XE58F3A,	"dwFileAttributes",	0);
	set_cmt	(0XE58F3B,	"lpFileName",	0);
	create_insn	(x=0XE58F3E);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE58F44);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58F4A);
	op_stkvar	(x,	0);
	set_cmt	(0XE58F53,	"char",	0);
	create_insn	(x=0XE58F53);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58F56);
	op_stkvar	(x,	1);
	set_cmt	(0XE58F59,	"lpNewFileName",	0);
	create_insn	(x=0XE58F59);
	op_stkvar	(x,	0);
	set_cmt	(0XE58F5C,	"lpExistingFileName",	0);
	set_cmt	(0XE58F5D,	"int",	0);
	create_insn	(x=0XE58F5D);
	op_stkvar	(x,	0);
	set_cmt	(0XE58F67,	"char",	0);
	create_insn	(x=0XE58F67);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58F6A);
	op_stkvar	(x,	1);
	set_cmt	(0XE58F6D,	"LPCWSTR",	0);
	create_insn	(x=0XE58F6D);
	op_stkvar	(x,	0);
	set_cmt	(0XE58F70,	"lpFileName",	0);
	set_cmt	(0XE58F71,	"int",	0);
	create_insn	(x=0XE58F71);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58F79);
	op_hex		(x,	1);
	create_insn	(x=0XE58F7C);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58F80);
	op_stkvar	(x,	0);
	set_cmt	(0XE58F85,	"dwFileAttributes",	0);
	create_insn	(x=0XE58F85);
	op_stkvar	(x,	0);
	set_cmt	(0XE58F8C,	"lpFileName",	0);
	create_insn	(x=0XE58F8C);
	op_stkvar	(x,	0);
	set_cmt	(0XE58F93,	"lpFileName",	0);
	create_insn	(0XE58F93);
	set_cmt	(0XE58F9B,	"hObject",	0);
	create_insn	(x=0XE58F9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE58FA2);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58FA9);
	op_stkvar	(x,	1);
	set_name	(0XE58FA9,	"mw_memset_408FA9");
	create_insn	(x=0XE58FB1);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58FC0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58FC4);
	op_hex		(x,	1);
	create_insn	(x=0XE58FCB);
	op_hex		(x,	1);
	create_insn	(x=0XE58FD2);
	op_stkvar	(x,	1);
	create_insn	(0XE58FD7);
	set_name	(0XE58FD7,	"mw_init_some_data");
	create_insn	(x=0XE58FDA);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58FE0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58FE3);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58FEA);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58FF1);
	op_stkvar	(x,	0);
	create_insn	(x=0XE58FF7);
	op_stkvar	(x,	1);
	create_insn	(x=0XE58FFC);
	op_stkvar	(x,	1);
	create_insn	(x=0XE59000);
	op_stkvar	(x,	1);
	create_insn	(x=0XE59004);
	op_stkvar	(x,	1);
	create_insn	(0XE5902B);
	create_insn	(x=0XE59041);
	op_stkvar	(x,	1);
	set_name	(0XE59041,	"mw_HeapAlloc_409041");
	set_cmt	(0XE5904A,	"dwBytes",	0);
	set_cmt	(0XE5904B,	"dwFlags",	0);
	create_insn	(x=0XE5904D);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE59053,	"hHeap",	0);
	create_insn	(x=0XE59054);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5905B);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5905F);
	op_stkvar	(x,	1);
	set_cmt	(0XE59069,	"dwBytes",	0);
	set_cmt	(0XE5906A,	"dwFlags",	0);
	create_insn	(x=0XE5906C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE59072,	"hHeap",	0);
	create_insn	(x=0XE59073);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5907A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE59081);
	op_stkvar	(x,	0);
	set_cmt	(0XE59089,	"dwBytes",	0);
	create_insn	(x=0XE59089);
	op_stkvar	(x,	0);
	set_cmt	(0XE5908D,	"lpMem",	0);
	create_insn	(x=0XE5908D);
	op_stkvar	(x,	0);
	set_cmt	(0XE59091,	"dwFlags",	0);
	create_insn	(x=0XE59093);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE59099,	"hHeap",	0);
	create_insn	(x=0XE5909A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE590A1,	"lpMem",	0);
	create_insn	(x=0XE590A1);
	op_stkvar	(x,	0);
	set_name	(0XE590A1,	"mw_HeapFree");
	set_cmt	(0XE590A5,	"dwFlags",	0);
	create_insn	(x=0XE590A7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XE590AD,	"hHeap",	0);
	create_insn	(x=0XE590AE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE590B5);
	op_stkvar	(x,	1);
	create_insn	(x=0XE590C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XE590C6);
	op_stkvar	(x,	1);
	create_insn	(x=0XE590D5);
	op_stkvar	(x,	1);
	create_insn	(x=0XE590D9);
	op_hex		(x,	1);
	create_insn	(x=0XE590DD);
	op_stkvar	(x,	1);
	create_insn	(x=0XE590E5);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5910C);
	op_hex		(x,	1);
	create_insn	(0XE59110);
	create_insn	(x=0XE59116);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5911A);
	op_stkvar	(x,	1);
	create_insn	(0XE59121);
	create_insn	(x=0XE59139);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5914A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE59163);
	op_stkvar	(x,	1);
	create_insn	(x=0XE59168);
	op_stkvar	(x,	1);
	create_insn	(x=0XE59181);
	op_stkvar	(x,	1);
	create_insn	(0XE591BC);
	create_insn	(0XE591C0);
	create_insn	(x=0XE591C3);
	op_stkvar	(x,	1);
	create_insn	(x=0XE591C7);
	op_stkvar	(x,	1);
	create_insn	(x=0XE591CD);
	op_stkvar	(x,	0);
	create_insn	(x=0XE591FE);
	op_stkvar	(x,	0);
	create_insn	(x=0XE59201);
	op_stkvar	(x,	1);
	create_insn	(x=0XE59211);
	op_stkvar	(x,	1);
	create_insn	(0XE59216);
	create_insn	(x=0XE59219);
	op_stkvar	(x,	0);
	create_insn	(x=0XE59223);
	op_stkvar	(x,	1);
	create_insn	(x=0XE59226);
	op_stkvar	(x,	1);
	create_insn	(x=0XE59229);
	op_stkvar	(x,	0);
	create_insn	(0XE59243);
	create_insn	(0XE5924D);
	create_insn	(x=0XE59250);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5925A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5925D);
	op_stkvar	(x,	1);
	create_insn	(x=0XE59260);
	op_stkvar	(x,	0);
	create_insn	(0XE59273);
	create_insn	(x=0XE5927D);
	op_stkvar	(x,	1);
	create_insn	(x=0XE59281);
	op_stkvar	(x,	1);
	create_insn	(x=0XE59296);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5929B);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5929F);
	op_stkvar	(x,	1);
	create_insn	(x=0XE592AF);
	op_stkvar	(x,	1);
	create_insn	(x=0XE592B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XE592CA);
	op_stkvar	(x,	1);
	create_insn	(0XE592E1);
	create_insn	(x=0XE592E2);
	op_stkvar	(x,	1);
	create_insn	(x=0XE592F9);
	op_hex		(x,	1);
	create_insn	(0XE5930B);
	create_insn	(0XE5930F);
	create_insn	(x=0XE59310);
	op_stkvar	(x,	1);
	create_insn	(0XE5931C);
	set_cmt	(0XE59324,	"dwBytes",	0);
	create_insn	(0XE5933F);
	create_insn	(0XE59344);
	create_insn	(x=0XE59348);
	op_stkvar	(x,	1);
	create_insn	(x=0XE59351);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(0XE5935E);
	create_insn	(x=0XE5936F);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(0XE59375);
	create_insn	(x=0XE59381);
	op_stkvar	(x,	1);
	create_insn	(x=0XE593A8);
	op_stkvar	(x,	0);
	create_insn	(0XE593B1);
	create_insn	(x=0XE593BE);
	op_stkvar	(x,	0);
	create_insn	(x=0XE593C7);
	op_stkvar	(x,	0);
	create_insn	(0XE593D0);
	create_insn	(x=0XE593EF);
	op_hex		(x,	1);
	create_insn	(x=0XE593F4);
	op_stkvar	(x,	1);
	create_insn	(0XE5940B);
	create_insn	(0XE5941C);
	create_insn	(x=0XE5942B);
	op_stkvar	(x,	1);
	create_insn	(x=0XE59430);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE59434);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5943F);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE59443);
	op_stkvar	(x,	0);
	create_insn	(x=0XE59449);
	op_stkvar	(x,	1);
	create_insn	(x=0XE59450);
	op_hex		(x,	1);
	create_insn	(x=0XE59455);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5945D);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(x=0XE59463);
	op_stkvar	(x,	1);
	create_insn	(x=0XE59466);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5946C);
	op_stkvar	(x,	0);
	create_insn	(0XE59477);
	create_insn	(x=0XE5947C);
	op_hex		(x,	1);
	create_insn	(x=0XE59481);
	op_hex		(x,	1);
	create_insn	(x=0XE59488);
	op_hex		(x,	1);
	create_insn	(x=0XE5948D);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5949A);
	op_stkvar	(x,	0);
	create_insn	(x=0XE5949F);
	op_hex		(x,	1);
	create_insn	(x=0XE594A4);
	op_stkvar	(x,	0);
	op_hex		(x,	1);
	create_insn	(0XE594AA);
	create_insn	(x=0XE594AC);
	op_hex		(x,	1);
	create_insn	(x=0XE594B5);
	op_stkvar	(x,	0);
	create_insn	(x=0XE594B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XE594C1);
	op_hex		(x,	1);
	create_insn	(x=0XE594C6);
	op_stkvar	(x,	0);
	create_insn	(x=0XE594C9);
	op_stkvar	(x,	1);
	create_insn	(0XE594CE);
	create_insn	(0XE594D9);
	create_insn	(x=0XE594DA);
	op_stkvar	(x,	1);
	create_insn	(x=0XE594E0);
	op_stkvar	(x,	0);
	create_insn	(x=0XE594E4);
	op_stkvar	(x,	0);
	create_insn	(x=0XE594ED);
	op_hex		(x,	1);
	set_cmt	(0XE594F2,	"uExitCode",	0);
	create_insn	(0XE594F2);
	create_insn	(x=0XE594F7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE594FE);
	op_stkvar	(x,	1);
	create_insn	(x=0XE59502);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE59508);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XE59518);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XE5951D);
	op_hex		(x,	1);
	create_insn	(x=0XE59520);
	op_hex		(x,	1);
	make_array	(0XE59526,	0XA);
	create_insn	(0XE59530);
	create_insn	(x=0XE59532);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5953A);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5953E);
	op_stkvar	(x,	1);
	create_insn	(x=0XE59548);
	op_stkvar	(x,	1);
	create_insn	(0XE59552);
	create_insn	(x=0XE59554);
	op_stkvar	(x,	1);
	create_insn	(x=0XE59558);
	op_stkvar	(x,	1);
	create_insn	(x=0XE5955C);
	op_stkvar	(x,	1);
	create_insn	(x=0XE59560);
	op_hex		(x,	1);
	create_insn	(x=0XE59562);
	op_hex		(x,	1);
	create_insn	(x=0XE59564);
	op_hex		(x,	1);
	create_insn	(x=0XE59566);
	op_hex		(x,	1);
	create_insn	(x=0XE59570);
	op_stkvar	(x,	1);
	create_insn	(x=0XE59576);
	op_stkvar	(x,	1);
	create_insn	(x=0XE59580);
	op_stkvar	(x,	1);
	create_insn	(x=0XE59588);
	op_stkvar	(x,	1);
	make_array	(0XE59598,	0X68);
	create_dword	(0XE59600);
	make_array	(0XE59600,	0X280);
	update_extra_cmt		(0XE5A000,	E_PREV + 0,	"; Section 2. (virtual address 0000A000)");
	update_extra_cmt		(0XE5A000,	E_PREV + 1,	"; Virtual size                  : 00000E7C (   3708.)");
	update_extra_cmt		(0XE5A000,	E_PREV + 2,	"; Section size in file          : 00001000 (   4096.)");
	update_extra_cmt		(0XE5A000,	E_PREV + 3,	"; Offset to raw data for section: 00008A00");
	update_extra_cmt		(0XE5A000,	E_PREV + 4,	"; Flags 40000040: Data Readable");
	update_extra_cmt		(0XE5A000,	E_PREV + 5,	"; Alignment     : default");
	update_extra_cmt		(0XE5A000,	E_PREV + 6,	"; ");
	update_extra_cmt		(0XE5A000,	E_PREV + 7,	"; Imports from ADVAPI32.dll");
	update_extra_cmt		(0XE5A000,	E_PREV + 8,	"; ");
	create_dword	(x=0XE5A000);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A000,	"FreeSid");
	create_dword	(x=0XE5A004);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A004,	"LookupPrivilegeValueW");
	create_dword	(x=0XE5A008);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A008,	"OpenProcessToken");
	create_dword	(x=0XE5A00C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A00C,	"GetTokenInformation");
	create_dword	(x=0XE5A010);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A010,	"EqualSid");
	create_dword	(x=0XE5A014);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A014,	"RegSetValueExW");
	create_dword	(x=0XE5A018);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A018,	"RegCloseKey");
	create_dword	(x=0XE5A01C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A01C,	"AdjustTokenPrivileges");
	create_dword	(x=0XE5A020);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A020,	"RegOpenKeyExW");
	create_dword	(x=0XE5A024);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A024,	"LookupAccountSidW");
	create_dword	(x=0XE5A028);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A028,	"AllocateAndInitializeSid");
	create_dword	(x=0XE5A02C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A02C,	"DuplicateTokenEx");
	create_dword	(x=0XE5A030);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A030,	"RegQueryValueExW");
	create_byte	(0XE5A034);
	make_array	(0XE5A034,	0X4);
	update_extra_cmt		(0XE5A038,	E_PREV + 0,	"; ");
	update_extra_cmt		(0XE5A038,	E_PREV + 1,	"; Imports from IPHLPAPI.DLL");
	update_extra_cmt		(0XE5A038,	E_PREV + 2,	"; ");
	create_dword	(x=0XE5A038);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A038,	"GetIpAddrTable");
	create_byte	(0XE5A03C);
	make_array	(0XE5A03C,	0X4);
	update_extra_cmt		(0XE5A040,	E_PREV + 0,	"; ");
	update_extra_cmt		(0XE5A040,	E_PREV + 1,	"; Imports from KERNEL32.dll");
	update_extra_cmt		(0XE5A040,	E_PREV + 2,	"; ");
	create_dword	(x=0XE5A040);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A040,	"FindClose");
	create_dword	(x=0XE5A044);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A044,	"FindNextFileW");
	create_dword	(x=0XE5A048);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A048,	"SystemTimeToFileTime");
	create_dword	(x=0XE5A04C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A04C,	"OpenProcess");
	create_dword	(x=0XE5A050);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A050,	"FindFirstFileW");
	create_dword	(x=0XE5A054);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A054,	"MoveFileW");
	create_dword	(x=0XE5A058);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A058,	"GetFileSizeEx");
	create_dword	(x=0XE5A05C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A05C,	"SetFilePointerEx");
	create_dword	(x=0XE5A060);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A060,	"SetEndOfFile");
	create_dword	(x=0XE5A064);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A064,	"GetCurrentThreadId");
	create_dword	(x=0XE5A068);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A068,	"GetLocalTime");
	create_dword	(x=0XE5A06C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A06C,	"ExitProcess");
	create_dword	(x=0XE5A070);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A070,	"SetFilePointer");
	create_dword	(x=0XE5A074);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A074,	"WaitForSingleObject");
	create_dword	(x=0XE5A078);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A078,	"GetComputerNameW");
	create_dword	(x=0XE5A07C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A07C,	"SetEvent");
	create_dword	(x=0XE5A080);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A080,	"GetLogicalDrives");
	create_dword	(x=0XE5A084);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A084,	"GetTickCount");
	create_dword	(x=0XE5A088);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A088,	"Sleep");
	create_dword	(x=0XE5A08C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A08C,	"CopyFileW");
	create_dword	(x=0XE5A090);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A090,	"GetFileAttributesW");
	create_dword	(x=0XE5A094);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A094,	"ReadFile");
	create_dword	(x=0XE5A098);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A098,	"CreateFileW");
	create_dword	(x=0XE5A09C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A09C,	"MultiByteToWideChar");
	create_dword	(x=0XE5A0A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A0A0,	"CreateEventW");
	create_dword	(x=0XE5A0A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A0A4,	"WaitForMultipleObjects");
	create_dword	(x=0XE5A0A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A0A8,	"CloseHandle");
	create_dword	(x=0XE5A0AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A0AC,	"SetFileAttributesW");
	create_dword	(x=0XE5A0B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A0B0,	"CreateThread");
	create_dword	(x=0XE5A0B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A0B4,	"InitializeCriticalSectionAndSpinCount");
	create_dword	(x=0XE5A0B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A0B8,	"LeaveCriticalSection");
	create_dword	(x=0XE5A0BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A0BC,	"EnterCriticalSection");
	create_dword	(x=0XE5A0C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A0C0,	"ResetEvent");
	create_dword	(x=0XE5A0C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A0C4,	"DeleteCriticalSection");
	create_dword	(x=0XE5A0C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A0C8,	"AllocConsole");
	create_dword	(x=0XE5A0CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A0CC,	"WriteFile");
	create_dword	(x=0XE5A0D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A0D0,	"WideCharToMultiByte");
	create_dword	(x=0XE5A0D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A0D4,	"WriteConsoleW");
	create_dword	(x=0XE5A0D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A0D8,	"GetStdHandle");
	create_dword	(x=0XE5A0DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A0DC,	"CreateMutexW");
	create_dword	(x=0XE5A0E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A0E0,	"CreateProcessW");
	create_dword	(x=0XE5A0E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A0E4,	"GetCurrentProcess");
	create_dword	(x=0XE5A0E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A0E8,	"SetHandleInformation");
	create_dword	(x=0XE5A0EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A0EC,	"HeapFree");
	create_dword	(x=0XE5A0F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A0F0,	"GetLocaleInfoW");
	create_dword	(x=0XE5A0F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A0F4,	"ReadProcessMemory");
	create_dword	(x=0XE5A0F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A0F8,	"TerminateProcess");
	create_dword	(x=0XE5A0FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A0FC,	"GetModuleFileNameW");
	create_dword	(x=0XE5A100);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A100,	"FlushFileBuffers");
	create_dword	(x=0XE5A104);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A104,	"OpenMutexW");
	create_dword	(x=0XE5A108);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A108,	"GetLastError");
	create_dword	(x=0XE5A10C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A10C,	"GetProcAddress");
	create_dword	(x=0XE5A110);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A110,	"Process32FirstW");
	create_dword	(x=0XE5A114);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A114,	"GetExitCodeThread");
	create_dword	(x=0XE5A118);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A118,	"CreatePipe");
	create_dword	(x=0XE5A11C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A11C,	"Process32NextW");
	create_dword	(x=0XE5A120);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A120,	"GetModuleHandleA");
	create_dword	(x=0XE5A124);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A124,	"CreateToolhelp32Snapshot");
	create_dword	(x=0XE5A128);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A128,	"ReleaseMutex");
	create_dword	(x=0XE5A12C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A12C,	"GetVersion");
	create_dword	(x=0XE5A130);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A130,	"DeleteFileW");
	create_dword	(x=0XE5A134);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A134,	"GetCurrentProcessId");
	create_dword	(x=0XE5A138);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A138,	"GetVolumeInformationW");
	create_dword	(x=0XE5A13C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A13C,	"ExpandEnvironmentStringsW");
	create_dword	(x=0XE5A140);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A140,	"HeapAlloc");
	create_dword	(x=0XE5A144);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A144,	"GetProcessHeap");
	create_dword	(x=0XE5A148);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A148,	"HeapReAlloc");
	create_dword	(x=0XE5A14C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A14C,	"QueryPerformanceCounter");
	create_byte	(0XE5A150);
	make_array	(0XE5A150,	0X4);
	update_extra_cmt		(0XE5A154,	E_PREV + 0,	"; ");
	update_extra_cmt		(0XE5A154,	E_PREV + 1,	"; Imports from MPR.dll");
	update_extra_cmt		(0XE5A154,	E_PREV + 2,	"; ");
	create_dword	(x=0XE5A154);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A154,	"WNetEnumResourceW");
	create_dword	(x=0XE5A158);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A158,	"WNetUseConnectionW");
	create_dword	(x=0XE5A15C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A15C,	"WNetOpenEnumW");
	create_dword	(x=0XE5A160);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A160,	"WNetCloseEnum");
	create_byte	(0XE5A164);
	make_array	(0XE5A164,	0X4);
	update_extra_cmt		(0XE5A168,	E_PREV + 0,	"; ");
	update_extra_cmt		(0XE5A168,	E_PREV + 1,	"; Imports from SHELL32.dll");
	update_extra_cmt		(0XE5A168,	E_PREV + 2,	"; ");
	create_dword	(x=0XE5A168);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A168,	"ShellExecuteExW");
	create_byte	(0XE5A16C);
	make_array	(0XE5A16C,	0X4);
	update_extra_cmt		(0XE5A170,	E_PREV + 0,	"; ");
	update_extra_cmt		(0XE5A170,	E_PREV + 1,	"; Imports from USER32.dll");
	update_extra_cmt		(0XE5A170,	E_PREV + 2,	"; ");
	create_dword	(x=0XE5A170);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A170,	"GetWindowThreadProcessId");
	create_dword	(x=0XE5A174);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A174,	"GetShellWindow");
	create_byte	(0XE5A178);
	make_array	(0XE5A178,	0X4);
	update_extra_cmt		(0XE5A17C,	E_PREV + 0,	"; ");
	update_extra_cmt		(0XE5A17C,	E_PREV + 1,	"; Imports from WINHTTP.dll");
	update_extra_cmt		(0XE5A17C,	E_PREV + 2,	"; ");
	create_dword	(x=0XE5A17C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A17C,	"WinHttpReceiveResponse");
	create_dword	(x=0XE5A180);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A180,	"WinHttpOpenRequest");
	create_dword	(x=0XE5A184);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A184,	"WinHttpConnect");
	create_dword	(x=0XE5A188);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A188,	"WinHttpCloseHandle");
	create_dword	(x=0XE5A18C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A18C,	"WinHttpOpen");
	create_dword	(x=0XE5A190);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A190,	"WinHttpSendRequest");
	create_byte	(0XE5A194);
	make_array	(0XE5A194,	0X4);
	update_extra_cmt		(0XE5A198,	E_PREV + 0,	"; ");
	update_extra_cmt		(0XE5A198,	E_PREV + 1,	"; Imports from WS2_32.dll");
	update_extra_cmt		(0XE5A198,	E_PREV + 2,	"; ");
	create_dword	(x=0XE5A198);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A198,	"ioctlsocket");
	create_dword	(x=0XE5A19C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A19C,	"getpeername");
	create_dword	(x=0XE5A1A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A1A0,	"ntohl");
	create_dword	(x=0XE5A1A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A1A4,	"select");
	create_dword	(x=0XE5A1A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A1A8,	"WSAGetLastError");
	create_dword	(x=0XE5A1AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A1AC,	"htons");
	create_dword	(x=0XE5A1B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A1B0,	"recv");
	create_dword	(x=0XE5A1B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A1B4,	"socket");
	create_dword	(x=0XE5A1B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A1B8,	"closesocket");
	create_dword	(x=0XE5A1BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A1BC,	"getsockopt");
	create_dword	(x=0XE5A1C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A1C0,	"WSAAddressToStringW");
	create_dword	(x=0XE5A1C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A1C4,	"htonl");
	create_dword	(x=0XE5A1C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A1C8,	"connect");
	create_byte	(0XE5A1CC);
	make_array	(0XE5A1CC,	0X4);
	update_extra_cmt		(0XE5A1D0,	E_PREV + 0,	"; ");
	update_extra_cmt		(0XE5A1D0,	E_PREV + 1,	"; Imports from ole32.dll");
	update_extra_cmt		(0XE5A1D0,	E_PREV + 2,	"; ");
	create_dword	(x=0XE5A1D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A1D0,	"CoGetObject");
	create_dword	(x=0XE5A1D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A1D4,	"CoInitializeEx");
	create_dword	(x=0XE5A1D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE5A1D8,	"CoUninitialize");
	create_byte	(0XE5A1DC);
	make_array	(0XE5A1DC,	0X4);
	MakeStruct	(0XE5A1F0,	"IID");
	set_name	(0XE5A1F0,	"riid");
	create_dword	(0XE5A200);
	create_dword	(0XE5A204);
	create_word	(0XE5A208);
	make_array	(0XE5A208,	0X2);
	create_strlit	(0XE5A20C,	0X6);
	set_name	(0XE5A20C,	"aId");
	make_array	(0XE5A212,	0X2);
	create_strlit	(0XE5A214,	0XE);
	make_array	(0XE5A222,	0X2);
	create_strlit	(0XE5A224,	0XE);
	make_array	(0XE5A232,	0X6);
	create_dword	(0XE5A238);
	create_strlit	(0XE5A398,	0X1A);
	set_name	(0XE5A398,	"aUncE");
	make_array	(0XE5A3B2,	0X2);
	create_strlit	(0XE5A3B4,	0X3);
	set_name	(0XE5A3B4,	"aId_0");
	create_strlit	(0XE5A3B8,	0X6);
	make_array	(0XE5A3BE,	0X2);
	create_word	(0XE5A3C0);
	set_name	(0XE5A3C0,	"pszAgentW");
	make_array	(0XE5A3C2,	0X2);
	create_strlit	(0XE5A3C4,	0XA);
	set_name	(0XE5A3C4,	"pwszVerb");
	make_array	(0XE5A3CE,	0X2);
	create_strlit	(0XE5A3D0,	0XA);
	set_name	(0XE5A3D0,	"aElvl");
	make_array	(0XE5A3DA,	0X2);
	create_byte	(0XE5A3DC);
	create_strlit	(0XE5A3DD,	0X10);
	set_name	(0XE5A3DD,	"a123456789abcde");
	make_array	(0XE5A3ED,	0X3);
	create_word	(0XE5A3F0);
	create_strlit	(0XE5A414,	0X6);
	make_array	(0XE5A41A,	0X2);
	create_strlit	(0XE5A41C,	0X6);
	make_array	(0XE5A422,	0X2);
	create_strlit	(0XE5A424,	0X6);
	make_array	(0XE5A42A,	0X2);
	create_strlit	(0XE5A42C,	0X3);
	create_strlit	(0XE5A430,	0X3);
	set_cmt	(0XE5A434,	"Import Name Table",	0);
	create_dword	(x=0XE5A434);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	set_name	(0XE5A434,	"__IMPORT_DESCRIPTOR_MPR");
	set_cmt	(0XE5A438,	"Time stamp",	0);
	create_dword	(0XE5A438);
	set_cmt	(0XE5A43C,	"Forwarder Chain",	0);
	create_dword	(0XE5A43C);
	set_cmt	(0XE5A440,	"DLL Name",	0);
	create_dword	(x=0XE5A440);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	set_cmt	(0XE5A444,	"Import Address Table",	0);
	create_dword	(x=0XE5A444);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	set_cmt	(0XE5A448,	"Import Name Table",	0);
	create_dword	(x=0XE5A448);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	set_name	(0XE5A448,	"__IMPORT_DESCRIPTOR_WS2_32");
	set_cmt	(0XE5A44C,	"Time stamp",	0);
	create_dword	(0XE5A44C);
	set_cmt	(0XE5A450,	"Forwarder Chain",	0);
	create_dword	(0XE5A450);
	set_cmt	(0XE5A454,	"DLL Name",	0);
	create_dword	(x=0XE5A454);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	set_cmt	(0XE5A458,	"Import Address Table",	0);
	create_dword	(x=0XE5A458);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	set_cmt	(0XE5A45C,	"Import Name Table",	0);
	create_dword	(x=0XE5A45C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	set_name	(0XE5A45C,	"__IMPORT_DESCRIPTOR_IPHLPAPI");
	set_cmt	(0XE5A460,	"Time stamp",	0);
	create_dword	(0XE5A460);
	set_cmt	(0XE5A464,	"Forwarder Chain",	0);
	create_dword	(0XE5A464);
	set_cmt	(0XE5A468,	"DLL Name",	0);
	create_dword	(x=0XE5A468);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	set_cmt	(0XE5A46C,	"Import Address Table",	0);
	create_dword	(x=0XE5A46C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	set_cmt	(0XE5A470,	"Import Name Table",	0);
	create_dword	(x=0XE5A470);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	set_name	(0XE5A470,	"__IMPORT_DESCRIPTOR_WINHTTP");
	set_cmt	(0XE5A474,	"Time stamp",	0);
	create_dword	(0XE5A474);
	set_cmt	(0XE5A478,	"Forwarder Chain",	0);
	create_dword	(0XE5A478);
	set_cmt	(0XE5A47C,	"DLL Name",	0);
	create_dword	(x=0XE5A47C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	set_cmt	(0XE5A480,	"Import Address Table",	0);
	create_dword	(x=0XE5A480);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	set_cmt	(0XE5A484,	"Import Name Table",	0);
	create_dword	(x=0XE5A484);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	set_name	(0XE5A484,	"__IMPORT_DESCRIPTOR_KERNEL32");
	set_cmt	(0XE5A488,	"Time stamp",	0);
	create_dword	(0XE5A488);
	set_cmt	(0XE5A48C,	"Forwarder Chain",	0);
	create_dword	(0XE5A48C);
	set_cmt	(0XE5A490,	"DLL Name",	0);
	create_dword	(x=0XE5A490);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	set_cmt	(0XE5A494,	"Import Address Table",	0);
	create_dword	(x=0XE5A494);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	set_cmt	(0XE5A498,	"Import Name Table",	0);
	create_dword	(x=0XE5A498);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	set_name	(0XE5A498,	"__IMPORT_DESCRIPTOR_USER32");
	set_cmt	(0XE5A49C,	"Time stamp",	0);
	create_dword	(0XE5A49C);
	set_cmt	(0XE5A4A0,	"Forwarder Chain",	0);
	create_dword	(0XE5A4A0);
	set_cmt	(0XE5A4A4,	"DLL Name",	0);
	create_dword	(x=0XE5A4A4);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	set_cmt	(0XE5A4A8,	"Import Address Table",	0);
	create_dword	(x=0XE5A4A8);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	set_cmt	(0XE5A4AC,	"Import Name Table",	0);
	create_dword	(x=0XE5A4AC);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	set_name	(0XE5A4AC,	"__IMPORT_DESCRIPTOR_ADVAPI32");
	set_cmt	(0XE5A4B0,	"Time stamp",	0);
	create_dword	(0XE5A4B0);
	set_cmt	(0XE5A4B4,	"Forwarder Chain",	0);
	create_dword	(0XE5A4B4);
	set_cmt	(0XE5A4B8,	"DLL Name",	0);
	create_dword	(x=0XE5A4B8);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	set_cmt	(0XE5A4BC,	"Import Address Table",	0);
	create_dword	(x=0XE5A4BC);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	set_cmt	(0XE5A4C0,	"Import Name Table",	0);
	create_dword	(x=0XE5A4C0);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	set_name	(0XE5A4C0,	"__IMPORT_DESCRIPTOR_SHELL32");
	set_cmt	(0XE5A4C4,	"Time stamp",	0);
	create_dword	(0XE5A4C4);
	set_cmt	(0XE5A4C8,	"Forwarder Chain",	0);
	create_dword	(0XE5A4C8);
	set_cmt	(0XE5A4CC,	"DLL Name",	0);
	create_dword	(x=0XE5A4CC);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	set_cmt	(0XE5A4D0,	"Import Address Table",	0);
	create_dword	(x=0XE5A4D0);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	set_cmt	(0XE5A4D4,	"Import Name Table",	0);
	create_dword	(x=0XE5A4D4);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	set_name	(0XE5A4D4,	"__IMPORT_DESCRIPTOR_ole32");
	set_cmt	(0XE5A4D8,	"Time stamp",	0);
	create_dword	(0XE5A4D8);
	set_cmt	(0XE5A4DC,	"Forwarder Chain",	0);
	create_dword	(0XE5A4DC);
	set_cmt	(0XE5A4E0,	"DLL Name",	0);
	create_dword	(x=0XE5A4E0);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	set_cmt	(0XE5A4E4,	"Import Address Table",	0);
	create_dword	(x=0XE5A4E4);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	update_extra_cmt		(0XE5A4FC,	E_PREV + 0,	"; ");
	update_extra_cmt		(0XE5A4FC,	E_PREV + 1,	"; Import names for ADVAPI32.dll");
	update_extra_cmt		(0XE5A4FC,	E_PREV + 2,	"; ");
	create_dword	(x=0XE5A4FC);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A500);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A504);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A508);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A50C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A510);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A514);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A518);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A51C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A520);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A524);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A528);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A52C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(0XE5A530);
	update_extra_cmt		(0XE5A534,	E_PREV + 0,	"; ");
	update_extra_cmt		(0XE5A534,	E_PREV + 1,	"; Import names for IPHLPAPI.DLL");
	update_extra_cmt		(0XE5A534,	E_PREV + 2,	"; ");
	create_dword	(x=0XE5A534);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(0XE5A538);
	update_extra_cmt		(0XE5A53C,	E_PREV + 0,	"; ");
	update_extra_cmt		(0XE5A53C,	E_PREV + 1,	"; Import names for KERNEL32.dll");
	update_extra_cmt		(0XE5A53C,	E_PREV + 2,	"; ");
	create_dword	(x=0XE5A53C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A540);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A544);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A548);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A54C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A550);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A554);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A558);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A55C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A560);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A564);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A568);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A56C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A570);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A574);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A578);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A57C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A580);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A584);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A588);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A58C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A590);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A594);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A598);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A59C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A5A0);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A5A4);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A5A8);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A5AC);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A5B0);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A5B4);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A5B8);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A5BC);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A5C0);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A5C4);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A5C8);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A5CC);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A5D0);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A5D4);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A5D8);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A5DC);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A5E0);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A5E4);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A5E8);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A5EC);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A5F0);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A5F4);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A5F8);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A5FC);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A600);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A604);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A608);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A60C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A610);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A614);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A618);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A61C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A620);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A624);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A628);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A62C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A630);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A634);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A638);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A63C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A640);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A644);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A648);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(0XE5A64C);
	update_extra_cmt		(0XE5A650,	E_PREV + 0,	"; ");
	update_extra_cmt		(0XE5A650,	E_PREV + 1,	"; Import names for MPR.dll");
	update_extra_cmt		(0XE5A650,	E_PREV + 2,	"; ");
	create_dword	(x=0XE5A650);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_2(void) {
        auto x;
#define id x

	create_dword	(x=0XE5A654);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A658);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A65C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(0XE5A660);
	update_extra_cmt		(0XE5A664,	E_PREV + 0,	"; ");
	update_extra_cmt		(0XE5A664,	E_PREV + 1,	"; Import names for SHELL32.dll");
	update_extra_cmt		(0XE5A664,	E_PREV + 2,	"; ");
	create_dword	(x=0XE5A664);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(0XE5A668);
	update_extra_cmt		(0XE5A66C,	E_PREV + 0,	"; ");
	update_extra_cmt		(0XE5A66C,	E_PREV + 1,	"; Import names for USER32.dll");
	update_extra_cmt		(0XE5A66C,	E_PREV + 2,	"; ");
	create_dword	(x=0XE5A66C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A670);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(0XE5A674);
	update_extra_cmt		(0XE5A678,	E_PREV + 0,	"; ");
	update_extra_cmt		(0XE5A678,	E_PREV + 1,	"; Import names for WINHTTP.dll");
	update_extra_cmt		(0XE5A678,	E_PREV + 2,	"; ");
	create_dword	(x=0XE5A678);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A67C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A680);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A684);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A688);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A68C);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(0XE5A690);
	update_extra_cmt		(0XE5A694,	E_PREV + 0,	"; ");
	update_extra_cmt		(0XE5A694,	E_PREV + 1,	"; Import names for WS2_32.dll");
	update_extra_cmt		(0XE5A694,	E_PREV + 2,	"; ");
	create_dword	(0XE5A694);
	create_dword	(0XE5A698);
	create_dword	(0XE5A69C);
	create_dword	(0XE5A6A0);
	create_dword	(0XE5A6A4);
	create_dword	(0XE5A6A8);
	create_dword	(0XE5A6AC);
	create_dword	(0XE5A6B0);
	create_dword	(0XE5A6B4);
	create_dword	(0XE5A6B8);
	create_dword	(x=0XE5A6BC);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(0XE5A6C0);
	create_dword	(0XE5A6C4);
	create_dword	(0XE5A6C8);
	update_extra_cmt		(0XE5A6CC,	E_PREV + 0,	"; ");
	update_extra_cmt		(0XE5A6CC,	E_PREV + 1,	"; Import names for ole32.dll");
	update_extra_cmt		(0XE5A6CC,	E_PREV + 2,	"; ");
	create_dword	(x=0XE5A6CC);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A6D0);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(x=0XE5A6D4);
	op_offset		(x,	0,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	op_offset		(x,	128,	0X12,	0XFFFFFFFF,	0XE50000,	0);
	create_dword	(0XE5A6D8);
	create_word	(0XE5A6DC);
	create_strlit	(0XE5A6DE,	0XE);
	create_word	(0XE5A6EC);
	create_strlit	(0XE5A6EE,	0XE);
	create_word	(0XE5A6FC);
	create_strlit	(0XE5A6FE,	0X13);
	create_word	(0XE5A712);
	create_strlit	(0XE5A714,	0X12);
	create_strlit	(0XE5A726,	0X8);
	set_name	(0XE5A726,	"aMprDll");
	create_word	(0XE5A72E);
	create_strlit	(0XE5A730,	0X14);
	create_strlit	(0XE5A744,	0XB);
	set_name	(0XE5A744,	"aWs232Dll");
	create_word	(0XE5A750);
	create_strlit	(0XE5A752,	0XF);
	create_strlit	(0XE5A762,	0XD);
	set_name	(0XE5A762,	"aIphlpapiDll");
	create_word	(0XE5A770);
	create_strlit	(0XE5A772,	0X17);
	create_word	(0XE5A78A);
	create_strlit	(0XE5A78C,	0X13);
	create_word	(0XE5A7A0);
	create_strlit	(0XE5A7A2,	0XF);
	create_word	(0XE5A7B2);
	create_strlit	(0XE5A7B4,	0X13);
	create_word	(0XE5A7C8);
	create_strlit	(0XE5A7CA,	0XC);
	create_word	(0XE5A7D6);
	create_strlit	(0XE5A7D8,	0X13);
	create_strlit	(0XE5A7EC,	0XC);
	set_name	(0XE5A7EC,	"aWinhttpDll");
	create_word	(0XE5A7F8);
	create_strlit	(0XE5A7FA,	0XC);
	create_word	(0XE5A806);
	create_strlit	(0XE5A808,	0XF);
	create_word	(0XE5A818);
	create_strlit	(0XE5A81A,	0X14);
	create_word	(0XE5A82E);
	create_strlit	(0XE5A830,	0X11);
	create_word	(0XE5A842);
	create_strlit	(0XE5A844,	0X9);
	create_word	(0XE5A84E);
	create_strlit	(0XE5A850,	0X11);
	create_word	(0XE5A862);
	create_strlit	(0XE5A864,	0XD);
	create_word	(0XE5A872);
	create_strlit	(0XE5A874,	0X6);
	create_word	(0XE5A87A);
	create_strlit	(0XE5A87C,	0XA);
	create_word	(0XE5A886);
	create_strlit	(0XE5A888,	0X13);
	create_word	(0XE5A89C);
	create_strlit	(0XE5A89E,	0X9);
	create_word	(0XE5A8A8);
	create_strlit	(0XE5A8AA,	0XC);
	create_word	(0XE5A8B6);
	create_strlit	(0XE5A8B8,	0X14);
	create_word	(0XE5A8CC);
	create_strlit	(0XE5A8CE,	0XD);
	create_word	(0XE5A8DC);
	create_strlit	(0XE5A8DE,	0X17);
	create_word	(0XE5A8F6);
	create_strlit	(0XE5A8F8,	0XC);
	create_word	(0XE5A904);
	create_strlit	(0XE5A906,	0X13);
	create_word	(0XE5A91A);
	create_strlit	(0XE5A91C,	0XD);
	create_word	(0XE5A92A);
	create_strlit	(0XE5A92C,	0X26);
	create_word	(0XE5A952);
	create_strlit	(0XE5A954,	0X15);
	create_word	(0XE5A96A);
	create_strlit	(0XE5A96C,	0X15);
	create_word	(0XE5A982);
	create_strlit	(0XE5A984,	0XB);
	create_word	(0XE5A990);
	create_strlit	(0XE5A992,	0X16);
	create_word	(0XE5A9A8);
	create_strlit	(0XE5A9AA,	0XD);
	create_word	(0XE5A9B8);
	create_strlit	(0XE5A9BA,	0XA);
	create_word	(0XE5A9C4);
	create_strlit	(0XE5A9C6,	0X14);
	create_word	(0XE5A9DA);
	create_strlit	(0XE5A9DC,	0XE);
	create_word	(0XE5A9EA);
	create_strlit	(0XE5A9EC,	0XD);
	create_word	(0XE5A9FA);
	create_strlit	(0XE5A9FC,	0XD);
	create_word	(0XE5AA0A);
	create_strlit	(0XE5AA0C,	0XF);
	create_word	(0XE5AA1C);
	create_strlit	(0XE5AA1E,	0X12);
	create_word	(0XE5AA30);
	create_strlit	(0XE5AA32,	0X15);
	create_word	(0XE5AA48);
	create_strlit	(0XE5AA4A,	0XC);
	create_word	(0XE5AA56);
	create_strlit	(0XE5AA58,	0XF);
	create_word	(0XE5AA68);
	create_strlit	(0XE5AA6A,	0X12);
	create_word	(0XE5AA7C);
	create_strlit	(0XE5AA7E,	0X11);
	create_word	(0XE5AA90);
	create_strlit	(0XE5AA92,	0X13);
	create_word	(0XE5AAA6);
	create_strlit	(0XE5AAA8,	0X11);
	create_word	(0XE5AABA);
	create_strlit	(0XE5AABC,	0XB);
	create_word	(0XE5AAC8);
	create_strlit	(0XE5AACA,	0XD);
	create_word	(0XE5AAD8);
	create_strlit	(0XE5AADA,	0XF);
	create_word	(0XE5AAEA);
	create_strlit	(0XE5AAEC,	0X10);
	create_word	(0XE5AAFC);
	create_strlit	(0XE5AAFE,	0X12);
	create_word	(0XE5AB10);
	create_strlit	(0XE5AB12,	0XB);
	create_word	(0XE5AB1E);
	create_strlit	(0XE5AB20,	0XF);
	create_word	(0XE5AB30);
	create_strlit	(0XE5AB32,	0X11);
	create_word	(0XE5AB44);
	create_strlit	(0XE5AB46,	0X19);
	create_word	(0XE5AB60);
	create_strlit	(0XE5AB62,	0XD);
	create_word	(0XE5AB70);
	create_strlit	(0XE5AB72,	0XB);
	create_word	(0XE5AB7E);
	create_strlit	(0XE5AB80,	0XC);
	create_word	(0XE5AB8C);
	create_strlit	(0XE5AB8E,	0X14);
	create_word	(0XE5ABA2);
	create_strlit	(0XE5ABA4,	0X16);
	create_word	(0XE5ABBA);
	create_strlit	(0XE5ABBC,	0X1A);
	create_word	(0XE5ABD6);
	create_strlit	(0XE5ABD8,	0XA);
	create_word	(0XE5ABE2);
	create_strlit	(0XE5ABE4,	0XF);
	create_word	(0XE5ABF4);
	create_strlit	(0XE5ABF6,	0XC);
	create_word	(0XE5AC02);
	create_strlit	(0XE5AC04,	0X9);
	create_word	(0XE5AC0E);
	create_strlit	(0XE5AC10,	0XF);
	create_word	(0XE5AC20);
	create_strlit	(0XE5AC22,	0XA);
	create_word	(0XE5AC2C);
	create_strlit	(0XE5AC2E,	0XE);
	create_word	(0XE5AC3C);
	create_strlit	(0XE5AC3E,	0X15);
	create_word	(0XE5AC54);
	create_strlit	(0XE5AC56,	0X18);
	create_word	(0XE5AC6E);
	create_strlit	(0XE5AC70,	0XD);
	create_word	(0XE5AC7E);
	create_strlit	(0XE5AC80,	0X13);
	create_word	(0XE5AC94);
	create_strlit	(0XE5AC96,	0XD);
	create_word	(0XE5ACA4);
	create_strlit	(0XE5ACA6,	0X11);
	create_word	(0XE5ACB8);
	create_strlit	(0XE5ACBA,	0XE);
	create_word	(0XE5ACC8);
	create_strlit	(0XE5ACCA,	0XA);
	create_strlit	(0XE5ACD4,	0XD);
	set_name	(0XE5ACD4,	"aKernel32Dll");
	create_word	(0XE5ACE2);
	create_strlit	(0XE5ACE4,	0XF);
	create_word	(0XE5ACF4);
	create_strlit	(0XE5ACF6,	0X19);
	create_strlit	(0XE5AD10,	0XB);
	set_name	(0XE5AD10,	"aUser32Dll");
	create_word	(0XE5AD1C);
	create_strlit	(0XE5AD1E,	0X11);
	create_word	(0XE5AD30);
	create_strlit	(0XE5AD32,	0X14);
	create_word	(0XE5AD46);
	create_strlit	(0XE5AD48,	0X9);
	create_word	(0XE5AD52);
	create_strlit	(0XE5AD54,	0X11);
	create_word	(0XE5AD66);
	create_strlit	(0XE5AD68,	0X16);
	create_word	(0XE5AD7E);
	create_strlit	(0XE5AD80,	0X12);
	create_word	(0XE5AD92);
	create_strlit	(0XE5AD94,	0X11);
	create_word	(0XE5ADA6);
	create_strlit	(0XE5ADA8,	0X19);
	create_word	(0XE5ADC2);
	create_strlit	(0XE5ADC4,	0X8);
	create_word	(0XE5ADCC);
	create_strlit	(0XE5ADCE,	0XE);
	create_word	(0XE5ADDC);
	create_strlit	(0XE5ADDE,	0X16);
	create_word	(0XE5ADF4);
	create_strlit	(0XE5ADF6,	0XC);
	create_word	(0XE5AE02);
	create_strlit	(0XE5AE04,	0XF);
	create_strlit	(0XE5AE14,	0XD);
	set_name	(0XE5AE14,	"aAdvapi32Dll");
	create_word	(0XE5AE22);
	create_strlit	(0XE5AE24,	0X10);
	create_strlit	(0XE5AE34,	0XC);
	set_name	(0XE5AE34,	"aShell32Dll");
	create_word	(0XE5AE40);
	create_strlit	(0XE5AE42,	0XF);
	create_word	(0XE5AE52);
	create_strlit	(0XE5AE54,	0XC);
	create_word	(0XE5AE60);
	create_strlit	(0XE5AE62,	0XF);
	create_strlit	(0XE5AE72,	0XA);
	set_name	(0XE5AE72,	"aOle32Dll");
	make_array	(0XE5AE7C,	0X184);
	update_extra_cmt		(0XE5B000,	E_PREV + 0,	"; Section 3. (virtual address 0000B000)");
	update_extra_cmt		(0XE5B000,	E_PREV + 1,	"; Virtual size                  : 000026B9 (   9913.)");
	update_extra_cmt		(0XE5B000,	E_PREV + 2,	"; Section size in file          : 00000600 (   1536.)");
	update_extra_cmt		(0XE5B000,	E_PREV + 3,	"; Offset to raw data for section: 00009A00");
	update_extra_cmt		(0XE5B000,	E_PREV + 4,	"; Flags C0000040: Data Readable Writable");
	update_extra_cmt		(0XE5B000,	E_PREV + 5,	"; Alignment     : default");
	create_dword	(0XE5B000);
	create_dword	(x=0XE5B400);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XE5B404);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XE5B408);
	create_dword	(0XE5B40C);
	create_byte	(0XE5B410);
	make_array	(0XE5B410,	0X20);
	create_dword	(0XE5B430);
	make_array	(0XE5B434,	0XC);
	create_dword	(0XE5B440);
	make_array	(0XE5B444,	0X4);
	create_byte	(0XE5B448);
	create_dword	(0XE5B548);
	create_dword	(0XE5B948);
	create_dword	(0XE5BD48);
	create_dword	(0XE5BD70);
	create_dword	(0XE5C170);
	create_dword	(0XE5C570);
	create_dword	(0XE5C970);
	create_dword	(0XE5CD70);
	create_dword	(0XE5D170);
	create_byte	(0XE5D570);
	create_byte	(0XE5D5D3);
	create_dword	(0XE5D670);
	create_dword	(0XE5D674);
	make_array	(0XE5D678,	0X8);
	create_dword	(0XE5D680);
	create_dword	(0XE5D684);
	create_dword	(0XE5D688);
	create_dword	(0XE5D68C);
	create_dword	(0XE5D690);
	create_dword	(0XE5D694);
	create_dword	(0XE5D698);
	create_dword	(0XE5D69C);
	MakeStruct	(0XE5D6A0,	"_RTL_CRITICAL_SECTION");
	set_name	(0XE5D6A0,	"CriticalSection");
	create_byte	(0XE5D6B8);
	make_array	(0XE5D6B9,	0X947);
	update_extra_cmt		(0XE5F000,	E_PREV + 0,	"; Section 5. (virtual address 0000F000)");
	update_extra_cmt		(0XE5F000,	E_PREV + 1,	"; Virtual size                  : 000036B8 (  14008.)");
	update_extra_cmt		(0XE5F000,	E_PREV + 2,	"; Section size in file          : 00003800 (  14336.)");
	update_extra_cmt		(0XE5F000,	E_PREV + 3,	"; Offset to raw data for section: 0000A600");
	update_extra_cmt		(0XE5F000,	E_PREV + 4,	"; Flags C0000040: Data Readable Writable");
	update_extra_cmt		(0XE5F000,	E_PREV + 5,	"; Alignment     : default");
}

static Functions_0(void) {

	add_func    (0XE51000,0XE51236);
	set_func_flags(0XE51000,0x5410);
	set_frame_size(0XE51000, 0X48, 4, 0);
	define_local_var(0XE51000, 0XE51236, "[bp-0X4]", "lpMem");
	add_func    (0XE51236,0XE51567);
	set_func_flags(0XE51236,0x5410);
	set_frame_size(0XE51236, 0X48, 4, 0);
	define_local_var(0XE51236, 0XE51567, "[bp-0X34]", "phkResult");
	define_local_var(0XE51236, 0XE51567, "[bp-0X28]", "lpSubKey");
	define_local_var(0XE51236, 0XE51567, "[bp-0X14]", "lpMem");
	define_local_var(0XE51236, 0XE51567, "[bp-0XC]", "lpValueName");
	define_local_var(0XE51236, 0XE51567, "[bp-0X4]", "lpExistingFileName");
	add_func    (0XE51567,0XE515A6);
	set_func_flags(0XE51567,0x5400);
	set_frame_size(0XE51567, 0, 0, 0);
	add_func    (0XE515A6,0XE51706);
	set_func_flags(0XE515A6,0x5410);
	set_frame_size(0XE515A6, 0X1C, 4, 0);
	define_local_var(0XE515A6, 0XE51706, "[bp-0X1C]", "dwBytes");
	define_local_var(0XE515A6, 0XE51706, "[bp-0X4]", "lpMem");
	add_func    (0XE51706,0XE51870);
	set_func_flags(0XE51706,0x5410);
	SetType(0XE51706, "int __cdecl sub_E51706(u_long hostlong);");
	set_frame_size(0XE51706, 0XDC, 4, 0);
	define_local_var(0XE51706, 0XE51870, "[bp-0XC]", "lpMem");
	define_local_var(0XE51706, 0XE51870, "[bp+0X8]", "hostlong");
	add_func    (0XE51870,0XE51894);
	set_func_flags(0XE51870,0x5400);
	set_frame_size(0XE51870, 0, 0, 0);
	add_func    (0XE51894,0XE51A76);
	set_func_flags(0XE51894,0x5410);
	set_frame_size(0XE51894, 0X58, 4, 0);
	define_local_var(0XE51894, 0XE51A76, "[bp-0XC]", "lpMem");
	add_func    (0XE51A76,0XE51BBF);
	set_func_flags(0XE51A76,0x5c10);
	SetType(0XE51A76, "int __stdcall sub_E51A76(LPVOID lpMem);");
	set_frame_size(0XE51A76, 0X28, 4, 0X4);
	define_local_var(0XE51A76, 0XE51BBF, "[bp-0X18]", "hostlong");
	define_local_var(0XE51A76, 0XE51BBF, "[bp+0X8]", "lpMem");
	add_func    (0XE51BBF,0XE51CC5);
	set_func_flags(0XE51BBF,0x5c10);
	SetType(0XE51BBF, "int __stdcall sub_E51BBF(LPVOID lpMem);");
	set_frame_size(0XE51BBF, 0X18, 4, 0X4);
	define_local_var(0XE51BBF, 0XE51CC5, "[bp-0X4]", "hostlong");
	define_local_var(0XE51BBF, 0XE51CC5, "[bp+0X8]", "lpMem");
	add_func    (0XE51CC5,0XE51E10);
	set_func_flags(0XE51CC5,0x5c10);
	SetType(0XE51CC5, "int __stdcall sub_E51CC5(LPVOID lpMem);");
	set_frame_size(0XE51CC5, 0X30, 4, 0X4);
	define_local_var(0XE51CC5, 0XE51E10, "[bp-0X14]", "hostlong");
	define_local_var(0XE51CC5, 0XE51E10, "[bp+0X8]", "lpMem");
	add_func    (0XE51E10,0XE52084);
	set_func_flags(0XE51E10,0x5c10);
	SetType(0XE51E10, "int __cdecl sub_E51E10(DWORD dwScope, LPNETRESOURCEW lpNetResource, int, int, int, int);");
	set_frame_size(0XE51E10, 0X24, 4, 0);
	define_local_var(0XE51E10, 0XE52084, "[bp-0X24]", "dwBytes");
	define_local_var(0XE51E10, 0XE52084, "[bp-0X10]", "cCount");
	define_local_var(0XE51E10, 0XE52084, "[bp-0XC]", "lpMem");
	define_local_var(0XE51E10, 0XE52084, "[bp-0X8]", "hEnum");
	define_local_var(0XE51E10, 0XE52084, "[bp-0X4]", "BufferSize");
	define_local_var(0XE51E10, 0XE52084, "[bp+0X8]", "dwScope");
	define_local_var(0XE51E10, 0XE52084, "[bp+0XC]", "lpNetResource");
	add_func    (0XE52084,0XE52161);
	set_func_flags(0XE52084,0x5c10);
	set_frame_size(0XE52084, 0X258, 4, 0);
	define_local_var(0XE52084, 0XE52161, "[bp-0X248]", "dwAddressStringLength");
	define_local_var(0XE52084, 0XE52161, "[bp-0X244]", "saAddress");
	define_local_var(0XE52084, 0XE52161, "[bp-0X234]", "Result");
	define_local_var(0XE52084, 0XE52161, "[bp-0X230]", "NetResource");
	define_local_var(0XE52084, 0XE52161, "[bp-0X20C]", "szAddressString");
	add_func    (0XE52161,0XE522EE);
	set_func_flags(0XE52161,0x5410);
	SetType(0XE52161, "int __stdcall sub_E52161(LPVOID lpThreadParameter);");
	set_frame_size(0XE52161, 0X24, 4, 0X4);
	define_local_var(0XE52161, 0XE522EE, "[bp-0X8]", "nSize");
	define_local_var(0XE52161, 0XE522EE, "[bp-0X4]", "lpMem");
	define_local_var(0XE52161, 0XE522EE, "[bp+0X8]", "lpThreadParameter");
	add_func    (0XE522EE,0XE5239A);
	set_func_flags(0XE522EE,0x5410);
	SetType(0XE522EE, "int __stdcall sub_E522EE(LPVOID lpThreadParameter);");
	set_frame_size(0XE522EE, 0X18, 4, 0X4);
	define_local_var(0XE522EE, 0XE5239A, "[bp-0X18]", "dwMilliseconds");
	define_local_var(0XE522EE, 0XE5239A, "[bp-0X4]", "lpMem");
	define_local_var(0XE522EE, 0XE5239A, "[bp+0X8]", "lpThreadParameter");
	add_func    (0XE5239A,0XE5242F);
	set_func_flags(0XE5239A,0x5410);
	SetType(0XE5239A, "DWORD __stdcall sub_E5239A(LPVOID lpThreadParameter);");
	set_frame_size(0XE5239A, 0X10, 4, 0X4);
	define_local_var(0XE5239A, 0XE5242F, "[bp+0X8]", "lpThreadParameter");
	add_func    (0XE5242F,0XE524C2);
	set_func_flags(0XE5242F,0x5410);
	set_frame_size(0XE5242F, 0X18, 4, 0);
	define_local_var(0XE5242F, 0XE524C2, "[bp-0XC]", "ExitCode");
	define_local_var(0XE5242F, 0XE524C2, "[bp-0X8]", "hHandle");
	add_func    (0XE524C2,0XE52504);
	set_func_flags(0XE524C2,0x5410);
	SetType(0XE524C2, "int __cdecl sub_E524C2(LPTHREAD_START_ROUTINE lpStartAddress, int, int, int, int, int);");
	set_frame_size(0XE524C2, 0, 4, 0);
	define_local_var(0XE524C2, 0XE52504, "[bp+0X8]", "lpStartAddress");
	add_func    (0XE52504,0XE525F3);
	set_func_flags(0XE52504,0x5410);
	set_frame_size(0XE52504, 0X1C, 4, 0);
	define_local_var(0XE52504, 0XE525F3, "[bp-0X10]", "lpMem");
	add_func    (0XE525F3,0XE5271B);
	set_func_flags(0XE525F3,0x5410);
	set_frame_size(0XE525F3, 0X4, 4, 0X4);
	add_func    (0XE5271B,0XE52876);
	set_func_flags(0XE5271B,0x5410);
	set_frame_size(0XE5271B, 0X28, 4, 0);
	define_local_var(0XE5271B, 0XE52876, "[bp-0X14]", "lpMem");
	define_local_var(0XE5271B, 0XE52876, "[bp-0X10]", "NumberOfBytesRead");
	define_local_var(0XE5271B, 0XE52876, "[bp-0XC]", "hFile");
	define_local_var(0XE5271B, 0XE52876, "[bp-0X8]", "lpWideCharStr");
	define_local_var(0XE5271B, 0XE52876, "[bp-0X4]", "lpBuffer");
	add_func    (0XE52876,0XE528CA);
	set_func_flags(0XE52876,0x5400);
	set_frame_size(0XE52876, 0, 0, 0);
	add_func    (0XE528CA,0XE52946);
	set_func_flags(0XE528CA,0x5410);
	SetType(0XE528CA, "int __cdecl mw_create_ID_E528CA(LPCRITICAL_SECTION lpCriticalSection);");
	set_frame_size(0XE528CA, 0X3C, 4, 0);
	define_local_var(0XE528CA, 0XE52946, "[bp-0X8]", "lpMem");
	define_local_var(0XE528CA, 0XE52946, "[bp+0X8]", "lpCriticalSection");
	add_func    (0XE52946,0XE529F5);
	set_func_flags(0XE52946,0x5410);
	set_frame_size(0XE52946, 0X38, 4, 0);
	define_local_var(0XE52946, 0XE529F5, "[bp-0XC]", "pwszObjectName");
	define_local_var(0XE52946, 0XE529F5, "[bp-0X8]", "pswzServerName");
	define_local_var(0XE52946, 0XE529F5, "[bp-0X4]", "lpMem");
	add_func    (0XE529F5,0XE52FA7);
	set_func_flags(0XE529F5,0x5c10);
	set_frame_size(0XE529F5, 0X100, 4, 0);
	define_local_var(0XE529F5, 0XE52FA7, "[bp-0XE8]", "lpMem");
	define_local_var(0XE529F5, 0XE52FA7, "[bp-0XE4]", "hMutex");
	define_local_var(0XE529F5, 0XE52FA7, "[bp-0XE0]", "hHandle");
	define_local_var(0XE529F5, 0XE52FA7, "[bp-0XDC]", "Parameter");
	define_local_var(0XE529F5, 0XE52FA7, "[bp-0XA0]", "LCData");
	define_local_var(0XE529F5, 0XE52FA7, "[bp-0X84]", "hObject");
	define_local_var(0XE529F5, 0XE52FA7, "[bp-0X80]", "Handles");
	add_func    (0XE52FA7,0XE52FB4);
	set_func_flags(0XE52FA7,0x1401);
	add_func    (0XE52FB5,0XE52FC8);
	set_func_flags(0XE52FB5,0x5410);
	set_frame_size(0XE52FB5, 0, 4, 0);
	add_func    (0XE52FC8,0XE53020);
	set_func_flags(0XE52FC8,0x5410);
	set_frame_size(0XE52FC8, 0X8, 4, 0);
	add_func    (0XE53020,0XE530AF);
	set_func_flags(0XE53020,0x5410);
	set_frame_size(0XE53020, 0X8, 4, 0);
	add_func    (0XE530AF,0XE5313F);
	set_func_flags(0XE530AF,0x5410);
	set_frame_size(0XE530AF, 0X4, 4, 0);
	add_func    (0XE5313F,0XE531C3);
	set_func_flags(0XE5313F,0x5400);
	set_frame_size(0XE5313F, 0, 0, 0);
	add_func    (0XE531C3,0XE531E1);
	set_func_flags(0XE531C3,0x5400);
	set_frame_size(0XE531C3, 0X8, 0, 0);
	add_func    (0XE531E1,0XE53246);
	set_func_flags(0XE531E1,0x5410);
	set_frame_size(0XE531E1, 0X4, 4, 0);
	add_func    (0XE53246,0XE532A6);
	set_func_flags(0XE53246,0x5410);
	set_frame_size(0XE53246, 0X4, 4, 0);
	add_func    (0XE532A6,0XE532FF);
	set_func_flags(0XE532A6,0x5400);
	set_frame_size(0XE532A6, 0X4, 0, 0);
	add_func    (0XE532FF,0XE533C5);
	set_func_flags(0XE532FF,0x5400);
	set_frame_size(0XE532FF, 0X8, 0, 0);
	add_func    (0XE533C5,0XE533F3);
	set_func_flags(0XE533C5,0x5400);
	set_frame_size(0XE533C5, 0X8, 0, 0);
	add_func    (0XE533F3,0XE5349E);
	set_func_flags(0XE533F3,0x5410);
	set_frame_size(0XE533F3, 0X10, 4, 0);
	add_func    (0XE5349E,0XE534EB);
	set_func_flags(0XE5349E,0x5410);
	set_frame_size(0XE5349E, 0X10, 4, 0);
	add_func    (0XE534EB,0XE53585);
	set_func_flags(0XE534EB,0x5410);
	set_frame_size(0XE534EB, 0X14, 4, 0);
	add_func    (0XE53585,0XE535A4);
	set_func_flags(0XE53585,0x5400);
	set_frame_size(0XE53585, 0, 0, 0);
	add_func    (0XE535A4,0XE535D2);
	set_func_flags(0XE535A4,0x5410);
	set_frame_size(0XE535A4, 0, 4, 0);
	add_func    (0XE535D2,0XE53698);
	set_func_flags(0XE535D2,0x5410);
	set_frame_size(0XE535D2, 0XC, 4, 0);
	add_func    (0XE53698,0XE53711);
	set_func_flags(0XE53698,0x5410);
	set_frame_size(0XE53698, 0X8, 4, 0);
	add_func    (0XE53711,0XE53772);
	set_func_flags(0XE53711,0x5410);
	set_frame_size(0XE53711, 0XC, 4, 0);
	add_func    (0XE53772,0XE53848);
	set_func_flags(0XE53772,0x5410);
	set_frame_size(0XE53772, 0XC, 4, 0);
	add_func    (0XE53848,0XE538DA);
	set_func_flags(0XE53848,0x5410);
	SetType(0XE53848, "int __cdecl sub_E53848(void *lpBuffer);");
	set_frame_size(0XE53848, 0X14, 4, 0);
	define_local_var(0XE53848, 0XE538DA, "[bp-0XC]", "NumberOfCharsWritten");
	define_local_var(0XE53848, 0XE538DA, "[bp-0X8]", "cchWideChar");
	define_local_var(0XE53848, 0XE538DA, "[bp+0X8]", "lpBuffer");
	add_func    (0XE538DA,0XE53940);
	set_func_flags(0XE538DA,0x5410);
	SetType(0XE538DA, "int __usercall sub_E538DA@<eax>(LPCRITICAL_SECTION lpCriticalSection@<ecx>, int);");
	set_frame_size(0XE538DA, 0XC, 4, 0);
	add_func    (0XE53940,0XE53955);
	set_func_flags(0XE53940,0x5410);
	SetType(0XE53940, "int __cdecl sub_E53940(LPCRITICAL_SECTION lpCriticalSection, char);");
	set_frame_size(0XE53940, 0, 4, 0);
	define_local_var(0XE53940, 0XE53955, "[bp+0X8]", "lpCriticalSection");
	add_func    (0XE53955,0XE53969);
	set_func_flags(0XE53955,0x5410);
	SetType(0XE53955, "int __cdecl sub_E53955(LPCRITICAL_SECTION lpCriticalSection, int, char);");
	set_frame_size(0XE53955, 0, 4, 0);
	define_local_var(0XE53955, 0XE53969, "[bp+0X8]", "lpCriticalSection");
	add_func    (0XE53969,0XE539B7);
	set_func_flags(0XE53969,0x5410);
	set_frame_size(0XE53969, 0XC, 4, 0);
	define_local_var(0XE53969, 0XE539B7, "[bp-0X4]", "NumberOfBytesWritten");
	define_local_var(0XE53969, 0XE539B7, "[bp+0X8]", "lpFileName");
	define_local_var(0XE53969, 0XE539B7, "[bp+0XC]", "lpBuffer");
	add_func    (0XE539B7,0XE539DA);
	set_func_flags(0XE539B7,0x5410);
	SetType(0XE539B7, "int __cdecl sub_E539B7(LPVOID lpMem, int);");
	set_frame_size(0XE539B7, 0, 4, 0);
	define_local_var(0XE539B7, 0XE539DA, "[bp+0X8]", "lpMem");
	add_func    (0XE539DA,0XE539F9);
	set_func_flags(0XE539DA,0x5410);
	SetType(0XE539DA, "int __cdecl mw_free_E539DA(LPVOID lpMem);");
	set_frame_size(0XE539DA, 0, 4, 0);
	define_local_var(0XE539DA, 0XE539F9, "[bp+0X8]", "lpMem");
	add_func    (0XE539F9,0XE53A18);
	set_func_flags(0XE539F9,0x5410);
	SetType(0XE539F9, "int __cdecl sub_E539F9(LPVOID lpMem);");
	set_frame_size(0XE539F9, 0, 4, 0);
	define_local_var(0XE539F9, 0XE53A18, "[bp+0X8]", "lpMem");
	add_func    (0XE53A18,0XE53A93);
	set_func_flags(0XE53A18,0x5410);
	SetType(0XE53A18, "int __cdecl sub_E53A18(HKEY hKey, LPCWSTR lpSubKey, LPCWSTR lpValueName, LPBYTE lpData);");
	set_frame_size(0XE53A18, 0X18, 4, 0);
	define_local_var(0XE53A18, 0XE53A93, "[bp-0X10]", "Type");
	define_local_var(0XE53A18, 0XE53A93, "[bp-0XC]", "phkResult");
	define_local_var(0XE53A18, 0XE53A93, "[bp-0X8]", "cbData");
	define_local_var(0XE53A18, 0XE53A93, "[bp+0X8]", "hKey");
	define_local_var(0XE53A18, 0XE53A93, "[bp+0XC]", "lpSubKey");
	define_local_var(0XE53A18, 0XE53A93, "[bp+0X10]", "lpValueName");
	define_local_var(0XE53A18, 0XE53A93, "[bp+0X14]", "lpData");
	add_func    (0XE53A93,0XE53ABE);
	set_func_flags(0XE53A93,0x5410);
	SetType(0XE53A93, "int __cdecl sub_E53A93(LPCWSTR lpValueName, BYTE *lpData);");
	set_frame_size(0XE53A93, 0X4, 4, 0);
	define_local_var(0XE53A93, 0XE53ABE, "[bp+0X8]", "lpValueName");
	define_local_var(0XE53A93, 0XE53ABE, "[bp+0XC]", "lpData");
	add_func    (0XE53ABE,0XE53B33);
	set_func_flags(0XE53ABE,0x5410);
	SetType(0XE53ABE, "int __cdecl sub_E53ABE(int, int, LPBYTE lpData, int, LPCWSTR lpSubKey);");
	set_frame_size(0XE53ABE, 0XC, 4, 0);
	define_local_var(0XE53ABE, 0XE53B33, "[bp+0X10]", "lpData");
	define_local_var(0XE53ABE, 0XE53B33, "[bp+0X18]", "lpSubKey");
	add_func    (0XE53B33,0XE53BB3);
	set_func_flags(0XE53B33,0x5410);
	SetType(0XE53B33, "int __cdecl sub_E53B33(LPWSTR lpDst);");
	set_frame_size(0XE53B33, 0X14, 4, 0);
	define_local_var(0XE53B33, 0XE53BB3, "[bp-0X4]", "lpSrc");
	define_local_var(0XE53B33, 0XE53BB3, "[bp+0X8]", "lpDst");
	add_func    (0XE53BB3,0XE53C29);
	set_func_flags(0XE53BB3,0x5410);
	set_frame_size(0XE53BB3, 0X14, 4, 0);
	define_local_var(0XE53BB3, 0XE53C29, "[bp-0X4]", "lpMem");
	add_func    (0XE53C29,0XE53C7A);
	set_func_flags(0XE53C29,0x5410);
	set_frame_size(0XE53C29, 0X28, 4, 0);
	add_func    (0XE53C7A,0XE53CBD);
	set_func_flags(0XE53C7A,0x5410);
	set_frame_size(0XE53C7A, 0X10, 4, 0);
	define_local_var(0XE53C7A, 0XE53CBD, "[bp-0X4]", "VolumeSerialNumber");
	add_func    (0XE53CBD,0XE53D4B);
	set_func_flags(0XE53CBD,0x5410);
	SetType(0XE53CBD, "int __cdecl sub_E53CBD(LPCWSTR pswzServerName, LPCWSTR pwszObjectName, LPVOID lpOptional, DWORD dwOptionalLength);");
	set_frame_size(0XE53CBD, 0X10, 4, 0);
	define_local_var(0XE53CBD, 0XE53D4B, "[bp-0X8]", "hInternet");
	define_local_var(0XE53CBD, 0XE53D4B, "[bp+0X8]", "pswzServerName");
	define_local_var(0XE53CBD, 0XE53D4B, "[bp+0XC]", "pwszObjectName");
	define_local_var(0XE53CBD, 0XE53D4B, "[bp+0X10]", "lpOptional");
	define_local_var(0XE53CBD, 0XE53D4B, "[bp+0X14]", "dwOptionalLength");
	add_func    (0XE53D4B,0XE53DC0);
	set_func_flags(0XE53D4B,0x5410);
	set_frame_size(0XE53D4B, 0X18, 4, 0);
	add_func    (0XE53DC0,0XE53E39);
	set_func_flags(0XE53DC0,0x5410);
	SetType(0XE53DC0, "int __cdecl sub_E53DC0(LPCWSTR lpName);");
	set_frame_size(0XE53DC0, 0X2C, 4, 0);
	define_local_var(0XE53DC0, 0XE53E39, "[bp-0X20]", "NewState");
	define_local_var(0XE53DC0, 0XE53E39, "[bp-0X10]", "Luid");
	define_local_var(0XE53DC0, 0XE53E39, "[bp-0X8]", "TokenHandle");
	define_local_var(0XE53DC0, 0XE53E39, "[bp+0X8]", "lpName");
	add_func    (0XE53E39,0XE53E9E);
	set_func_flags(0XE53E39,0x5410);
	set_frame_size(0XE53E39, 0X10, 4, 0);
	define_local_var(0XE53E39, 0XE53E9E, "[bp-0XC]", "TokenInformation");
	define_local_var(0XE53E39, 0XE53E9E, "[bp-0X8]", "ReturnLength");
	define_local_var(0XE53E39, 0XE53E9E, "[bp-0X4]", "TokenHandle");
	add_func    (0XE53E9E,0XE53EE1);
	set_func_flags(0XE53E9E,0x5410);
	set_frame_size(0XE53E9E, 0X3C, 4, 0);
	define_local_var(0XE53E9E, 0XE53EE1, "[bp-0X3C]", "pExecInfo");
	add_func    (0XE53EE1,0XE5411D);
	set_func_flags(0XE53EE1,0x5410);
	set_frame_size(0XE53EE1, 0X4C4, 4, 0);
	define_local_var(0XE53EE1, 0XE5411D, "[bp-0X4B4]", "Filename");
	define_local_var(0XE53EE1, 0XE5411D, "[bp-0X5C]", "lpBaseAddress");
	define_local_var(0XE53EE1, 0XE5411D, "[bp-0X48]", "Buffer");
	define_local_var(0XE53EE1, 0XE5411D, "[bp-0X20]", "BaseAddress");
	define_local_var(0XE53EE1, 0XE5411D, "[bp-0X14]", "lpProcName");
	define_local_var(0XE53EE1, 0XE5411D, "[bp-0X8]", "hProcess");
	add_func    (0XE5411D,0XE54281);
	set_func_flags(0XE5411D,0x5410);
	set_frame_size(0XE5411D, 0X4C, 4, 0);
	define_local_var(0XE5411D, 0XE54281, "[bp-0X40]", "pBindOptions");
	define_local_var(0XE5411D, 0XE54281, "[bp-0X14]", "pszName");
	define_local_var(0XE5411D, 0XE54281, "[bp-0X4]", "ppv");
	add_func    (0XE54281,0XE542BD);
	set_func_flags(0XE54281,0x5410);
	set_frame_size(0XE54281, 0X8, 4, 0);
	add_func    (0XE542BD,0XE54325);
	set_func_flags(0XE542BD,0x5410);
	set_frame_size(0XE542BD, 0X218, 4, 0);
	add_func    (0XE54325,0XE543CC);
	set_func_flags(0XE54325,0x5410);
	set_frame_size(0XE54325, 0X20, 4, 0);
	add_func    (0XE543CC,0XE54428);
	set_func_flags(0XE543CC,0x5410);
	set_frame_size(0XE543CC, 0X18, 4, 0);
	define_local_var(0XE543CC, 0XE54428, "[bp-0X4]", "Data");
	add_func    (0XE54428,0XE5454B);
	set_func_flags(0XE54428,0x5410);
	set_frame_size(0XE54428, 0X440, 4, 0);
	define_local_var(0XE54428, 0XE5454B, "[bp-0X438]", "Name");
	define_local_var(0XE54428, 0XE5454B, "[bp-0X22C]", "ReferencedDomainName");
	define_local_var(0XE54428, 0XE5454B, "[bp-0X20]", "peUse");
	define_local_var(0XE54428, 0XE5454B, "[bp-0X1C]", "TokenHandle");
	define_local_var(0XE54428, 0XE5454B, "[bp-0X10]", "pIdentifierAuthority");
	define_local_var(0XE54428, 0XE5454B, "[bp-0X8]", "pSid");
	define_local_var(0XE54428, 0XE5454B, "[bp-0X4]", "TokenInformationLength");
	add_func    (0XE5454B,0XE5489E);
	set_func_flags(0XE5454B,0x5c10);
	SetType(0XE5454B, "DWORD __stdcall StartAddress(LPVOID lpThreadParameter);");
	set_frame_size(0XE5454B, 0X298, 4, 0X4);
	define_local_var(0XE5454B, 0XE5489E, "[bp-0X284]", "lpProcName");
	define_local_var(0XE5454B, 0XE5489E, "[bp-0X278]", "nNumberOfBytesToWrite");
	define_local_var(0XE5454B, 0XE5489E, "[bp-0X270]", "NumberOfBytesWritten");
	define_local_var(0XE5454B, 0XE5489E, "[bp-0X26C]", "lpBuffer");
	define_local_var(0XE5454B, 0XE5489E, "[bp-0X260]", "lpMem");
	define_local_var(0XE5454B, 0XE5489E, "[bp-0X258]", "lpModuleName");
	define_local_var(0XE5454B, 0XE5489E, "[bp-0X230]", "Data");
	define_local_var(0XE5454B, 0XE5489E, "[bp-0X210]", "FileName");
	define_local_var(0XE5454B, 0XE5489E, "[bp+0X8]", "lpThreadParameter");
	add_func    (0XE5489E,0XE54944);
	set_func_flags(0XE5489E,0x5410);
	set_frame_size(0XE5489E, 0X70, 4, 0);
	define_local_var(0XE5489E, 0XE54944, "[bp-0X60]", "StartupInfo");
	define_local_var(0XE5489E, 0XE54944, "[bp-0X18]", "ProcessInformation");
	add_func    (0XE54944,0XE549D3);
	set_func_flags(0XE54944,0x5410);
	set_frame_size(0XE54944, 0X18, 4, 0);
	add_func    (0XE549D3,0XE54B85);
	set_func_flags(0XE549D3,0x5410);
	set_frame_size(0XE549D3, 0XA0, 4, 0);
	define_local_var(0XE549D3, 0XE54B85, "[bp-0X44]", "TokenAttributes");
	define_local_var(0XE549D3, 0XE54B85, "[bp-0X20]", "lpModuleName");
	define_local_var(0XE549D3, 0XE54B85, "[bp-0X1C]", "dwProcessId");
	define_local_var(0XE549D3, 0XE54B85, "[bp-0X10]", "hObject");
	define_local_var(0XE549D3, 0XE54B85, "[bp-0XC]", "TokenHandle");
	define_local_var(0XE549D3, 0XE54B85, "[bp-0X8]", "phNewToken");
	define_local_var(0XE549D3, 0XE54B85, "[bp-0X4]", "lpFilename");
	add_func    (0XE54B85,0XE54D68);
	set_func_flags(0XE54B85,0x5c10);
	SetType(0XE54B85, "DWORD __stdcall sub_E54B85(LPVOID lpThreadParameter);");
	set_frame_size(0XE54B85, 0X90, 4, 0X4);
	define_local_var(0XE54B85, 0XE54D68, "[bp-0X84]", "hWritePipe");
	define_local_var(0XE54B85, 0XE54D68, "[bp-0X80]", "hReadPipe");
	define_local_var(0XE54B85, 0XE54D68, "[bp-0X7C]", "hObject");
	define_local_var(0XE54B85, 0XE54D68, "[bp-0X70]", "lpApplicationName");
	define_local_var(0XE54B85, 0XE54D68, "[bp-0X68]", "NumberOfBytesWritten");
	define_local_var(0XE54B85, 0XE54D68, "[bp-0X64]", "PipeAttributes");
	define_local_var(0XE54B85, 0XE54D68, "[bp-0X58]", "ProcessInformation");
	define_local_var(0XE54B85, 0XE54D68, "[bp-0X48]", "StartupInfo");
	define_local_var(0XE54B85, 0XE54D68, "[bp+0X8]", "lpBuffer");
	add_func    (0XE54D68,0XE54DBE);
	set_func_flags(0XE54D68,0x5410);
	set_frame_size(0XE54D68, 0X8, 4, 0);
	define_local_var(0XE54D68, 0XE54DBE, "[bp-0X4]", "ExitCode");
	add_func    (0XE54DBE,0XE54DEE);
	set_func_flags(0XE54DBE,0x5410);
	set_frame_size(0XE54DBE, 0XC, 4, 0);
	add_func    (0XE54DEE,0XE54EA5);
	set_func_flags(0XE54DEE,0x5410);
	set_frame_size(0XE54DEE, 0X238, 4, 0);
	define_local_var(0XE54DEE, 0XE54EA5, "[bp-0X234]", "pe");
	define_local_var(0XE54DEE, 0XE54EA5, "[bp-0X8]", "hSnapshot");
	add_func    (0XE54EA5,0XE54F7A);
	set_func_flags(0XE54EA5,0x5410);
	SetType(0XE54EA5, "int __cdecl sub_E54EA5(LPVOID);");
	set_frame_size(0XE54EA5, 0X54, 4, 0);
	define_local_var(0XE54EA5, 0XE54F7A, "[bp-0XC]", "lpMem");
	add_func    (0XE54F7A,0XE54FA9);
	set_func_flags(0XE54F7A,0x5410);
	SetType(0XE54F7A, "int __cdecl sub_E54F7A(LPVOID);");
	set_frame_size(0XE54F7A, 0XC, 4, 0);
	define_local_var(0XE54F7A, 0XE54FA9, "[bp-0X4]", "hMutex");
	add_func    (0XE54FA9,0XE55067);
	set_func_flags(0XE54FA9,0x5410);
	set_frame_size(0XE54FA9, 0X234, 4, 0);
	define_local_var(0XE54FA9, 0XE55067, "[bp-0X224]", "exceptfds");
	define_local_var(0XE54FA9, 0XE55067, "[bp-0X11C]", "readfds");
	define_local_var(0XE54FA9, 0XE55067, "[bp-0X14]", "timeout");
	add_func    (0XE55067,0XE55230);
	set_func_flags(0XE55067,0x5410);
	SetType(0XE55067, "int __cdecl sub_E55067(u_long hostlong, int);");
	set_frame_size(0XE55067, 0X58, 4, 0);
	define_local_var(0XE55067, 0XE55230, "[bp-0X38]", "name");
	define_local_var(0XE55067, 0XE55230, "[bp-0X28]", "namelen");
	define_local_var(0XE55067, 0XE55230, "[bp-0X24]", "optlen");
	define_local_var(0XE55067, 0XE55230, "[bp-0X20]", "argp");
	define_local_var(0XE55067, 0XE55230, "[bp-0X10]", "optval");
	define_local_var(0XE55067, 0XE55230, "[bp-0XC]", "lpMem");
	define_local_var(0XE55067, 0XE55230, "[bp-0X1]", "buf");
	define_local_var(0XE55067, 0XE55230, "[bp+0X8]", "hostlong");
	add_func    (0XE55230,0XE552DE);
	set_func_flags(0XE55230,0x5c10);
	set_frame_size(0XE55230, 0X20, 4, 0);
	define_local_var(0XE55230, 0XE552DE, "[bp-0XC]", "pdwSize");
	add_func    (0XE552DE,0XE5530C);
	set_func_flags(0XE552DE,0x5400);
	set_frame_size(0XE552DE, 0X4, 0, 0);
	add_func    (0XE5530C,0XE55376);
	set_func_flags(0XE5530C,0x5400);
	set_frame_size(0XE5530C, 0X8, 0, 0);
	add_func    (0XE55376,0XE553E5);
	set_func_flags(0XE55376,0x5400);
	set_frame_size(0XE55376, 0XC, 0, 0);
	add_func    (0XE553E5,0XE5542B);
	set_func_flags(0XE553E5,0x5400);
	set_frame_size(0XE553E5, 0XC, 0, 0);
	add_func    (0XE5542B,0XE55444);
	set_func_flags(0XE5542B,0x5400);
	set_frame_size(0XE5542B, 0X4, 0, 0);
	add_func    (0XE55444,0XE554BF);
	set_func_flags(0XE55444,0x5410);
	set_frame_size(0XE55444, 0X8, 4, 0);
	add_func    (0XE554BF,0XE556B3);
	set_func_flags(0XE554BF,0x5c10);
	SetType(0XE554BF, "DWORD __stdcall sub_E554BF(LPVOID lpThreadParameter);");
	set_frame_size(0XE554BF, 0X30, 4, 0X4);
	define_local_var(0XE554BF, 0XE556B3, "[bp-0X24]", "lpMem");
	define_local_var(0XE554BF, 0XE556B3, "[bp-0X1C]", "lpCriticalSection");
	define_local_var(0XE554BF, 0XE556B3, "[bp+0X8]", "lpThreadParameter");
	add_func    (0XE556B3,0XE55840);
	set_func_flags(0XE556B3,0x5c10);
	SetType(0XE556B3, "DWORD __stdcall sub_E556B3(LPVOID lpThreadParameter);");
	set_frame_size(0XE556B3, 0X30, 4, 0X4);
	define_local_var(0XE556B3, 0XE55840, "[bp-0X1C]", "Parameter");
	define_local_var(0XE556B3, 0XE55840, "[bp-0X18]", "hObject");
	define_local_var(0XE556B3, 0XE55840, "[bp-0X14]", "Handles");
	define_local_var(0XE556B3, 0XE55840, "[bp+0X8]", "lpThreadParameter");
	add_func    (0XE55840,0XE55930);
	set_func_flags(0XE55840,0x5410);
	set_frame_size(0XE55840, 0X10, 4, 0);
	add_func    (0XE55930,0XE55962);
	set_func_flags(0XE55930,0x5400);
	set_frame_size(0XE55930, 0X4, 0, 0);
	add_func    (0XE55962,0XE5597E);
	set_func_flags(0XE55962,0x5400);
	set_frame_size(0XE55962, 0X8, 0, 0);
	add_func    (0XE5597E,0XE55999);
	set_func_flags(0XE5597E,0x5400);
	set_frame_size(0XE5597E, 0X4, 0, 0);
	add_func    (0XE55999,0XE559F1);
	set_func_flags(0XE55999,0x5400);
	set_frame_size(0XE55999, 0XC, 0, 0);
	add_func    (0XE559F1,0XE55A46);
	set_func_flags(0XE559F1,0x5410);
	set_frame_size(0XE559F1, 0X4, 4, 0);
	add_func    (0XE55A46,0XE55AB0);
	set_func_flags(0XE55A46,0x5400);
	set_frame_size(0XE55A46, 0X4, 0, 0);
	add_func    (0XE55AB0,0XE55B0E);
	set_func_flags(0XE55AB0,0x5400);
	set_frame_size(0XE55AB0, 0X4, 0, 0);
	add_func    (0XE55B0E,0XE55B20);
	set_func_flags(0XE55B0E,0x5400);
	SetType(0XE55B0E, "int __cdecl mw_GetModuleFileNameW_E55B0E(LPWSTR lpFilename);");
	set_frame_size(0XE55B0E, 0, 0, 0);
	define_local_var(0XE55B0E, 0XE55B20, "[bp+0X4]", "lpFilename");
	add_func    (0XE55B20,0XE55B7C);
	set_func_flags(0XE55B20,0x5400);
	set_frame_size(0XE55B20, 0X8, 0, 0);
	add_func    (0XE55B7C,0XE55BF7);
	set_func_flags(0XE55B7C,0x5400);
	set_frame_size(0XE55B7C, 0X8, 0, 0);
	add_func    (0XE55BF7,0XE55C9D);
	set_func_flags(0XE55BF7,0x5400);
	set_frame_size(0XE55BF7, 0XC, 0, 0);
	add_func    (0XE55C9D,0XE55D61);
	set_func_flags(0XE55C9D,0x5410);
	set_frame_size(0XE55C9D, 0X10, 4, 0);
	add_func    (0XE55D61,0XE55EC2);
	set_func_flags(0XE55D61,0x5410);
	set_frame_size(0XE55D61, 0X26C, 4, 0);
	define_local_var(0XE55D61, 0XE55EC2, "[bp-0X25C]", "FindFileData");
	define_local_var(0XE55D61, 0XE55EC2, "[bp-0XC]", "hFindFile");
	add_func    (0XE55EC2,0XE55FE7);
	set_func_flags(0XE55EC2,0x5410);
	set_frame_size(0XE55EC2, 0X24, 4, 0);
	add_func    (0XE55FE7,0XE56065);
	set_func_flags(0XE55FE7,0x5410);
	set_frame_size(0XE55FE7, 0X8, 4, 0);
	add_func    (0XE56065,0XE5616C);
	set_func_flags(0XE56065,0x5410);
	set_frame_size(0XE56065, 0X18, 4, 0);
	add_func    (0XE5616C,0XE561BE);
	set_func_flags(0XE5616C,0x5410);
	set_frame_size(0XE5616C, 0X4, 4, 0);
	add_func    (0XE561BE,0XE5620D);
	set_func_flags(0XE561BE,0x5410);
	set_frame_size(0XE561BE, 0X4, 4, 0);
	add_func    (0XE5620D,0XE56274);
	set_func_flags(0XE5620D,0x5410);
	set_frame_size(0XE5620D, 0X4, 4, 0);
	add_func    (0XE56274,0XE562A6);
	set_func_flags(0XE56274,0x5400);
	set_frame_size(0XE56274, 0, 0, 0);
	add_func    (0XE562A6,0XE56347);
	set_func_flags(0XE562A6,0x5400);
	set_frame_size(0XE562A6, 0X8, 0, 0);
	add_func    (0XE56347,0XE56432);
	set_func_flags(0XE56347,0x5c10);
	set_frame_size(0XE56347, 0X150, 4, 0);
	add_func    (0XE56432,0XE5644E);
	set_func_flags(0XE56432,0x5400);
	set_frame_size(0XE56432, 0, 0, 0);
	add_func    (0XE5644E,0XE5646A);
	set_func_flags(0XE5644E,0x5400);
	set_frame_size(0XE5644E, 0, 0, 0);
	add_func    (0XE5646A,0XE5669B);
	set_func_flags(0XE5646A,0x5410);
	set_frame_size(0XE5646A, 0X818, 4, 0);
	add_func    (0XE5669B,0XE568EE);
	set_func_flags(0XE5669B,0x5410);
	set_frame_size(0XE5669B, 0X10, 4, 0);
	add_func    (0XE568EE,0XE56A04);
	set_func_flags(0XE568EE,0x5410);
	set_frame_size(0XE568EE, 0X144, 4, 0);
	add_func    (0XE56A04,0XE56F2A);
	set_func_flags(0XE56A04,0x5410);
	set_frame_size(0XE56A04, 0X20, 4, 0);
	add_func    (0XE56F2A,0XE57447);
	set_func_flags(0XE56F2A,0x5410);
	set_frame_size(0XE56F2A, 0X20, 4, 0);
	add_func    (0XE57447,0XE5752A);
	set_func_flags(0XE57447,0x5410);
	set_frame_size(0XE57447, 0X18, 4, 0);
	add_func    (0XE5752A,0XE575EF);
	set_func_flags(0XE5752A,0x5410);
	set_frame_size(0XE5752A, 0, 4, 0);
	add_func    (0XE575EF,0XE57686);
	set_func_flags(0XE575EF,0x5400);
	SetType(0XE575EF, "int __cdecl sub_E575EF(LPVOID lpMem);");
	set_frame_size(0XE575EF, 0X4, 0, 0);
	define_local_var(0XE575EF, 0XE57686, "[bp+0X4]", "lpMem");
	add_func    (0XE57686,0XE57753);
	set_func_flags(0XE57686,0x5410);
	set_frame_size(0XE57686, 0X18, 4, 0);
	add_func    (0XE57753,0XE577DF);
	set_func_flags(0XE57753,0x5410);
	set_frame_size(0XE57753, 0X78, 4, 0);
	add_func    (0XE577DF,0XE578A3);
	set_func_flags(0XE577DF,0x5410);
	set_frame_size(0XE577DF, 0X28, 4, 0);
	define_local_var(0XE577DF, 0XE578A3, "[bp-0X20]", "SystemTime");
	define_local_var(0XE577DF, 0XE578A3, "[bp-0X10]", "FileTime");
	define_local_var(0XE577DF, 0XE578A3, "[bp-0X8]", "PerformanceCount");
	add_func    (0XE578A3,0XE578FE);
	set_func_flags(0XE578A3,0x5400);
	set_frame_size(0XE578A3, 0X10, 0, 0);
	add_func    (0XE578FE,0XE57928);
	set_func_flags(0XE578FE,0x5400);
	set_frame_size(0XE578FE, 0X4, 0, 0);
	add_func    (0XE57928,0XE5793B);
	set_func_flags(0XE57928,0x5400);
	set_frame_size(0XE57928, 0, 0, 0);
	add_func    (0XE5793B,0XE57951);
	set_func_flags(0XE5793B,0x5400);
	set_frame_size(0XE5793B, 0, 0, 0);
	add_func    (0XE57951,0XE5797A);
	set_func_flags(0XE57951,0x5400);
	set_frame_size(0XE57951, 0, 0, 0);
	add_func    (0XE5797A,0XE57A0A);
	set_func_flags(0XE5797A,0x5410);
	set_frame_size(0XE5797A, 0X10, 4, 0);
	add_func    (0XE57A0A,0XE57A8F);
	set_func_flags(0XE57A0A,0x5410);
	set_frame_size(0XE57A0A, 0X10, 4, 0);
	add_func    (0XE57A8F,0XE57B16);
	set_func_flags(0XE57A8F,0x5410);
	set_frame_size(0XE57A8F, 0X18, 4, 0);
	add_func    (0XE57B16,0XE57E19);
	set_func_flags(0XE57B16,0x5410);
	set_frame_size(0XE57B16, 0X3C, 4, 0);
	add_func    (0XE57E19,0XE57E85);
	set_func_flags(0XE57E19,0x5410);
	set_frame_size(0XE57E19, 0X10, 4, 0);
	add_func    (0XE57E85,0XE57EFA);
	set_func_flags(0XE57E85,0x5410);
	set_frame_size(0XE57E85, 0XC, 4, 0);
	add_func    (0XE57EFA,0XE57FB9);
	set_func_flags(0XE57EFA,0x5410);
	set_frame_size(0XE57EFA, 0X24, 4, 0);
	add_func    (0XE57FB9,0XE58008);
	set_func_flags(0XE57FB9,0x5400);
	set_frame_size(0XE57FB9, 0X4, 0, 0);
	add_func    (0XE58008,0XE58052);
	set_func_flags(0XE58008,0x5400);
	set_frame_size(0XE58008, 0, 0, 0);
	add_func    (0XE58052,0XE580A8);
	set_func_flags(0XE58052,0x5400);
	set_frame_size(0XE58052, 0X8, 0, 0);
	add_func    (0XE580A8,0XE580E3);
	set_func_flags(0XE580A8,0x5400);
	set_frame_size(0XE580A8, 0, 0, 0);
	add_func    (0XE580E3,0XE58104);
	set_func_flags(0XE580E3,0x5400);
	set_frame_size(0XE580E3, 0, 0, 0);
	add_func    (0XE58104,0XE582EE);
	set_func_flags(0XE58104,0x5410);
	set_frame_size(0XE58104, 0X14, 4, 0);
	add_func    (0XE582EE,0XE5848A);
	set_func_flags(0XE582EE,0x5410);
	set_frame_size(0XE582EE, 0X12C, 4, 0);
	add_func    (0XE5848A,0XE585D9);
	set_func_flags(0XE5848A,0x5410);
	set_frame_size(0XE5848A, 0X24, 4, 0);
	add_func    (0XE585D9,0XE58601);
	set_func_flags(0XE585D9,0x5400);
	set_frame_size(0XE585D9, 0, 0, 0);
	add_func    (0XE58601,0XE5861B);
	set_func_flags(0XE58601,0x5400);
	set_frame_size(0XE58601, 0, 0, 0);
	add_func    (0XE5861B,0XE58633);
	set_func_flags(0XE5861B,0x5400);
	set_frame_size(0XE5861B, 0, 0, 0);
	add_func    (0XE58633,0XE5868F);
	set_func_flags(0XE58633,0x5400);
	set_frame_size(0XE58633, 0X4, 0, 0);
	add_func    (0XE5868F,0XE586B7);
	set_func_flags(0XE5868F,0x5400);
	set_frame_size(0XE5868F, 0X4, 0, 0);
	add_func    (0XE586B7,0XE58782);
	set_func_flags(0XE586B7,0x5410);
	SetType(0XE586B7, "int __cdecl sub_E586B7(HANDLE hFile);");
	set_frame_size(0XE586B7, 0X24, 4, 0);
	define_local_var(0XE586B7, 0XE58782, "[bp-0X1C]", "nNumberOfBytesToWrite");
	define_local_var(0XE586B7, 0XE58782, "[bp-0X14]", "NewFilePointer");
	define_local_var(0XE586B7, 0XE58782, "[bp-0X8]", "NumberOfBytesWritten");
	define_local_var(0XE586B7, 0XE58782, "[bp+0X8]", "hFile");
	add_func    (0XE58782,0XE58AF1);
	set_func_flags(0XE58782,0x5410);
	SetType(0XE58782, "int __cdecl sub_E58782(int, LPCWSTR lpFileName, LPCWSTR, char);");
	set_frame_size(0XE58782, 0X298, 4, 0);
	define_local_var(0XE58782, 0XE58AF1, "[bp-0X28]", "NumberOfBytesWritten");
	define_local_var(0XE58782, 0XE58AF1, "[bp-0X1C]", "dwFlagsAndAttributes");
	define_local_var(0XE58782, 0XE58AF1, "[bp-0X18]", "liDistanceToMove");
	define_local_var(0XE58782, 0XE58AF1, "[bp-0X10]", "nNumberOfBytesToRead");
	define_local_var(0XE58782, 0XE58AF1, "[bp-0XC]", "nNumberOfBytesToWrite");
	define_local_var(0XE58782, 0XE58AF1, "[bp-0X8]", "hFile");
	define_local_var(0XE58782, 0XE58AF1, "[bp-0X4]", "hObject");
	define_local_var(0XE58782, 0XE58AF1, "[bp+0XC]", "lpFileName");
	add_func    (0XE58AF1,0XE58B60);
	set_func_flags(0XE58AF1,0x5410);
	SetType(0XE58AF1, "int __cdecl sub_E58AF1(HANDLE hFile, LPCVOID lpBuffer);");
	set_frame_size(0XE58AF1, 0X18, 4, 0);
	define_local_var(0XE58AF1, 0XE58B60, "[bp-0X10]", "NewFilePointer");
	define_local_var(0XE58AF1, 0XE58B60, "[bp-0X4]", "NumberOfBytesWritten");
	define_local_var(0XE58AF1, 0XE58B60, "[bp+0X8]", "hFile");
	define_local_var(0XE58AF1, 0XE58B60, "[bp+0XC]", "lpBuffer");
	add_func    (0XE58B60,0XE58C42);
	set_func_flags(0XE58B60,0x5410);
	SetType(0XE58B60, "int __cdecl sub_E58B60(HANDLE hFile, int, LPVOID lpBuffer);");
	set_frame_size(0XE58B60, 0X34, 4, 0);
	define_local_var(0XE58B60, 0XE58C42, "[bp-0X14]", "NewFilePointer");
	define_local_var(0XE58B60, 0XE58C42, "[bp-0X8]", "NumberOfBytesRead");
	define_local_var(0XE58B60, 0XE58C42, "[bp+0X8]", "hFile");
	define_local_var(0XE58B60, 0XE58C42, "[bp+0X10]", "lpBuffer");
	add_func    (0XE58C42,0XE58EBE);
	set_func_flags(0XE58C42,0x5410);
	SetType(0XE58C42, "int __cdecl sub_E58C42(int, LPCWSTR lpExistingFileName, LPCWSTR lpNewFileName, char);");
	set_frame_size(0XE58C42, 0X168, 4, 0);
	define_local_var(0XE58C42, 0XE58EBE, "[bp-0X28]", "NumberOfBytesWritten");
	define_local_var(0XE58C42, 0XE58EBE, "[bp-0X20]", "liDistanceToMove");
	define_local_var(0XE58C42, 0XE58EBE, "[bp-0X14]", "lpBuffer");
	define_local_var(0XE58C42, 0XE58EBE, "[bp-0X4]", "hFile");
	define_local_var(0XE58C42, 0XE58EBE, "[bp+0XC]", "lpExistingFileName");
	define_local_var(0XE58C42, 0XE58EBE, "[bp+0X10]", "lpNewFileName");
	add_func    (0XE58EBE,0XE58FA9);
	set_func_flags(0XE58EBE,0x5410);
	set_frame_size(0XE58EBE, 0X28, 4, 0);
	define_local_var(0XE58EBE, 0XE58FA9, "[bp-0X20]", "FileSize");
	define_local_var(0XE58EBE, 0XE58FA9, "[bp-0XC]", "dwFileAttributes");
	define_local_var(0XE58EBE, 0XE58FA9, "[bp+0X10]", "lpFileName");
	add_func    (0XE58FA9,0XE58FD7);
	set_func_flags(0XE58FA9,0x5400);
	set_frame_size(0XE58FA9, 0, 0, 0);
	add_func    (0XE58FD7,0XE58FFC);
	set_func_flags(0XE58FD7,0x5410);
	set_frame_size(0XE58FD7, 0, 4, 0);
	add_func    (0XE58FFC,0XE59041);
	set_func_flags(0XE58FFC,0x5400);
	set_frame_size(0XE58FFC, 0X8, 0, 0);
	add_func    (0XE59041,0XE5905B);
	set_func_flags(0XE59041,0x5400);
	SetType(0XE59041, "int __cdecl mw_HeapAlloc_409041(SIZE_T dwBytes);");
	set_frame_size(0XE59041, 0, 0, 0);
	define_local_var(0XE59041, 0XE5905B, "[bp+0X4]", "dwBytes");
	add_func    (0XE5905B,0XE5907A);
	set_func_flags(0XE5905B,0x5400);
	set_frame_size(0XE5905B, 0, 0, 0);
	add_func    (0XE5907A,0XE590A1);
	set_func_flags(0XE5907A,0x5400);
	SetType(0XE5907A, "int __cdecl sub_E5907A(LPVOID lpMem, SIZE_T dwBytes);");
	set_frame_size(0XE5907A, 0, 0, 0);
	define_local_var(0XE5907A, 0XE590A1, "[bp+0X4]", "lpMem");
	define_local_var(0XE5907A, 0XE590A1, "[bp+0X8]", "dwBytes");
	add_func    (0XE590A1,0XE590B5);
	set_func_flags(0XE590A1,0x5400);
	SetType(0XE590A1, "int __cdecl mw_HeapFree(LPVOID lpMem);");
	set_frame_size(0XE590A1, 0, 0, 0);
	define_local_var(0XE590A1, 0XE590B5, "[bp+0X4]", "lpMem");
	add_func    (0XE590B5,0XE590C6);
	set_func_flags(0XE590B5,0x5400);
	set_frame_size(0XE590B5, 0, 0, 0);
	add_func    (0XE590C6,0XE590DD);
	set_func_flags(0XE590C6,0x5400);
	set_frame_size(0XE590C6, 0, 0, 0);
	add_func    (0XE590DD,0XE59116);
	set_func_flags(0XE590DD,0x5400);
	set_frame_size(0XE590DD, 0X8, 0, 0);
	add_func    (0XE59116,0XE59139);
	set_func_flags(0XE59116,0x5400);
	set_frame_size(0XE59116, 0, 0, 0);
	add_func    (0XE59139,0XE59163);
	set_func_flags(0XE59139,0x5400);
	set_frame_size(0XE59139, 0, 0, 0);
	add_func    (0XE59163,0XE591C0);
	set_func_flags(0XE59163,0x5400);
	set_frame_size(0XE59163, 0X8, 0, 0);
	add_func    (0XE591C0,0XE59216);
	set_func_flags(0XE591C0,0x5410);
	set_frame_size(0XE591C0, 0X4, 4, 0);
	add_func    (0XE59216,0XE5924D);
	set_func_flags(0XE59216,0x5410);
	set_frame_size(0XE59216, 0, 4, 0);
	add_func    (0XE5924D,0XE5927D);
	set_func_flags(0XE5924D,0x5410);
	set_frame_size(0XE5924D, 0, 4, 0);
	add_func    (0XE5927D,0XE5929B);
	set_func_flags(0XE5927D,0x5400);
	set_frame_size(0XE5927D, 0, 0, 0);
	add_func    (0XE5929B,0XE592B4);
	set_func_flags(0XE5929B,0x5400);
	set_frame_size(0XE5929B, 0, 0, 0);
	add_func    (0XE592B4,0XE592E1);
	set_func_flags(0XE592B4,0x5400);
	set_frame_size(0XE592B4, 0X4, 0, 0);
	add_func    (0XE592E1,0XE5930F);
	set_func_flags(0XE592E1,0x5400);
	set_frame_size(0XE592E1, 0X4, 0, 0);
	add_func    (0XE5930F,0XE59344);
	set_func_flags(0XE5930F,0x5400);
	set_frame_size(0XE5930F, 0X4, 0, 0);
	add_func    (0XE59344,0XE594D9);
	set_func_flags(0XE59344,0x5410);
	set_frame_size(0XE59344, 0X4, 4, 0);
	add_func    (0XE594D9,0XE594F2);
	set_func_flags(0XE594D9,0x5400);
	set_frame_size(0XE594D9, 0X4, 0, 0);
	add_func    (0XE594F2,0XE594FD);
	set_func_flags(0XE594F2,0x1401);
	add_func    (0XE594FE,0XE59508);
	set_func_flags(0XE594FE,0x5400);
	set_frame_size(0XE594FE, 0, 0, 0);
	add_func    (0XE59508,0XE59526);
	set_func_flags(0XE59508,0x5400);
	set_frame_size(0XE59508, 0, 0, 0);
	add_func    (0XE59530,0XE59598);
	set_func_flags(0XE59530,0x5400);
	set_frame_size(0XE59530, 0X8, 0, 0X10);
}

//------------------------------------------------------------------------
// Information about functions

static Functions(void) {

	Functions_0();
}

//------------------------------------------------------------------------
// Information about segment registers

static SegRegs(void) {
	split_sreg_range(0XE51000,"es",0,3);
	split_sreg_range(0XE5A000,"es",0,3);
	split_sreg_range(0XE5A1E0,"es",0,3);
	split_sreg_range(0XE5B000,"es",0,3);
	split_sreg_range(0XE5F000,"es",0,3);
	split_sreg_range(0XE51000,"ss",0,3);
	split_sreg_range(0XE5A000,"ss",0,3);
	split_sreg_range(0XE5A1E0,"ss",0,3);
	split_sreg_range(0XE5B000,"ss",0,3);
	split_sreg_range(0XE5F000,"ss",0,3);
	split_sreg_range(0XE51000,"ds",0X3,3);
	split_sreg_range(0XE52FA7,"ds",0X3,3);
	split_sreg_range(0XE5A000,"ds",0X3,3);
	split_sreg_range(0XE5A1E0,"ds",0X3,3);
	split_sreg_range(0XE5B000,"ds",0X3,3);
	split_sreg_range(0XE5F000,"ds",0X3,3);
	split_sreg_range(0XE51000,"fs",0XFFFFFFFF,3);
	split_sreg_range(0XE5A000,"fs",0XFFFFFFFF,3);
	split_sreg_range(0XE5A1E0,"fs",0XFFFFFFFF,3);
	split_sreg_range(0XE5B000,"fs",0XFFFFFFFF,3);
	split_sreg_range(0XE5F000,"fs",0XFFFFFFFF,3);
	split_sreg_range(0XE51000,"gs",0XFFFFFFFF,3);
	split_sreg_range(0XE5A000,"gs",0XFFFFFFFF,3);
	split_sreg_range(0XE5A1E0,"gs",0XFFFFFFFF,3);
	split_sreg_range(0XE5B000,"gs",0XFFFFFFFF,3);
	split_sreg_range(0XE5F000,"gs",0XFFFFFFFF,3);
}

//------------------------------------------------------------------------
// Information about all patched bytes:

static Patches(void) {
}

//------------------------------------------------------------------------
// Call all byte feature functions:

static Bytes(void) {
	Bytes_0();
	Bytes_1();
	Bytes_2();
        end_type_updating(UTP_STRUCT);
}

// End of file.
